{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":0},{"_id":"source/img/bg3.png","path":"img/bg3.png","modified":0,"renderable":0},{"_id":"source/img/bg2.png","path":"img/bg2.png","modified":0,"renderable":0},{"_id":"source/img/foc.png","path":"img/foc.png","modified":0,"renderable":0},{"_id":"source/img/i.ico","path":"img/i.ico","modified":0,"renderable":0},{"_id":"source/img/t.png","path":"img/t.png","modified":0,"renderable":0},{"_id":"source/img/we.png","path":"img/we.png","modified":0,"renderable":0},{"_id":"source/img/bg/bg.jpg","path":"img/bg/bg.jpg","modified":0,"renderable":0},{"_id":"source/img/bg/bg4.jpg","path":"img/bg/bg4.jpg","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat1.png","path":"img/eatImage/eat1.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat10.png","path":"img/eatImage/eat10.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat11.png","path":"img/eatImage/eat11.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat12.png","path":"img/eatImage/eat12.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat13.png","path":"img/eatImage/eat13.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat14.png","path":"img/eatImage/eat14.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat15.png","path":"img/eatImage/eat15.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat2.png","path":"img/eatImage/eat2.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat3.png","path":"img/eatImage/eat3.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat4.png","path":"img/eatImage/eat4.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat5.png","path":"img/eatImage/eat5.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat6.png","path":"img/eatImage/eat6.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat7.png","path":"img/eatImage/eat7.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat8.png","path":"img/eatImage/eat8.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eat9.png","path":"img/eatImage/eat9.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/eatbg.png","path":"img/eatImage/eatbg.png","modified":0,"renderable":0},{"_id":"source/img/eatImage/feat.png","path":"img/eatImage/feat.png","modified":0,"renderable":0},{"_id":"source/img/pic/1.jpg","path":"img/pic/1.jpg","modified":0,"renderable":0},{"_id":"source/img/pic/caozuo01.png","path":"img/pic/caozuo01.png","modified":0,"renderable":0},{"_id":"source/img/pic/dong.gif","path":"img/pic/dong.gif","modified":0,"renderable":0},{"_id":"source/img/pic/bg5.jpg","path":"img/pic/bg5.jpg","modified":0,"renderable":0},{"_id":"source/img/pic/c01.png","path":"img/pic/c01.png","modified":0,"renderable":0},{"_id":"source/img/pic/jiao.gif","path":"img/pic/jiao.gif","modified":0,"renderable":0},{"_id":"source/img/pic/color01.png","path":"img/pic/color01.png","modified":0,"renderable":0},{"_id":"source/img/pic/lvxing.png","path":"img/pic/lvxing.png","modified":0,"renderable":0},{"_id":"source/img/pic/palouti.jpg","path":"img/pic/palouti.jpg","modified":0,"renderable":0},{"_id":"source/img/pic/ico01.png","path":"img/pic/ico01.png","modified":0,"renderable":0},{"_id":"source/img/pic/phone01.png","path":"img/pic/phone01.png","modified":0,"renderable":0},{"_id":"source/img/pic/png01.png","path":"img/pic/png01.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray01.png","path":"img/pic/ray01.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray02.png","path":"img/pic/ray02.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray03.png","path":"img/pic/ray03.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray05.png","path":"img/pic/ray05.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray04.png","path":"img/pic/ray04.png","modified":0,"renderable":0},{"_id":"source/img/pic/zifuchuan.jpg","path":"img/pic/zifuchuan.jpg","modified":0,"renderable":0},{"_id":"source/img/scapeImage/ffj.png","path":"img/scapeImage/ffj.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape1.png","path":"img/scapeImage/scape1.png","modified":0,"renderable":0},{"_id":"source/img/pic/ray06.png","path":"img/pic/ray06.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape10.png","path":"img/scapeImage/scape10.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape11.png","path":"img/scapeImage/scape11.png","modified":0,"renderable":0},{"_id":"source/img/pic/ziyuan01.jpg","path":"img/pic/ziyuan01.jpg","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape12.png","path":"img/scapeImage/scape12.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape13.png","path":"img/scapeImage/scape13.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape14.png","path":"img/scapeImage/scape14.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape16.png","path":"img/scapeImage/scape16.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape15.png","path":"img/scapeImage/scape15.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape17.png","path":"img/scapeImage/scape17.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape18.png","path":"img/scapeImage/scape18.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape19.png","path":"img/scapeImage/scape19.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape2.png","path":"img/scapeImage/scape2.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape20.png","path":"img/scapeImage/scape20.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape3.png","path":"img/scapeImage/scape3.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape4.png","path":"img/scapeImage/scape4.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape5.png","path":"img/scapeImage/scape5.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape7.png","path":"img/scapeImage/scape7.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape6.png","path":"img/scapeImage/scape6.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape8.png","path":"img/scapeImage/scape8.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scape9.png","path":"img/scapeImage/scape9.png","modified":0,"renderable":0},{"_id":"source/img/scapeImage/scapebg.png","path":"img/scapeImage/scapebg.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/旅行终点站.md","hash":"d743a9579907b0265bda7a92845985b59ea14c24","modified":1633145479828},{"_id":"source/about/index.md","hash":"2c05388fafee8f2e4e8209cc51b44c469cc1b118","modified":1633066351000},{"_id":"source/_posts/杨辉三角.md","hash":"82608b5786e5575b2771e7cafa659128ccc855d0","modified":1633066351000},{"_id":"source/_posts/字符串.md","hash":"e7eec60f4c4e2a3deeff1d091ee18eb0f7032f04","modified":1633066351000},{"_id":"source/_posts/爬楼梯.md","hash":"ad9ec4ae48127d5c8857a5301bca68cea6f3ab31","modified":1633066351000},{"_id":"source/categories/index.md","hash":"574a15f0f79fa9e295bbf6141c93332d6c8b4579","modified":1633066351000},{"_id":"source/guestbook/index.md","hash":"40fc2dabbf84e80a6a5fec961f336da6d42db7b0","modified":1633066351000},{"_id":"source/_posts/资源整合.md","hash":"cda05090194a43b2001edb323ce76ffe85cb5b98","modified":1633145580011},{"_id":"source/img/1.jpg","hash":"5d3f4c4eeec2627cb4dc01825562b4bf896be606","modified":1633066351000},{"_id":"source/img/foc.png","hash":"9ee3c94935ef83ab41154edcfeb7f7ceef138c35","modified":1633066351000},{"_id":"source/img/i.ico","hash":"79f3e473ff30ee3ccb7ac15a726bee51cb064509","modified":1633066351000},{"_id":"source/pic/index.md","hash":"ea503bc06eda547347bda6a3b890a747db090b45","modified":1633066351000},{"_id":"source/tags/index.md","hash":"196ee5b800e330dc5efc9b0a204b836d22c77a53","modified":1633066351000},{"_id":"source/movies/index.md","hash":"df2ce5a5a3c8c387694270a2dea5a6e99a63cbe2","modified":1633066351000},{"_id":"source/img/t.png","hash":"7beb7a46c50f8b849b63123cabe2b0bc2e3428bc","modified":1633066351000},{"_id":"source/img/pic/1.jpg","hash":"5d3f4c4eeec2627cb4dc01825562b4bf896be606","modified":1633066351000},{"_id":"source/img/pic/jiao.gif","hash":"854e91975cf2961f783907b9ced63a9585207474","modified":1633066351000},{"_id":"source/img/pic/ray05.png","hash":"e50d53c1faa841575007d86c681228ec256178bc","modified":1633143555153},{"_id":"source/img/pic/zifuchuan.jpg","hash":"bfcbf8014c29436375261c8f74f3c0c57aebcba4","modified":1633066351000},{"_id":"source/img/pic/ray04.png","hash":"3858a3850acc9c6c0d13585c29a169c621fcf0e5","modified":1633143173278},{"_id":"source/img/scapeImage/scape10.png","hash":"e95fb8ef15d150f8bc4c8af0dd0deef769dfc725","modified":1633066351000},{"_id":"source/img/pic/ray06.png","hash":"e7df5bacecaa38958fcb36e5c0d9178c749fe67d","modified":1633143877591},{"_id":"source/img/scapeImage/scape4.png","hash":"122fcdd6ed1cfc3c004732d0c67c3594a556e61a","modified":1633066351000},{"_id":"source/pic/picture/eat.md","hash":"8329ec261f07a2d5c86c4d75e0d310085d6a361f","modified":1633066351000},{"_id":"source/pic/picture/scape.md","hash":"e19e5d44496367f209cdc7fe7cb1d22e2fe19fbd","modified":1633066351000},{"_id":"source/img/bg3.png","hash":"da6441306f552e78b43240e81b28850d108335a0","modified":1633066351000},{"_id":"source/img/eatImage/eat15.png","hash":"e7ff0106e934bd276e39af612eb7082726d1b564","modified":1633066351000},{"_id":"source/img/eatImage/eat5.png","hash":"eac81e46e4e0cb4a47b65e0e31fe70091fcf5d44","modified":1633066351000},{"_id":"source/img/eatImage/eat8.png","hash":"aea4f3f2583291e428917523c7876724b0b5c5ab","modified":1633066351000},{"_id":"source/img/pic/lvxing.png","hash":"27392ee76fb447cb7476e5586323c4cf3ac1cd6f","modified":1633066351000},{"_id":"source/img/pic/palouti.jpg","hash":"a61ed194bbf15b9b3961745e034eb98312005527","modified":1633066351000},{"_id":"source/img/scapeImage/scape14.png","hash":"520994fd8d79963220eab79d33659f1d384f3d1c","modified":1633066351000},{"_id":"source/img/scapeImage/scape15.png","hash":"c84c490646586d0c0dd057db90108c6e263fa41e","modified":1633066351000},{"_id":"source/img/scapeImage/scape2.png","hash":"9bcbd2aeb5b577688f62a1a6a962de2e63f451b7","modified":1633066351000},{"_id":"source/img/scapeImage/scape3.png","hash":"4d9254a3c9a239a17dceeb22fb67b6d0a1f6aeb0","modified":1633066351000},{"_id":"source/img/scapeImage/scape5.png","hash":"b7f23f7f706a45681e19241d45c45a06fae6ddf1","modified":1633066351000},{"_id":"source/img/scapeImage/scape9.png","hash":"fef6e0b5ab8045ee545465122e4384319746cb4b","modified":1633066351000},{"_id":"source/img/bg2.png","hash":"445453bbb07756b5daaf88b9c6d3f706e2781461","modified":1633066351000},{"_id":"source/img/bg/bg.jpg","hash":"53888afb348347b7ebe86e49d9aaa7334c0c7e05","modified":1633066351000},{"_id":"source/img/eatImage/eat13.png","hash":"8c1cc731dbe8cae899079988c39cbff8f879b7ca","modified":1633066351000},{"_id":"source/img/eatImage/eat2.png","hash":"6fe232c2b3e19e86b7ef88669c5d7912f25b15d5","modified":1633066351000},{"_id":"source/img/eatImage/eat4.png","hash":"590e1fa55e3a033f23d2303955a4d502bd364c40","modified":1633066351000},{"_id":"source/img/eatImage/eat3.png","hash":"adfb672326fa9873dc07aa74526b1fab9a053971","modified":1633066351000},{"_id":"source/img/pic/dong.gif","hash":"91a1ea3d86aa853e3e4818d801c3c37aabb4356d","modified":1633066351000},{"_id":"source/img/pic/ico01.png","hash":"5defef4dd6f7f55721e0962db7ca92241aba1ae8","modified":1632534903541},{"_id":"source/img/pic/ray01.png","hash":"da133c5c136d6c48db9e6ee5893b782e9bc5d813","modified":1633142747947},{"_id":"source/img/pic/ray02.png","hash":"4b1c0de2ae88bd7a309038c41da7cde3d444ae7c","modified":1633143766119},{"_id":"source/img/pic/ray03.png","hash":"6ff6f5e190ecedbf7dd2f36857a6486c0642401c","modified":1633142986073},{"_id":"source/img/scapeImage/ffj.png","hash":"6169d7374f47b382a8dcdbbd80e0eca1f482cd1f","modified":1633066351000},{"_id":"source/img/scapeImage/scape1.png","hash":"7f3bb19c60af7565506b6d9c5eaff8034a3194a1","modified":1633066351000},{"_id":"source/img/scapeImage/scape19.png","hash":"b33e19bd3c12949195ed66e5e14698426b10591d","modified":1633066351000},{"_id":"source/img/we.png","hash":"d2701abd5a1b1d95c1f1df28aad731dd8f00254b","modified":1633066351000},{"_id":"source/img/eatImage/eat6.png","hash":"dc9ef47ad3c108dfde2a67d1eb82b753f0073401","modified":1633066351000},{"_id":"source/img/eatImage/feat.png","hash":"447eb50a282b9fe8db5dae82a79e0c7e675a3371","modified":1633066351000},{"_id":"source/img/eatImage/eatbg.png","hash":"568514f851c7aeda3d1407340e2bc8325aa78e3e","modified":1633066351000},{"_id":"source/img/scapeImage/scapebg.png","hash":"82c0a40f1ad3233c612ce42bbe7f22f0e297ccf6","modified":1633066351000},{"_id":"source/img/eatImage/eat9.png","hash":"71e0138ca47a65b7e3346f77417134ed39dc1c19","modified":1633066351000},{"_id":"source/img/pic/caozuo01.png","hash":"323362dad0f10405925b539822ef6591730b5303","modified":1632536114825},{"_id":"source/img/scapeImage/scape11.png","hash":"414f0668035adae496605e91c8ec38d25942146d","modified":1633066351000},{"_id":"source/img/scapeImage/scape13.png","hash":"68f39de2fc5b42829c98e199edbf389728dbffb7","modified":1633066351000},{"_id":"source/img/eatImage/eat12.png","hash":"366f2bb6b679694dba35bbc874b5c542b961f454","modified":1633066351000},{"_id":"source/img/pic/png01.png","hash":"d0a64b3b64cfb8a62c06029faa7693d69fc0c0c4","modified":1632535184089},{"_id":"source/img/scapeImage/scape12.png","hash":"8cbe54fab9764b4f159c5701e2608e174e3a9b0d","modified":1633066351000},{"_id":"source/img/eatImage/eat11.png","hash":"1dc6494e8bf16a0ca547c3b1d239b3515d1eada3","modified":1633066351000},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"a1d94584c2c0a5a503e69e1ea3456c9bedce9410","modified":1633083618331},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"cedd13fcd8c75a68742265dd8eced4087e940ffd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"459d6f3200863021bee1fe72a719aef236fb4090","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"63d1a594969b7b5b97e1babebc7b85ef07c02e4f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"82aa988527a11835e7ac86ce4f23b8cd20014dfa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"741e522b2387f94764a73844e7b084cc7e927c54","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"7d378e328a53cc99d5acc9682dce53f5eb61537d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"1377952022ee0a9eaa7a2fd1098f1571efc468d9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"6f2608c4d93d3d10ae6b2cd7f8918f303f024321","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"018aa446265fe627301b1d53d7cba4f4ff1960ac","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"4cc2d517195c8779471d326ada09f9371cbad4dd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"8dafc2dcd8c33f70a546fee443f0b6d80b3cd243","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"65f2442e04c4defd16e7c1e67701d3bb41d9577a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"21556f9cb412ddc500ad12ecfd419f3ea6c9f663","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"b816ded1451f28c7c54151ffe6c259b110253ae3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"40c3f64422205a24e68ce1ad8fe8163f24fdd525","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"889ef16fa34a39e5533bc170e62f20f3450cc522","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"4def0aab9e2172ad1f29abd1535d8e08ff23aa0b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"c205b9fd72b2fe19e6d15c5b5ab0fb38c653032e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"24370508ee87f14418e8f06e9d79ad8c52a342c4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"b53a2d4f9c37b375a4446d2273dcfb7712d91b3e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"92f81a437c9db49f7ebcf608bc09488ecdb55a21","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"4c3c5cb69b3aead8c232cb0fbc251929f28aad75","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"5b404356f311d2ee36478291ca3553210867b738","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"933cb710d2dbcea25c6426a57c6f49d2f48b792c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"0366c658cdcff839aa1df2e2d252a03a53fd427e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"27afd2274bd5f2cbbf1bad9f0afe2b2b72c213ca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"d50e5c22cd6bc3c378bc581918136746cfa3447f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"b5525891f6affd02c1ea3b2327c026882efe428b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"85e72c70a0cef29e40be1968f5d23b06c6f8e3aa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"fa4b87e7b29bdd1f09eb1a30e06ba74b224f0ba2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"eda47f3e807a466ba8275627ea936c5100c43818","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"e211efbd1952d4b1b881287aa43423133c1d166e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"7feb755ca7c22da36bbad11e74ecd95fdcf3b879","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"98235fcda3b87ad6f7e91eafbed94d0d6ae847ca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"d748951d9fbcd04dda839085af78b01b8fa04cba","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"978c397d0966eaf9e6e2afd13866f8f4900b509f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"2c5fb77c448ce0a734040c8ce532b28fed688899","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"4e629f510b73f998ab208b739c5bd7dcd168d1a7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"f59a9a0059d5261251bdd6de45aa97dd2d11e633","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"b0488ceacde74af139d66c8db5cb36cc21737b9b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"2cc49d3f6a6beb9f7bff93e292f88aa5681da1d0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"97fec1e814f88237862f4d800a35362b802f6625","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"917e0e399e117217184ca63d3eb5c4843bcccf7b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"6befe4c51b86d0c1de130beeecad9e28d6442713","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"1c3f9d7efc3b9dfcfa8926a1132d0c44ffc7d4b2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"f168f5c669978f633abe118cdcc4a12cfc883c01","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"f741e85295ce15c70a6027ec15a542636dd5dcca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"400ce038548d6f9ddb486150c724c87b6923a88b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0b7571919e8ad51285deda56a1868fccf8c563d7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"c46a932257212f82e4a9974fbbc5de8878c8b383","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"2e52c64e89f16267596a8465841dd46f51820982","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"16378d8646ea3f4ac99c18f0296dd85b13f9d775","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"36f3c603d2a2ecddaa6d2675a89d76ad94968f72","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"2b45fe09d5b591dca156b76dae99981f8d8e1c61","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"f9b00ead54573ba6e6eb33481588af144aab648d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"a47d8f9f593091cc91192c0c49deaa2c0d2317fd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"b443d6b16baf3ea250041342cc0361a42a412b7f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"34088a15655704d12e9b1807b47b3f6a860c9eec","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"a2bc2601b7e0ae5caf1fc51a07390562d928620a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"8c0726fb8d9a497d2f900b0be2845efaa68e3d87","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"89cbcc8e087788ecec18b5fa58710afacdb7d080","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"e0e7065124ef0d99f8322a47bc47838982e04ad0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":499162500000},{"_id":"source/img/eatImage/eat1.png","hash":"51083095b4a1fce08e3561af282bbc004ef51dde","modified":1633066351000},{"_id":"source/img/eatImage/eat14.png","hash":"4b08160e1600aab46118a10e991cf38bfbb8c630","modified":1633066351000},{"_id":"source/img/scapeImage/scape18.png","hash":"604750c2d8f2d8b2b464f279977d710193109e0c","modified":1633066351000},{"_id":"source/img/eatImage/eat10.png","hash":"782374eb2900160ecd49a1111270e7ef387e2381","modified":1633066351000},{"_id":"source/img/eatImage/eat7.png","hash":"fb8c60a6816675a621ad9a169ded6c13929e1b98","modified":1633066351000},{"_id":"source/img/pic/color01.png","hash":"19c713d44d5f67246a93a209d2c107b0aaa09f0b","modified":1632536904366},{"_id":"source/img/scapeImage/scape16.png","hash":"319eaa000102ba6e353b44fac898375241cbffb7","modified":1633066351000},{"_id":"source/img/pic/ziyuan01.jpg","hash":"f0108d6e790119cf79deb48003dcd8f91a930ab3","modified":1633144788833},{"_id":"source/img/scapeImage/scape17.png","hash":"eff52c273e4d19d97a1a780bc9ba605841811451","modified":1633066351000},{"_id":"source/img/scapeImage/scape20.png","hash":"4cdb235242caea25c58ad4c16419a1be520c2244","modified":1633066351000},{"_id":"source/img/scapeImage/scape8.png","hash":"9334d879e12ed72a0071c3440e792c94738c8457","modified":1633066351000},{"_id":"source/img/bg/bg4.jpg","hash":"49630f7386ecb19b5af52b5495d04a6ac2d2bdf1","modified":1633066351000},{"_id":"source/img/scapeImage/scape6.png","hash":"b05633fff342e4c6cfc5ad690ef600965f6a3bc9","modified":1633066351000},{"_id":"source/img/scapeImage/scape7.png","hash":"73f2c49f960953277c64484d0c956f8030c7a715","modified":1633066351000},{"_id":"source/img/pic/c01.png","hash":"3319bd6920d39752e199e35ae6fbc411bfffe468","modified":1632535602601},{"_id":"source/img/pic/phone01.png","hash":"2f8ded546ac63412728ec39a497d6185384e740c","modified":1632536479188},{"_id":"source/img/pic/bg5.jpg","hash":"a0778407a601ff4d7c8e50d43d68643890091a97","modified":1633144602622},{"_id":"public/search.xml","hash":"36db31d9f7fe3f346bea51a767bddfc9b225267e","modified":1633249815388},{"_id":"public/about/index.html","hash":"5790a776dce5044cb4f7286e4e4a08f2ba6b1fce","modified":1633249834077},{"_id":"public/categories/index.html","hash":"65612ce7e6938470d4ab8af58e72e4ecc700db27","modified":1633249834077},{"_id":"public/guestbook/index.html","hash":"25b677229729ebe5f89e0639b886167380ddf2c2","modified":1633249834077},{"_id":"public/movies/index.html","hash":"a4b063d557f818476e328c48e83fe6f5f845994e","modified":1633249834077},{"_id":"public/pic/index.html","hash":"a0a0f8b5074d780fd158222b502aad111eeb5952","modified":1633249834077},{"_id":"public/tags/index.html","hash":"0fd03d38230eaea02e45e62941f881b92f9bf126","modified":1633249834077},{"_id":"public/pic/picture/eat.html","hash":"af465ec97f3d2980c50488212b243bc528fe61c2","modified":1633249834077},{"_id":"public/pic/picture/scape.html","hash":"0846835e1b68fb848aa2bb98ce7abeacc644b7e5","modified":1633249834077},{"_id":"public/2021/10/02/资源整合/index.html","hash":"c09b59761aeb78722399216be4834307d8c0c1be","modified":1633249815388},{"_id":"public/2021/10/01/旅行终点站/index.html","hash":"3c3149f4548d225d1eef46991672b203104d97e0","modified":1633249815388},{"_id":"public/2021/09/23/爬楼梯/index.html","hash":"bcd1ab8b3381bfc29edd85d3ef53db8b88c5d937","modified":1633249815388},{"_id":"public/2021/09/22/字符串/index.html","hash":"542f1732fbec38242206c702b124682625c6850d","modified":1633249815388},{"_id":"public/2021/09/20/杨辉三角/index.html","hash":"93016f621067fb47069ce4564a8bbcb4a470e6df","modified":1633249815388},{"_id":"public/archives/index.html","hash":"26abfa77a069d6cfd5920ecd9c1a94c0aef1b597","modified":1633249834077},{"_id":"public/archives/2021/index.html","hash":"568d3e3c929003707f9f91b9fb9197646e23e7ba","modified":1633249834077},{"_id":"public/archives/2021/09/index.html","hash":"b27d1e41fac501199aded83897798fde5d1757b4","modified":1633249834077},{"_id":"public/archives/2021/10/index.html","hash":"366318e80a5c9041b298d48a1f9f33c9a151f90e","modified":1633249834077},{"_id":"public/categories/javascript/index.html","hash":"2014f70f705b3294a767a72d03d0a584c1d3f0d0","modified":1633249834077},{"_id":"public/categories/算法/index.html","hash":"91f550005484a4ddcaca605b61163c28f56d936e","modified":1633249834077},{"_id":"public/categories/资源/index.html","hash":"813e6ad1be9ac21e7f9532e8681c7a1f2507b6ea","modified":1633249834077},{"_id":"public/index.html","hash":"a378e6d6054a429ae3e17e8bead88b7ed1e4b371","modified":1633249834077},{"_id":"public/tags/javascript/index.html","hash":"1ff3882003b40df1f7d1e3c49a3491a5cf3a5466","modified":1633249834077},{"_id":"public/tags/算法/index.html","hash":"c7a4c4232c1d2507dd38c0c4e3e9e953048f7cf7","modified":1633249834077},{"_id":"public/tags/资源/index.html","hash":"a32e71a0aa83b9fadaccc08f50e1ea9e0b219238","modified":1633249834077},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1633249815388},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1633249815388},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1633249815388},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1633249815388},{"_id":"public/img/1.jpg","hash":"5d3f4c4eeec2627cb4dc01825562b4bf896be606","modified":1633249815388},{"_id":"public/img/foc.png","hash":"9ee3c94935ef83ab41154edcfeb7f7ceef138c35","modified":1633249815388},{"_id":"public/img/i.ico","hash":"79f3e473ff30ee3ccb7ac15a726bee51cb064509","modified":1633249815388},{"_id":"public/img/t.png","hash":"7beb7a46c50f8b849b63123cabe2b0bc2e3428bc","modified":1633249815388},{"_id":"public/img/pic/1.jpg","hash":"5d3f4c4eeec2627cb4dc01825562b4bf896be606","modified":1633249815388},{"_id":"public/img/pic/jiao.gif","hash":"854e91975cf2961f783907b9ced63a9585207474","modified":1633249815388},{"_id":"public/img/pic/ray05.png","hash":"e50d53c1faa841575007d86c681228ec256178bc","modified":1633249815388},{"_id":"public/img/pic/ray04.png","hash":"3858a3850acc9c6c0d13585c29a169c621fcf0e5","modified":1633249815388},{"_id":"public/img/pic/zifuchuan.jpg","hash":"bfcbf8014c29436375261c8f74f3c0c57aebcba4","modified":1633249815388},{"_id":"public/img/pic/ray06.png","hash":"e7df5bacecaa38958fcb36e5c0d9178c749fe67d","modified":1633249815388},{"_id":"public/img/scapeImage/scape10.png","hash":"e95fb8ef15d150f8bc4c8af0dd0deef769dfc725","modified":1633249815388},{"_id":"public/img/scapeImage/scape4.png","hash":"122fcdd6ed1cfc3c004732d0c67c3594a556e61a","modified":1633249815388},{"_id":"public/img/bg3.png","hash":"da6441306f552e78b43240e81b28850d108335a0","modified":1633249815388},{"_id":"public/img/eatImage/eat15.png","hash":"e7ff0106e934bd276e39af612eb7082726d1b564","modified":1633249815388},{"_id":"public/img/eatImage/eat5.png","hash":"eac81e46e4e0cb4a47b65e0e31fe70091fcf5d44","modified":1633249815388},{"_id":"public/img/eatImage/eat8.png","hash":"aea4f3f2583291e428917523c7876724b0b5c5ab","modified":1633249815388},{"_id":"public/img/pic/lvxing.png","hash":"27392ee76fb447cb7476e5586323c4cf3ac1cd6f","modified":1633249815388},{"_id":"public/img/pic/palouti.jpg","hash":"a61ed194bbf15b9b3961745e034eb98312005527","modified":1633249815388},{"_id":"public/img/scapeImage/scape14.png","hash":"520994fd8d79963220eab79d33659f1d384f3d1c","modified":1633249815388},{"_id":"public/img/scapeImage/scape15.png","hash":"c84c490646586d0c0dd057db90108c6e263fa41e","modified":1633249815388},{"_id":"public/img/scapeImage/scape2.png","hash":"9bcbd2aeb5b577688f62a1a6a962de2e63f451b7","modified":1633249815388},{"_id":"public/img/scapeImage/scape3.png","hash":"4d9254a3c9a239a17dceeb22fb67b6d0a1f6aeb0","modified":1633249815388},{"_id":"public/img/scapeImage/scape5.png","hash":"b7f23f7f706a45681e19241d45c45a06fae6ddf1","modified":1633249815388},{"_id":"public/img/scapeImage/scape9.png","hash":"fef6e0b5ab8045ee545465122e4384319746cb4b","modified":1633249815388},{"_id":"public/img/bg2.png","hash":"445453bbb07756b5daaf88b9c6d3f706e2781461","modified":1633249815388},{"_id":"public/img/bg/bg.jpg","hash":"53888afb348347b7ebe86e49d9aaa7334c0c7e05","modified":1633249815388},{"_id":"public/img/eatImage/eat13.png","hash":"8c1cc731dbe8cae899079988c39cbff8f879b7ca","modified":1633249815388},{"_id":"public/img/eatImage/eat2.png","hash":"6fe232c2b3e19e86b7ef88669c5d7912f25b15d5","modified":1633249815388},{"_id":"public/img/eatImage/eat3.png","hash":"adfb672326fa9873dc07aa74526b1fab9a053971","modified":1633249815388},{"_id":"public/img/eatImage/eat4.png","hash":"590e1fa55e3a033f23d2303955a4d502bd364c40","modified":1633249815388},{"_id":"public/img/pic/dong.gif","hash":"91a1ea3d86aa853e3e4818d801c3c37aabb4356d","modified":1633249815388},{"_id":"public/img/pic/ico01.png","hash":"5defef4dd6f7f55721e0962db7ca92241aba1ae8","modified":1633249815388},{"_id":"public/img/pic/ray01.png","hash":"da133c5c136d6c48db9e6ee5893b782e9bc5d813","modified":1633249815388},{"_id":"public/img/pic/ray02.png","hash":"4b1c0de2ae88bd7a309038c41da7cde3d444ae7c","modified":1633249815388},{"_id":"public/img/pic/ray03.png","hash":"6ff6f5e190ecedbf7dd2f36857a6486c0642401c","modified":1633249815388},{"_id":"public/img/scapeImage/ffj.png","hash":"6169d7374f47b382a8dcdbbd80e0eca1f482cd1f","modified":1633249815388},{"_id":"public/img/scapeImage/scape1.png","hash":"7f3bb19c60af7565506b6d9c5eaff8034a3194a1","modified":1633249815388},{"_id":"public/img/scapeImage/scape19.png","hash":"b33e19bd3c12949195ed66e5e14698426b10591d","modified":1633249815388},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1633249815388},{"_id":"public/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":1633249815388},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1633249815388},{"_id":"public/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":1633249815388},{"_id":"public/css/index.css","hash":"a9f84d5afc0659494c8fe325a22d2fd3e76ce0ac","modified":1633249815388},{"_id":"public/img/we.png","hash":"d2701abd5a1b1d95c1f1df28aad731dd8f00254b","modified":1633249815388},{"_id":"public/img/eatImage/eat6.png","hash":"dc9ef47ad3c108dfde2a67d1eb82b753f0073401","modified":1633249815388},{"_id":"public/img/eatImage/eatbg.png","hash":"568514f851c7aeda3d1407340e2bc8325aa78e3e","modified":1633249815388},{"_id":"public/img/eatImage/feat.png","hash":"447eb50a282b9fe8db5dae82a79e0c7e675a3371","modified":1633249815388},{"_id":"public/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":1633249815388},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1633249815388},{"_id":"public/img/scapeImage/scapebg.png","hash":"82c0a40f1ad3233c612ce42bbe7f22f0e297ccf6","modified":1633249815388},{"_id":"public/img/eatImage/eat9.png","hash":"71e0138ca47a65b7e3346f77417134ed39dc1c19","modified":1633249815388},{"_id":"public/img/pic/caozuo01.png","hash":"323362dad0f10405925b539822ef6591730b5303","modified":1633249815388},{"_id":"public/img/scapeImage/scape11.png","hash":"414f0668035adae496605e91c8ec38d25942146d","modified":1633249815388},{"_id":"public/img/scapeImage/scape13.png","hash":"68f39de2fc5b42829c98e199edbf389728dbffb7","modified":1633249815388},{"_id":"public/img/eatImage/eat12.png","hash":"366f2bb6b679694dba35bbc874b5c542b961f454","modified":1633249815388},{"_id":"public/img/pic/png01.png","hash":"d0a64b3b64cfb8a62c06029faa7693d69fc0c0c4","modified":1633249815388},{"_id":"public/img/scapeImage/scape12.png","hash":"8cbe54fab9764b4f159c5701e2608e174e3a9b0d","modified":1633249815388},{"_id":"public/img/eatImage/eat11.png","hash":"1dc6494e8bf16a0ca547c3b1d239b3515d1eada3","modified":1633249815388},{"_id":"public/img/eatImage/eat1.png","hash":"51083095b4a1fce08e3561af282bbc004ef51dde","modified":1633249815388},{"_id":"public/img/eatImage/eat14.png","hash":"4b08160e1600aab46118a10e991cf38bfbb8c630","modified":1633249815388},{"_id":"public/img/scapeImage/scape18.png","hash":"604750c2d8f2d8b2b464f279977d710193109e0c","modified":1633249815388},{"_id":"public/img/eatImage/eat10.png","hash":"782374eb2900160ecd49a1111270e7ef387e2381","modified":1633249815388},{"_id":"public/img/eatImage/eat7.png","hash":"fb8c60a6816675a621ad9a169ded6c13929e1b98","modified":1633249815388},{"_id":"public/img/pic/color01.png","hash":"19c713d44d5f67246a93a209d2c107b0aaa09f0b","modified":1633249815388},{"_id":"public/img/scapeImage/scape16.png","hash":"319eaa000102ba6e353b44fac898375241cbffb7","modified":1633249815388},{"_id":"public/img/pic/ziyuan01.jpg","hash":"f0108d6e790119cf79deb48003dcd8f91a930ab3","modified":1633249815388},{"_id":"public/img/scapeImage/scape17.png","hash":"eff52c273e4d19d97a1a780bc9ba605841811451","modified":1633249815388},{"_id":"public/img/scapeImage/scape20.png","hash":"4cdb235242caea25c58ad4c16419a1be520c2244","modified":1633249815388},{"_id":"public/img/scapeImage/scape8.png","hash":"9334d879e12ed72a0071c3440e792c94738c8457","modified":1633249815388},{"_id":"public/img/bg/bg4.jpg","hash":"49630f7386ecb19b5af52b5495d04a6ac2d2bdf1","modified":1633249815388},{"_id":"public/img/scapeImage/scape6.png","hash":"b05633fff342e4c6cfc5ad690ef600965f6a3bc9","modified":1633249815388},{"_id":"public/img/scapeImage/scape7.png","hash":"73f2c49f960953277c64484d0c956f8030c7a715","modified":1633249815388},{"_id":"public/img/pic/c01.png","hash":"3319bd6920d39752e199e35ae6fbc411bfffe468","modified":1633249815388},{"_id":"public/img/pic/phone01.png","hash":"2f8ded546ac63412728ec39a497d6185384e740c","modified":1633249815388},{"_id":"public/img/pic/bg5.jpg","hash":"a0778407a601ff4d7c8e50d43d68643890091a97","modified":1633249815388}],"Category":[{"name":"javascript","_id":"ckuayruuu000a6gfcdbgo3v5e"},{"name":"算法","_id":"ckuayruv0000f6gfcaej35jys"},{"name":"资源","_id":"ckuayruv5000o6gfc90iu4bu6"}],"Data":[],"Page":[{"title":"about","date":"2020-02-23T11:20:33.000Z","layout":"about","updated":"2021-10-01T05:32:31.000Z","comments":1,"description":null,"keywords":"about","top_img":"/img/bg/bg4.jpg","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"这里是一个很神奇的地方,有漫天的星空,\n博主正在想,关于后面在给他补齐\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\nupdated: \ncomments: true\ndescription: \nkeywords: about\ntop_img: /img/bg/bg4.jpg\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---\n这里是一个很神奇的地方,有漫天的星空,\n博主正在想,关于后面在给他补齐\n","path":"about/index.html","_id":"ckuayruug00006gfc1dq3ex05","content":"<p>这里是一个很神奇的地方,有漫天的星空,<br>博主正在想,关于后面在给他补齐</p>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>这里是一个很神奇的地方,有漫天的星空,<br>博主正在想,关于后面在给他补齐</p>\n"},{"title":"分类","date":"2021-09-19T16:00:00.000Z","type":"categories","updated":"2021-10-01T05:32:31.000Z","comments":1,"description":null,"keywords":"categories","top_img":"/img/bg/bg4.jpg","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-09-20 00:00:00\ntype: \"categories\"\nupdated: \ncomments: true\ndescription: \nkeywords: categories\ntop_img: /img/bg/bg4.jpg\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---","path":"categories/index.html","layout":"page","_id":"ckuayruuj00016gfccvhle87h","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"layout":"page","title":"guestbook","date":"2021-09-24T14:58:42.000Z","tags":null,"_content":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","source":"guestbook/index.md","raw":"---\nlayout: page\ntitle: guestbook\ndate: 2021-09-24 22:58:42\ntags:\n---\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","updated":"2021-10-01T05:32:31.000Z","path":"guestbook/index.html","comments":1,"_id":"ckuayruuk00026gfc4xz928ay","content":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>"},{"title":"电影","date":"2021-09-19T16:00:00.000Z","type":"movies","updated":"2021-10-01T05:32:31.000Z","comments":1,"description":"一个资源的记录","keywords":"movies","top_img":"/img/bg/bg4.jpg","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"广播开放平台 https://developer.baidu.com/vcast\n\nhttps://convertio.co/zh/    转码\n\nhttps://bilibili.steins-gate.network/user/  服务器 vpn\n\nwww.dybee.tv \n\nhttp://www.6vhao.tv\n\nhttp://www.17kktv.com/\n\nhttp://1090ys.com/\n\nwww.haiduomi.cc\n\nhttp://www.yynys.com/\n\nhttp://typin.cn/movie/\n\nhttp://www.9sey.cc/ 视频解析\n\nhttps://smallpdf.com/cn/pdf-to-word    pdf转换word工具\n\nOBZHI.com  壁纸软件\nhttps://www.wallpapermaiden.com/category/anime\n \neasyicon  图标网\nico转码\n\npexels\npixabay\nISO Republic\ncoverr\nmixkit\nwww.videezy.com\nmazwai\nstockio\nfree hd footage\nignitemotion\naigei.com  音效素材网\n699pic.com\n\nhttp://www.lookae.com/     达芬奇lut素材下载\n\nhttp://www.1ppt.com/  第一ppt官网\n\nhttps://www.99ppt.com/    终身会员   1835666280\n  \n爱恋bt下载 \nACG狗狗\nbrowse::nyaa\n\npotplayer  视频播放器\nBandizip    压缩软件(无广告)\n万彩办公大师   \n\nhttp://music.cccyun.cc/\nhttp://music.lkxin.cn/","source":"movies/index.md","raw":"---\ntitle: 电影\ndate: 2021-09-20 00:00:00\ntype: \"movies\"\nupdated: \ncomments: true\ndescription: 一个资源的记录\nkeywords: movies\ntop_img: /img/bg/bg4.jpg\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---\n广播开放平台 https://developer.baidu.com/vcast\n\nhttps://convertio.co/zh/    转码\n\nhttps://bilibili.steins-gate.network/user/  服务器 vpn\n\nwww.dybee.tv \n\nhttp://www.6vhao.tv\n\nhttp://www.17kktv.com/\n\nhttp://1090ys.com/\n\nwww.haiduomi.cc\n\nhttp://www.yynys.com/\n\nhttp://typin.cn/movie/\n\nhttp://www.9sey.cc/ 视频解析\n\nhttps://smallpdf.com/cn/pdf-to-word    pdf转换word工具\n\nOBZHI.com  壁纸软件\nhttps://www.wallpapermaiden.com/category/anime\n \neasyicon  图标网\nico转码\n\npexels\npixabay\nISO Republic\ncoverr\nmixkit\nwww.videezy.com\nmazwai\nstockio\nfree hd footage\nignitemotion\naigei.com  音效素材网\n699pic.com\n\nhttp://www.lookae.com/     达芬奇lut素材下载\n\nhttp://www.1ppt.com/  第一ppt官网\n\nhttps://www.99ppt.com/    终身会员   1835666280\n  \n爱恋bt下载 \nACG狗狗\nbrowse::nyaa\n\npotplayer  视频播放器\nBandizip    压缩软件(无广告)\n万彩办公大师   \n\nhttp://music.cccyun.cc/\nhttp://music.lkxin.cn/","path":"movies/index.html","layout":"page","_id":"ckuayruuk00036gfcg0i34lwv","content":"<p>广播开放平台 <a href=\"https://developer.baidu.com/vcast\">https://developer.baidu.com/vcast</a></p>\n<p><a href=\"https://convertio.co/zh/\">https://convertio.co/zh/</a>    转码</p>\n<p><a href=\"https://bilibili.steins-gate.network/user/\">https://bilibili.steins-gate.network/user/</a>  服务器 vpn</p>\n<p><a href=\"http://www.dybee.tv/\">www.dybee.tv</a> </p>\n<p><a href=\"http://www.6vhao.tv/\">http://www.6vhao.tv</a></p>\n<p><a href=\"http://www.17kktv.com/\">http://www.17kktv.com/</a></p>\n<p><a href=\"http://1090ys.com/\">http://1090ys.com/</a></p>\n<p><a href=\"http://www.haiduomi.cc/\">www.haiduomi.cc</a></p>\n<p><a href=\"http://www.yynys.com/\">http://www.yynys.com/</a></p>\n<p><a href=\"http://typin.cn/movie/\">http://typin.cn/movie/</a></p>\n<p><a href=\"http://www.9sey.cc/\">http://www.9sey.cc/</a> 视频解析</p>\n<p><a href=\"https://smallpdf.com/cn/pdf-to-word\">https://smallpdf.com/cn/pdf-to-word</a>    pdf转换word工具</p>\n<p>OBZHI.com  壁纸软件<br><a href=\"https://www.wallpapermaiden.com/category/anime\">https://www.wallpapermaiden.com/category/anime</a></p>\n<p>easyicon  图标网<br>ico转码</p>\n<p>pexels<br>pixabay<br>ISO Republic<br>coverr<br>mixkit<br><a href=\"http://www.videezy.com/\">www.videezy.com</a><br>mazwai<br>stockio<br>free hd footage<br>ignitemotion<br>aigei.com  音效素材网<br>699pic.com</p>\n<p><a href=\"http://www.lookae.com/\">http://www.lookae.com/</a>     达芬奇lut素材下载</p>\n<p><a href=\"http://www.1ppt.com/\">http://www.1ppt.com/</a>  第一ppt官网</p>\n<p><a href=\"https://www.99ppt.com/\">https://www.99ppt.com/</a>    终身会员   1835666280</p>\n<p>爱恋bt下载<br>ACG狗狗<br>browse::nyaa</p>\n<p>potplayer  视频播放器<br>Bandizip    压缩软件(无广告)<br>万彩办公大师   </p>\n<p><a href=\"http://music.cccyun.cc/\">http://music.cccyun.cc/</a><br><a href=\"http://music.lkxin.cn/\">http://music.lkxin.cn/</a></p>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>广播开放平台 <a href=\"https://developer.baidu.com/vcast\">https://developer.baidu.com/vcast</a></p>\n<p><a href=\"https://convertio.co/zh/\">https://convertio.co/zh/</a>    转码</p>\n<p><a href=\"https://bilibili.steins-gate.network/user/\">https://bilibili.steins-gate.network/user/</a>  服务器 vpn</p>\n<p><a href=\"http://www.dybee.tv/\">www.dybee.tv</a> </p>\n<p><a href=\"http://www.6vhao.tv/\">http://www.6vhao.tv</a></p>\n<p><a href=\"http://www.17kktv.com/\">http://www.17kktv.com/</a></p>\n<p><a href=\"http://1090ys.com/\">http://1090ys.com/</a></p>\n<p><a href=\"http://www.haiduomi.cc/\">www.haiduomi.cc</a></p>\n<p><a href=\"http://www.yynys.com/\">http://www.yynys.com/</a></p>\n<p><a href=\"http://typin.cn/movie/\">http://typin.cn/movie/</a></p>\n<p><a href=\"http://www.9sey.cc/\">http://www.9sey.cc/</a> 视频解析</p>\n<p><a href=\"https://smallpdf.com/cn/pdf-to-word\">https://smallpdf.com/cn/pdf-to-word</a>    pdf转换word工具</p>\n<p>OBZHI.com  壁纸软件<br><a href=\"https://www.wallpapermaiden.com/category/anime\">https://www.wallpapermaiden.com/category/anime</a></p>\n<p>easyicon  图标网<br>ico转码</p>\n<p>pexels<br>pixabay<br>ISO Republic<br>coverr<br>mixkit<br><a href=\"http://www.videezy.com/\">www.videezy.com</a><br>mazwai<br>stockio<br>free hd footage<br>ignitemotion<br>aigei.com  音效素材网<br>699pic.com</p>\n<p><a href=\"http://www.lookae.com/\">http://www.lookae.com/</a>     达芬奇lut素材下载</p>\n<p><a href=\"http://www.1ppt.com/\">http://www.1ppt.com/</a>  第一ppt官网</p>\n<p><a href=\"https://www.99ppt.com/\">https://www.99ppt.com/</a>    终身会员   1835666280</p>\n<p>爱恋bt下载<br>ACG狗狗<br>browse::nyaa</p>\n<p>potplayer  视频播放器<br>Bandizip    压缩软件(无广告)<br>万彩办公大师   </p>\n<p><a href=\"http://music.cccyun.cc/\">http://music.cccyun.cc/</a><br><a href=\"http://music.lkxin.cn/\">http://music.lkxin.cn/</a></p>\n"},{"title":"记录图片","date":"2021-09-19T16:00:00.000Z","type":"pic","updated":"2021-10-01T05:32:31.000Z","comments":1,"description":"一个记录着 随手拍过的图片","keywords":"pic","top_img":"/img/bg/bg4.jpg","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '好吃的' '收藏的一些美食照片' '/pic/picture/eat' /img/eatImage/feat.png %}\n{% galleryGroup '风景' '关于一些街边的风景' '/pic/picture/scape' /img/scapeImage/ffj.png %}\n</div>","source":"pic/index.md","raw":"---\ntitle: 记录图片\ndate: 2021-09-20 00:00:00\ntype: \"pic\"\nupdated: \ncomments: true\ndescription: 一个记录着 随手拍过的图片\nkeywords: pic\ntop_img: /img/bg/bg4.jpg\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '好吃的' '收藏的一些美食照片' '/pic/picture/eat' /img/eatImage/feat.png %}\n{% galleryGroup '风景' '关于一些街边的风景' '/pic/picture/scape' /img/scapeImage/ffj.png %}\n</div>","path":"pic/index.html","layout":"page","_id":"ckuayruul00046gfceqcifwzm","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/img/eatImage/feat.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">好吃的</div>\n  <p>收藏的一些美食照片</p>\n  <a href='/pic/picture/eat'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/img/scapeImage/ffj.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">风景</div>\n  <p>关于一些街边的风景</p>\n  <a href='/pic/picture/scape'></a>\n  </figcaption>\n  </figure>\n  \n</div>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/img/eatImage/feat.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">好吃的</div>\n  <p>收藏的一些美食照片</p>\n  <a href='/pic/picture/eat'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/img/scapeImage/ffj.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">风景</div>\n  <p>关于一些街边的风景</p>\n  <a href='/pic/picture/scape'></a>\n  </figcaption>\n  </figure>\n  \n</div>"},{"title":"标籤","date":"2021-09-19T16:00:00.000Z","type":"tags","updated":"2021-10-01T05:32:31.000Z","comments":1,"description":null,"keywords":"tags","top_img":"/img/bg/bg4.jpg","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标籤\ndate: 2021-09-20 00:00:00\ntype: \"tags\"\nupdated: \ncomments: true\ndescription: \nkeywords: tags\ntop_img: /img/bg/bg4.jpg\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---","path":"tags/index.html","layout":"page","_id":"ckuayruul00056gfca7re9u1u","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"一个记录平时吃过的好吃的(●'◡'●)","date":"2021-09-21T16:00:00.000Z","updated":"2021-10-01T05:32:31.000Z","type":"eat","comments":1,"description":"博主是个吃货,但是挑食┭┮﹏┭┮","keywords":"eat","top_img":"/img/eatImage/eatbg.png","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"{% gallery %}\n![](/img/eatImage/eat1.png)\n![](/img/eatImage/eat2.png)\n![](/img/eatImage/eat3.png)\n![](/img/eatImage/eat4.png)\n![](/img/eatImage/eat5.png)\n![](/img/eatImage/eat6.png)\n![](/img/eatImage/eat7.png)\n![](/img/eatImage/eat8.png)\n![](/img/eatImage/eat9.png)\n![](/img/eatImage/eat10.png)\n![](/img/eatImage/eat11.png)\n![](/img/eatImage/eat12.png)\n![](/img/eatImage/eat13.png)\n![](/img/eatImage/eat14.png)\n![](/img/eatImage/eat15.png)\n{% endgallery %}\n","source":"pic/picture/eat.md","raw":"---\ntitle: 一个记录平时吃过的好吃的(●'◡'●)\ndate: 2021-9-22 00:00:00\nupdated: \ntype: \"eat\"\ncomments: true\ndescription: 博主是个吃货,但是挑食┭┮﹏┭┮\nkeywords: eat\ntop_img: /img/eatImage/eatbg.png\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---\n{% gallery %}\n![](/img/eatImage/eat1.png)\n![](/img/eatImage/eat2.png)\n![](/img/eatImage/eat3.png)\n![](/img/eatImage/eat4.png)\n![](/img/eatImage/eat5.png)\n![](/img/eatImage/eat6.png)\n![](/img/eatImage/eat7.png)\n![](/img/eatImage/eat8.png)\n![](/img/eatImage/eat9.png)\n![](/img/eatImage/eat10.png)\n![](/img/eatImage/eat11.png)\n![](/img/eatImage/eat12.png)\n![](/img/eatImage/eat13.png)\n![](/img/eatImage/eat14.png)\n![](/img/eatImage/eat15.png)\n{% endgallery %}\n","path":"pic/picture/eat.html","layout":"page","_id":"ckuayruul00066gfc8z62dham","content":"<div class=\"justified-gallery\"><p><img src=\"/img/eatImage/eat1.png\"><br><img src=\"/img/eatImage/eat2.png\"><br><img src=\"/img/eatImage/eat3.png\"><br><img src=\"/img/eatImage/eat4.png\"><br><img src=\"/img/eatImage/eat5.png\"><br><img src=\"/img/eatImage/eat6.png\"><br><img src=\"/img/eatImage/eat7.png\"><br><img src=\"/img/eatImage/eat8.png\"><br><img src=\"/img/eatImage/eat9.png\"><br><img src=\"/img/eatImage/eat10.png\"><br><img src=\"/img/eatImage/eat11.png\"><br><img src=\"/img/eatImage/eat12.png\"><br><img src=\"/img/eatImage/eat13.png\"><br><img src=\"/img/eatImage/eat14.png\"><br><img src=\"/img/eatImage/eat15.png\"></p>\n          </div>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"justified-gallery\"><p><img src=\"/img/eatImage/eat1.png\"><br><img src=\"/img/eatImage/eat2.png\"><br><img src=\"/img/eatImage/eat3.png\"><br><img src=\"/img/eatImage/eat4.png\"><br><img src=\"/img/eatImage/eat5.png\"><br><img src=\"/img/eatImage/eat6.png\"><br><img src=\"/img/eatImage/eat7.png\"><br><img src=\"/img/eatImage/eat8.png\"><br><img src=\"/img/eatImage/eat9.png\"><br><img src=\"/img/eatImage/eat10.png\"><br><img src=\"/img/eatImage/eat11.png\"><br><img src=\"/img/eatImage/eat12.png\"><br><img src=\"/img/eatImage/eat13.png\"><br><img src=\"/img/eatImage/eat14.png\"><br><img src=\"/img/eatImage/eat15.png\"></p>\n          </div>\n"},{"title":"一个记录平时路过的街边风景(●'◡'●)","date":"2021-09-21T16:00:00.000Z","updated":"2021-10-01T05:32:31.000Z","type":"scape","comments":1,"description":"路过随手拍的 小记录一下","keywords":"eat","top_img":"/img/scapeImage/scapebg.png","mathjax":null,"katex":null,"aside":true,"aplayer":null,"highlight_shrink":null,"_content":"{% gallery %}\n![](/img/scapeImage/scape1.png)\n![](/img/scapeImage/scape2.png)\n![](/img/scapeImage/scape3.png)\n![](/img/scapeImage/scape4.png)\n![](/img/scapeImage/scape5.png)\n![](/img/scapeImage/scape6.png)\n![](/img/scapeImage/scape7.png)\n![](/img/scapeImage/scape8.png)\n![](/img/scapeImage/scape9.png)\n![](/img/scapeImage/scape10.png)\n![](/img/scapeImage/scape11.png)\n![](/img/scapeImage/scape12.png)\n![](/img/scapeImage/scape13.png)\n![](/img/scapeImage/scape14.png)\n![](/img/scapeImage/scape15.png)\n![](/img/scapeImage/scape16.png)\n![](/img/scapeImage/scape17.png)\n![](/img/scapeImage/scape18.png)\n![](/img/scapeImage/scape19.png)\n![](/img/scapeImage/scape20.png)\n{% endgallery %}\n","source":"pic/picture/scape.md","raw":"---\ntitle: 一个记录平时路过的街边风景(●'◡'●)\ndate: 2021-9-22 00:00:00\nupdated: \ntype: \"scape\"\ncomments: true\ndescription: 路过随手拍的 小记录一下\nkeywords: eat\ntop_img: /img/scapeImage/scapebg.png\nmathjax: \nkatex:\naside: true\naplayer:\nhighlight_shrink:\n---\n{% gallery %}\n![](/img/scapeImage/scape1.png)\n![](/img/scapeImage/scape2.png)\n![](/img/scapeImage/scape3.png)\n![](/img/scapeImage/scape4.png)\n![](/img/scapeImage/scape5.png)\n![](/img/scapeImage/scape6.png)\n![](/img/scapeImage/scape7.png)\n![](/img/scapeImage/scape8.png)\n![](/img/scapeImage/scape9.png)\n![](/img/scapeImage/scape10.png)\n![](/img/scapeImage/scape11.png)\n![](/img/scapeImage/scape12.png)\n![](/img/scapeImage/scape13.png)\n![](/img/scapeImage/scape14.png)\n![](/img/scapeImage/scape15.png)\n![](/img/scapeImage/scape16.png)\n![](/img/scapeImage/scape17.png)\n![](/img/scapeImage/scape18.png)\n![](/img/scapeImage/scape19.png)\n![](/img/scapeImage/scape20.png)\n{% endgallery %}\n","path":"pic/picture/scape.html","layout":"page","_id":"ckuayruum00076gfchschbwm3","content":"<div class=\"justified-gallery\"><p><img src=\"/img/scapeImage/scape1.png\"><br><img src=\"/img/scapeImage/scape2.png\"><br><img src=\"/img/scapeImage/scape3.png\"><br><img src=\"/img/scapeImage/scape4.png\"><br><img src=\"/img/scapeImage/scape5.png\"><br><img src=\"/img/scapeImage/scape6.png\"><br><img src=\"/img/scapeImage/scape7.png\"><br><img src=\"/img/scapeImage/scape8.png\"><br><img src=\"/img/scapeImage/scape9.png\"><br><img src=\"/img/scapeImage/scape10.png\"><br><img src=\"/img/scapeImage/scape11.png\"><br><img src=\"/img/scapeImage/scape12.png\"><br><img src=\"/img/scapeImage/scape13.png\"><br><img src=\"/img/scapeImage/scape14.png\"><br><img src=\"/img/scapeImage/scape15.png\"><br><img src=\"/img/scapeImage/scape16.png\"><br><img src=\"/img/scapeImage/scape17.png\"><br><img src=\"/img/scapeImage/scape18.png\"><br><img src=\"/img/scapeImage/scape19.png\"><br><img src=\"/img/scapeImage/scape20.png\"></p>\n          </div>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"justified-gallery\"><p><img src=\"/img/scapeImage/scape1.png\"><br><img src=\"/img/scapeImage/scape2.png\"><br><img src=\"/img/scapeImage/scape3.png\"><br><img src=\"/img/scapeImage/scape4.png\"><br><img src=\"/img/scapeImage/scape5.png\"><br><img src=\"/img/scapeImage/scape6.png\"><br><img src=\"/img/scapeImage/scape7.png\"><br><img src=\"/img/scapeImage/scape8.png\"><br><img src=\"/img/scapeImage/scape9.png\"><br><img src=\"/img/scapeImage/scape10.png\"><br><img src=\"/img/scapeImage/scape11.png\"><br><img src=\"/img/scapeImage/scape12.png\"><br><img src=\"/img/scapeImage/scape13.png\"><br><img src=\"/img/scapeImage/scape14.png\"><br><img src=\"/img/scapeImage/scape15.png\"><br><img src=\"/img/scapeImage/scape16.png\"><br><img src=\"/img/scapeImage/scape17.png\"><br><img src=\"/img/scapeImage/scape18.png\"><br><img src=\"/img/scapeImage/scape19.png\"><br><img src=\"/img/scapeImage/scape20.png\"></p>\n          </div>\n"}],"Post":[{"title":"✨国庆第一天出个“旅行终点站“,还没开始就结束了","cover":"/img/pic/lvxing.png","top_img":"/img/pic/bg5.jpg","comments":1,"date":"2021-10-01T01:00:00.000Z","updated":"2021-10-01T01:00:00.000Z","_content":"\n给你一份旅游线路图，该线路图中的旅行线路用数组 paths 表示，其中 paths[i] = [cityAi, cityBi] 表示该线路将会从 cityAi 直接前往 cityBi 。请你找出这次旅行的终点站，即没有任何可以通往其他城市的线路的城市。\n\n题目数据保证线路图会形成一条不存在循环的线路，因此恰有一个旅行终点站。\n\n \n\n示例 1：\n\n```js\n输入：paths = [[\"London\",\"New York\"],[\"New York\",\"Lima\"],[\"Lima\",\"Sao Paulo\"]]\n输出：\"Sao Paulo\" \n解释：从 \"London\" 出发，最后抵达终点站 \"Sao Paulo\" 。本次旅行的路线是 \"London\" -> \"New York\" -> \"Lima\" -> \"Sao Paulo\" 。\n```\n\n示例 2：\n\n```js\n输入：paths = [[\"B\",\"C\"],[\"D\",\"B\"],[\"C\",\"A\"]]\n输出：\"A\"\n解释：所有可能的线路是：\n\"D\" -> \"B\" -> \"C\" -> \"A\". \n\"B\" -> \"C\" -> \"A\". \n\"C\" -> \"A\". \n\"A\". \n显然，旅行终点站是 \"A\" 。\n```\n\n示例 3：\n\n```js\n输入：paths = [[\"A\",\"Z\"]]\n输出：\"Z\"\n```\n\n解题思路:\n\n将每个数组的起点和终点站分开存储,然后拿终点站去起点站查询没有查询道德的就是最终的 终点站\n\n好了 上代码\n\n```js\nvar destCity = function(paths) {\n    let map = new Map()\n    for(const i in paths){\n        // 数组的起点和终点以键值对的形式分开存储\n         map.set(paths[i][0],paths[i][1])\n    }\n    for(const [key,value] of map){\n        // 拿值去查找\n        if(!map.has(value)){\n            // 返回找不到的那一个\n            return value\n        }\n    }\n};\n```\n\n\n\n\n\n","source":"_posts/旅行终点站.md","raw":"---\ntitle: ✨国庆第一天出个“旅行终点站“,还没开始就结束了\ntags: [javascript,算法]\ncover: /img/pic/lvxing.png\ntop_img: /img/pic/bg5.jpg\ncategories: javascript\ncomments: true\ndate: 2021-10-01 09:00:00\nupdated: 2021-10-01 09:00:00\n---\n\n给你一份旅游线路图，该线路图中的旅行线路用数组 paths 表示，其中 paths[i] = [cityAi, cityBi] 表示该线路将会从 cityAi 直接前往 cityBi 。请你找出这次旅行的终点站，即没有任何可以通往其他城市的线路的城市。\n\n题目数据保证线路图会形成一条不存在循环的线路，因此恰有一个旅行终点站。\n\n \n\n示例 1：\n\n```js\n输入：paths = [[\"London\",\"New York\"],[\"New York\",\"Lima\"],[\"Lima\",\"Sao Paulo\"]]\n输出：\"Sao Paulo\" \n解释：从 \"London\" 出发，最后抵达终点站 \"Sao Paulo\" 。本次旅行的路线是 \"London\" -> \"New York\" -> \"Lima\" -> \"Sao Paulo\" 。\n```\n\n示例 2：\n\n```js\n输入：paths = [[\"B\",\"C\"],[\"D\",\"B\"],[\"C\",\"A\"]]\n输出：\"A\"\n解释：所有可能的线路是：\n\"D\" -> \"B\" -> \"C\" -> \"A\". \n\"B\" -> \"C\" -> \"A\". \n\"C\" -> \"A\". \n\"A\". \n显然，旅行终点站是 \"A\" 。\n```\n\n示例 3：\n\n```js\n输入：paths = [[\"A\",\"Z\"]]\n输出：\"Z\"\n```\n\n解题思路:\n\n将每个数组的起点和终点站分开存储,然后拿终点站去起点站查询没有查询道德的就是最终的 终点站\n\n好了 上代码\n\n```js\nvar destCity = function(paths) {\n    let map = new Map()\n    for(const i in paths){\n        // 数组的起点和终点以键值对的形式分开存储\n         map.set(paths[i][0],paths[i][1])\n    }\n    for(const [key,value] of map){\n        // 拿值去查找\n        if(!map.has(value)){\n            // 返回找不到的那一个\n            return value\n        }\n    }\n};\n```\n\n\n\n\n\n","slug":"旅行终点站","published":1,"layout":"post","photos":[],"link":"","_id":"ckuayruup00086gfc7wjh68oy","content":"<p>给你一份旅游线路图，该线路图中的旅行线路用数组 paths 表示，其中 paths[i] = [cityAi, cityBi] 表示该线路将会从 cityAi 直接前往 cityBi 。请你找出这次旅行的终点站，即没有任何可以通往其他城市的线路的城市。</p>\n<p>题目数据保证线路图会形成一条不存在循环的线路，因此恰有一个旅行终点站。</p>\n<p>示例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;London&quot;</span>,<span class=\"string\">&quot;New York&quot;</span>],[<span class=\"string\">&quot;New York&quot;</span>,<span class=\"string\">&quot;Lima&quot;</span>],[<span class=\"string\">&quot;Lima&quot;</span>,<span class=\"string\">&quot;Sao Paulo&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;Sao Paulo&quot;</span> </span><br><span class=\"line\">解释：从 <span class=\"string\">&quot;London&quot;</span> 出发，最后抵达终点站 <span class=\"string\">&quot;Sao Paulo&quot;</span> 。本次旅行的路线是 <span class=\"string\">&quot;London&quot;</span> -&gt; <span class=\"string\">&quot;New York&quot;</span> -&gt; <span class=\"string\">&quot;Lima&quot;</span> -&gt; <span class=\"string\">&quot;Sao Paulo&quot;</span> 。</span><br></pre></td></tr></table></figure>\n\n<p>示例 2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;B&quot;</span>,<span class=\"string\">&quot;C&quot;</span>],[<span class=\"string\">&quot;D&quot;</span>,<span class=\"string\">&quot;B&quot;</span>],[<span class=\"string\">&quot;C&quot;</span>,<span class=\"string\">&quot;A&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;A&quot;</span></span><br><span class=\"line\">解释：所有可能的线路是：</span><br><span class=\"line\"><span class=\"string\">&quot;D&quot;</span> -&gt; <span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\">显然，旅行终点站是 <span class=\"string\">&quot;A&quot;</span> 。</span><br></pre></td></tr></table></figure>\n\n<p>示例 3：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;Z&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;Z&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>解题思路:</p>\n<p>将每个数组的起点和终点站分开存储,然后拿终点站去起点站查询没有查询道德的就是最终的 终点站</p>\n<p>好了 上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> destCity = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">paths</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> i <span class=\"keyword\">in</span> paths)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 数组的起点和终点以键值对的形式分开存储</span></span><br><span class=\"line\">         map.set(paths[i][<span class=\"number\">0</span>],paths[i][<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> [key,value] <span class=\"keyword\">of</span> map)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 拿值去查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!map.has(value))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 返回找不到的那一个</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>给你一份旅游线路图，该线路图中的旅行线路用数组 paths 表示，其中 paths[i] = [cityAi, cityBi] 表示该线路将会从 cityAi 直接前往 cityBi 。请你找出这次旅行的终点站，即没有任何可以通往其他城市的线路的城市。</p>\n<p>题目数据保证线路图会形成一条不存在循环的线路，因此恰有一个旅行终点站。</p>\n<p>示例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;London&quot;</span>,<span class=\"string\">&quot;New York&quot;</span>],[<span class=\"string\">&quot;New York&quot;</span>,<span class=\"string\">&quot;Lima&quot;</span>],[<span class=\"string\">&quot;Lima&quot;</span>,<span class=\"string\">&quot;Sao Paulo&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;Sao Paulo&quot;</span> </span><br><span class=\"line\">解释：从 <span class=\"string\">&quot;London&quot;</span> 出发，最后抵达终点站 <span class=\"string\">&quot;Sao Paulo&quot;</span> 。本次旅行的路线是 <span class=\"string\">&quot;London&quot;</span> -&gt; <span class=\"string\">&quot;New York&quot;</span> -&gt; <span class=\"string\">&quot;Lima&quot;</span> -&gt; <span class=\"string\">&quot;Sao Paulo&quot;</span> 。</span><br></pre></td></tr></table></figure>\n\n<p>示例 2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;B&quot;</span>,<span class=\"string\">&quot;C&quot;</span>],[<span class=\"string\">&quot;D&quot;</span>,<span class=\"string\">&quot;B&quot;</span>],[<span class=\"string\">&quot;C&quot;</span>,<span class=\"string\">&quot;A&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;A&quot;</span></span><br><span class=\"line\">解释：所有可能的线路是：</span><br><span class=\"line\"><span class=\"string\">&quot;D&quot;</span> -&gt; <span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;B&quot;</span> -&gt; <span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;C&quot;</span> -&gt; <span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\"><span class=\"string\">&quot;A&quot;</span>. </span><br><span class=\"line\">显然，旅行终点站是 <span class=\"string\">&quot;A&quot;</span> 。</span><br></pre></td></tr></table></figure>\n\n<p>示例 3：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：paths = [[<span class=\"string\">&quot;A&quot;</span>,<span class=\"string\">&quot;Z&quot;</span>]]</span><br><span class=\"line\">输出：<span class=\"string\">&quot;Z&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>解题思路:</p>\n<p>将每个数组的起点和终点站分开存储,然后拿终点站去起点站查询没有查询道德的就是最终的 终点站</p>\n<p>好了 上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> destCity = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">paths</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> i <span class=\"keyword\">in</span> paths)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 数组的起点和终点以键值对的形式分开存储</span></span><br><span class=\"line\">         map.set(paths[i][<span class=\"number\">0</span>],paths[i][<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> [key,value] <span class=\"keyword\">of</span> map)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 拿值去查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!map.has(value))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 返回找不到的那一个</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"✨杨辉三角","cover":"/img/pic/jiao.gif","top_img":"/img/pic/bg5.png","date":"2021-09-19T16:00:00.000Z","updated":"2021-09-22T14:05:00.000Z","type":"算法","aside":true,"_content":"\n给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。\n在「杨辉三角」中，每个数是它左上方和右上方的数的和。\n![在这里插入图片描述](/img/pic/jiao.gif)\n\n示例 1:\n\n```js\n输入: numRows = 5\n输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n```\n示例 2:\n\n```js\n输入: numRows = 1\n输出: [[1]]\n```\n\n\n```js\n思路：\ni=0 下标 从0开始\n[\n\t[1] => arr[i]\n\t[1,1] =>arr[i+1]\n\t[1,2,1] => arr[i+2]\n\t[1,3,3,1] => arr[i+3]\n]\n1.从第三个开始，中间的数字 都是前一个数组里的前一个数字和后一个数组的和\n2.写的时候前俩个数组 可以直接给写死\n3.从第三个开始 [1,arr[i+1][0]+arr[i+1][1],1] 以此类推...\n```\n\n开始写代码：\n\n```js\nvar generate = function (numRows) {\n    // 给定一个数组\n    let arr = [];\n    for (let i = 0; i < numRows; i++) {\n        // 前俩个可以给死\n        i === 0 && arr.push([1]);\n        i === 1 && arr.push([1, 1]);\n        // 如果给定的数大于1\n        if(i>1) {\n            // 在之前push一个[1]   ===> [[1],[1,1],[1]]\n            arr.push([1]);\n            // 中间则是前一个数组里面的前一个值和后一个值相加\n            for (let j = 0; j < arr[i - 1].length - 1; j++) {\n                arr[i].push(arr[i - 1][j] + arr[i - 1][j + 1]);\n            }\n            // 在结尾push个1\n            arr[i].push(1);\n        }\n\n    }\n    return arr;\n};\n```\n感谢你的观看,如果可以 这是我的csdn博客链接: https://blog.csdn.net/Eternalyii 我会在上面更新我的最新文章,感谢你的到来\n","source":"_posts/杨辉三角.md","raw":"---\ntitle: ✨杨辉三角\ntags: [算法,javascript]\ncover: /img/pic/jiao.gif\ntop_img: /img/pic/bg5.png\ncategories: 算法\ndate: 2021-9-20 00:00:00\nupdated: 2021-9-22 22:05:00\ntype: \"算法\"\naside: true\n---\n\n给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。\n在「杨辉三角」中，每个数是它左上方和右上方的数的和。\n![在这里插入图片描述](/img/pic/jiao.gif)\n\n示例 1:\n\n```js\n输入: numRows = 5\n输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n```\n示例 2:\n\n```js\n输入: numRows = 1\n输出: [[1]]\n```\n\n\n```js\n思路：\ni=0 下标 从0开始\n[\n\t[1] => arr[i]\n\t[1,1] =>arr[i+1]\n\t[1,2,1] => arr[i+2]\n\t[1,3,3,1] => arr[i+3]\n]\n1.从第三个开始，中间的数字 都是前一个数组里的前一个数字和后一个数组的和\n2.写的时候前俩个数组 可以直接给写死\n3.从第三个开始 [1,arr[i+1][0]+arr[i+1][1],1] 以此类推...\n```\n\n开始写代码：\n\n```js\nvar generate = function (numRows) {\n    // 给定一个数组\n    let arr = [];\n    for (let i = 0; i < numRows; i++) {\n        // 前俩个可以给死\n        i === 0 && arr.push([1]);\n        i === 1 && arr.push([1, 1]);\n        // 如果给定的数大于1\n        if(i>1) {\n            // 在之前push一个[1]   ===> [[1],[1,1],[1]]\n            arr.push([1]);\n            // 中间则是前一个数组里面的前一个值和后一个值相加\n            for (let j = 0; j < arr[i - 1].length - 1; j++) {\n                arr[i].push(arr[i - 1][j] + arr[i - 1][j + 1]);\n            }\n            // 在结尾push个1\n            arr[i].push(1);\n        }\n\n    }\n    return arr;\n};\n```\n感谢你的观看,如果可以 这是我的csdn博客链接: https://blog.csdn.net/Eternalyii 我会在上面更新我的最新文章,感谢你的到来\n","slug":"杨辉三角","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckuayruus00096gfc8gly7bfv","content":"<p>给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。<br>在「杨辉三角」中，每个数是它左上方和右上方的数的和。<br><img src=\"/img/pic/jiao.gif\" alt=\"在这里插入图片描述\"></p>\n<p>示例 1:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: numRows = <span class=\"number\">5</span></span><br><span class=\"line\">输出: [[<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>]]</span><br></pre></td></tr></table></figure>\n<p>示例 2:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: numRows = <span class=\"number\">1</span></span><br><span class=\"line\">输出: [[<span class=\"number\">1</span>]]</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">思路：</span><br><span class=\"line\">i=<span class=\"number\">0</span> 下标 从<span class=\"number\">0</span>开始</span><br><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">1</span>] =&gt; arr[i]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">1</span>] =&gt;arr[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>] =&gt; arr[i+<span class=\"number\">2</span>]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>] =&gt; arr[i+<span class=\"number\">3</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"number\">1.</span>从第三个开始，中间的数字 都是前一个数组里的前一个数字和后一个数组的和</span><br><span class=\"line\"><span class=\"number\">2.</span>写的时候前俩个数组 可以直接给写死</span><br><span class=\"line\"><span class=\"number\">3.</span>从第三个开始 [<span class=\"number\">1</span>,arr[i+<span class=\"number\">1</span>][<span class=\"number\">0</span>]+arr[i+<span class=\"number\">1</span>][<span class=\"number\">1</span>],<span class=\"number\">1</span>] 以此类推...</span><br></pre></td></tr></table></figure>\n\n<p>开始写代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> generate = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">numRows</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 给定一个数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; numRows; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 前俩个可以给死</span></span><br><span class=\"line\">        i === <span class=\"number\">0</span> &amp;&amp; arr.push([<span class=\"number\">1</span>]);</span><br><span class=\"line\">        i === <span class=\"number\">1</span> &amp;&amp; arr.push([<span class=\"number\">1</span>, <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果给定的数大于1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 在之前push一个[1]   ===&gt; [[1],[1,1],[1]]</span></span><br><span class=\"line\">            arr.push([<span class=\"number\">1</span>]);</span><br><span class=\"line\">            <span class=\"comment\">// 中间则是前一个数组里面的前一个值和后一个值相加</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arr[i - <span class=\"number\">1</span>].length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                arr[i].push(arr[i - <span class=\"number\">1</span>][j] + arr[i - <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 在结尾push个1</span></span><br><span class=\"line\">            arr[i].push(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>感谢你的观看,如果可以 这是我的csdn博客链接: <a href=\"https://blog.csdn.net/Eternalyii\">https://blog.csdn.net/Eternalyii</a> 我会在上面更新我的最新文章,感谢你的到来</p>\n","site":{"data":{}},"excerpt":"","more":"<p>给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。<br>在「杨辉三角」中，每个数是它左上方和右上方的数的和。<br><img src=\"/img/pic/jiao.gif\" alt=\"在这里插入图片描述\"></p>\n<p>示例 1:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: numRows = <span class=\"number\">5</span></span><br><span class=\"line\">输出: [[<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>],[<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>]]</span><br></pre></td></tr></table></figure>\n<p>示例 2:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: numRows = <span class=\"number\">1</span></span><br><span class=\"line\">输出: [[<span class=\"number\">1</span>]]</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">思路：</span><br><span class=\"line\">i=<span class=\"number\">0</span> 下标 从<span class=\"number\">0</span>开始</span><br><span class=\"line\">[</span><br><span class=\"line\">\t[<span class=\"number\">1</span>] =&gt; arr[i]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">1</span>] =&gt;arr[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>] =&gt; arr[i+<span class=\"number\">2</span>]</span><br><span class=\"line\">\t[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>] =&gt; arr[i+<span class=\"number\">3</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"number\">1.</span>从第三个开始，中间的数字 都是前一个数组里的前一个数字和后一个数组的和</span><br><span class=\"line\"><span class=\"number\">2.</span>写的时候前俩个数组 可以直接给写死</span><br><span class=\"line\"><span class=\"number\">3.</span>从第三个开始 [<span class=\"number\">1</span>,arr[i+<span class=\"number\">1</span>][<span class=\"number\">0</span>]+arr[i+<span class=\"number\">1</span>][<span class=\"number\">1</span>],<span class=\"number\">1</span>] 以此类推...</span><br></pre></td></tr></table></figure>\n\n<p>开始写代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> generate = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">numRows</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 给定一个数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; numRows; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 前俩个可以给死</span></span><br><span class=\"line\">        i === <span class=\"number\">0</span> &amp;&amp; arr.push([<span class=\"number\">1</span>]);</span><br><span class=\"line\">        i === <span class=\"number\">1</span> &amp;&amp; arr.push([<span class=\"number\">1</span>, <span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 如果给定的数大于1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 在之前push一个[1]   ===&gt; [[1],[1,1],[1]]</span></span><br><span class=\"line\">            arr.push([<span class=\"number\">1</span>]);</span><br><span class=\"line\">            <span class=\"comment\">// 中间则是前一个数组里面的前一个值和后一个值相加</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arr[i - <span class=\"number\">1</span>].length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                arr[i].push(arr[i - <span class=\"number\">1</span>][j] + arr[i - <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 在结尾push个1</span></span><br><span class=\"line\">            arr[i].push(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>感谢你的观看,如果可以 这是我的csdn博客链接: <a href=\"https://blog.csdn.net/Eternalyii\">https://blog.csdn.net/Eternalyii</a> 我会在上面更新我的最新文章,感谢你的到来</p>\n"},{"title":"✨递归和动态规划解“爬楼梯“算法","cover":"/img/pic/palouti.jpg","top_img":"/img/pic/bg5.jpg","comments":1,"date":"2021-09-23T09:19:00.000Z","updated":"2021-10-01T05:32:31.000Z","_content":"\n假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n\n注意：给定 n 是一个正整数。\n\n示例 1：\n\n```js\n输入： 2\n输出： 2\n解释： 有两种方法可以爬到楼顶。\n1.  1 阶 + 1 阶\n2.  2 阶\n```\n\n\n示例 2：\n\n```js\n输入： 3\n输出： 3\n解释： 有三种方法可以爬到楼顶。\n\n1.  1 阶 + 1 阶 + 1 阶\n2.  1 阶 + 2 阶\n3.  2 阶 + 1 阶\n```\n\n```js\n解法：\n\n0阶=> （1）不需要走 走法所以为1种\n\n1阶=> （1）\n\n2阶=> （1+1）+（2）0阶+1阶\n\n3阶 => （1+1+1） + （1+2）+（2+1）2阶+1阶\n\n4阶 => （1+1+1+1） + （1+2+1）+（1+1+2）+（2+1+1）+（2+2） 3阶+2阶\n......\n\n总结：方法数 = f(n-1)+f(n-2)；\n```\n\n\n\n下面是思路的递归图解：\n\n![share](/img/pic/palouti.jpg)\n\n公式有了，可以直接用递归解决，就是数值过大的话，运行速率会很慢\n\n```js\nvar climbStairs = function (n) {\n    if (n < 2) { return 1; }\n    return climbStairs(n - 2) + climbStairs(n - 1);\n};\n```\n\n下面用到了动态规划，大大解决了递归所带来的效率低下的问题：\n\n```js\nvar climbStairs = function (n) {\n    // 台阶数小于2的 都只需要1种方法\n    if (n < 2) { return 1 }\n    // 如果大于2 定义一个dp 将每次的方法记录下来 \n    const dp = [1, 1];\n    for (let i = 2; i <= n; i++) {\n        // 根据公式每次的值都是前面俩次台阶的方法和\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n    // 输出最后一位就可以了\n    return dp[n];\n};\n```\n\n","source":"_posts/爬楼梯.md","raw":"---\ntitle: ✨递归和动态规划解“爬楼梯“算法\ntags: [javascript,算法]\ncover: /img/pic/palouti.jpg\ntop_img: /img/pic/bg5.jpg\ncategories: javascript\ncomments: true\ndate: 2021-9-23 17:19:00\nupdated:\n---\n\n假设你正在爬楼梯。需要 n 阶你才能到达楼顶。\n\n每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？\n\n注意：给定 n 是一个正整数。\n\n示例 1：\n\n```js\n输入： 2\n输出： 2\n解释： 有两种方法可以爬到楼顶。\n1.  1 阶 + 1 阶\n2.  2 阶\n```\n\n\n示例 2：\n\n```js\n输入： 3\n输出： 3\n解释： 有三种方法可以爬到楼顶。\n\n1.  1 阶 + 1 阶 + 1 阶\n2.  1 阶 + 2 阶\n3.  2 阶 + 1 阶\n```\n\n```js\n解法：\n\n0阶=> （1）不需要走 走法所以为1种\n\n1阶=> （1）\n\n2阶=> （1+1）+（2）0阶+1阶\n\n3阶 => （1+1+1） + （1+2）+（2+1）2阶+1阶\n\n4阶 => （1+1+1+1） + （1+2+1）+（1+1+2）+（2+1+1）+（2+2） 3阶+2阶\n......\n\n总结：方法数 = f(n-1)+f(n-2)；\n```\n\n\n\n下面是思路的递归图解：\n\n![share](/img/pic/palouti.jpg)\n\n公式有了，可以直接用递归解决，就是数值过大的话，运行速率会很慢\n\n```js\nvar climbStairs = function (n) {\n    if (n < 2) { return 1; }\n    return climbStairs(n - 2) + climbStairs(n - 1);\n};\n```\n\n下面用到了动态规划，大大解决了递归所带来的效率低下的问题：\n\n```js\nvar climbStairs = function (n) {\n    // 台阶数小于2的 都只需要1种方法\n    if (n < 2) { return 1 }\n    // 如果大于2 定义一个dp 将每次的方法记录下来 \n    const dp = [1, 1];\n    for (let i = 2; i <= n; i++) {\n        // 根据公式每次的值都是前面俩次台阶的方法和\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n    // 输出最后一位就可以了\n    return dp[n];\n};\n```\n\n","slug":"爬楼梯","published":1,"layout":"post","photos":[],"link":"","_id":"ckuayruux000c6gfc1jpcfnjh","content":"<p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p>\n<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n<p>注意：给定 n 是一个正整数。</p>\n<p>示例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入： <span class=\"number\">2</span></span><br><span class=\"line\">输出： <span class=\"number\">2</span></span><br><span class=\"line\">解释： 有两种方法可以爬到楼顶。</span><br><span class=\"line\"><span class=\"number\">1.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶</span><br><span class=\"line\"><span class=\"number\">2.</span>  <span class=\"number\">2</span> 阶</span><br></pre></td></tr></table></figure>\n\n\n<p>示例 2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入： <span class=\"number\">3</span></span><br><span class=\"line\">输出： <span class=\"number\">3</span></span><br><span class=\"line\">解释： 有三种方法可以爬到楼顶。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶</span><br><span class=\"line\"><span class=\"number\">2.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">2</span> 阶</span><br><span class=\"line\"><span class=\"number\">3.</span>  <span class=\"number\">2</span> 阶 + <span class=\"number\">1</span> 阶</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解法：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span>阶=&gt; （<span class=\"number\">1</span>）不需要走 走法所以为<span class=\"number\">1</span>种</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>阶=&gt; （<span class=\"number\">1</span>）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>阶=&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>）+（<span class=\"number\">2</span>）<span class=\"number\">0</span>阶+<span class=\"number\">1</span>阶</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>阶 =&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>） + （<span class=\"number\">1</span>+<span class=\"number\">2</span>）+（<span class=\"number\">2</span>+<span class=\"number\">1</span>）<span class=\"number\">2</span>阶+<span class=\"number\">1</span>阶</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span>阶 =&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>） + （<span class=\"number\">1</span>+<span class=\"number\">2</span>+<span class=\"number\">1</span>）+（<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">2</span>）+（<span class=\"number\">2</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>）+（<span class=\"number\">2</span>+<span class=\"number\">2</span>） <span class=\"number\">3</span>阶+<span class=\"number\">2</span>阶</span><br><span class=\"line\">......</span><br><span class=\"line\"></span><br><span class=\"line\">总结：方法数 = f(n-<span class=\"number\">1</span>)+f(n-<span class=\"number\">2</span>)；</span><br></pre></td></tr></table></figure>\n\n\n\n<p>下面是思路的递归图解：</p>\n<p><img src=\"/img/pic/palouti.jpg\" alt=\"share\"></p>\n<p>公式有了，可以直接用递归解决，就是数值过大的话，运行速率会很慢</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">2</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> climbStairs(n - <span class=\"number\">2</span>) + climbStairs(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>下面用到了动态规划，大大解决了递归所带来的效率低下的问题：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 台阶数小于2的 都只需要1种方法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">2</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果大于2 定义一个dp 将每次的方法记录下来 </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据公式每次的值都是前面俩次台阶的方法和</span></span><br><span class=\"line\">        dp[i] = dp[i - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 输出最后一位就可以了</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p>\n<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n<p>注意：给定 n 是一个正整数。</p>\n<p>示例 1：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入： <span class=\"number\">2</span></span><br><span class=\"line\">输出： <span class=\"number\">2</span></span><br><span class=\"line\">解释： 有两种方法可以爬到楼顶。</span><br><span class=\"line\"><span class=\"number\">1.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶</span><br><span class=\"line\"><span class=\"number\">2.</span>  <span class=\"number\">2</span> 阶</span><br></pre></td></tr></table></figure>\n\n\n<p>示例 2：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入： <span class=\"number\">3</span></span><br><span class=\"line\">输出： <span class=\"number\">3</span></span><br><span class=\"line\">解释： 有三种方法可以爬到楼顶。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶 + <span class=\"number\">1</span> 阶</span><br><span class=\"line\"><span class=\"number\">2.</span>  <span class=\"number\">1</span> 阶 + <span class=\"number\">2</span> 阶</span><br><span class=\"line\"><span class=\"number\">3.</span>  <span class=\"number\">2</span> 阶 + <span class=\"number\">1</span> 阶</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解法：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span>阶=&gt; （<span class=\"number\">1</span>）不需要走 走法所以为<span class=\"number\">1</span>种</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>阶=&gt; （<span class=\"number\">1</span>）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>阶=&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>）+（<span class=\"number\">2</span>）<span class=\"number\">0</span>阶+<span class=\"number\">1</span>阶</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>阶 =&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>） + （<span class=\"number\">1</span>+<span class=\"number\">2</span>）+（<span class=\"number\">2</span>+<span class=\"number\">1</span>）<span class=\"number\">2</span>阶+<span class=\"number\">1</span>阶</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span>阶 =&gt; （<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>） + （<span class=\"number\">1</span>+<span class=\"number\">2</span>+<span class=\"number\">1</span>）+（<span class=\"number\">1</span>+<span class=\"number\">1</span>+<span class=\"number\">2</span>）+（<span class=\"number\">2</span>+<span class=\"number\">1</span>+<span class=\"number\">1</span>）+（<span class=\"number\">2</span>+<span class=\"number\">2</span>） <span class=\"number\">3</span>阶+<span class=\"number\">2</span>阶</span><br><span class=\"line\">......</span><br><span class=\"line\"></span><br><span class=\"line\">总结：方法数 = f(n-<span class=\"number\">1</span>)+f(n-<span class=\"number\">2</span>)；</span><br></pre></td></tr></table></figure>\n\n\n\n<p>下面是思路的递归图解：</p>\n<p><img src=\"/img/pic/palouti.jpg\" alt=\"share\"></p>\n<p>公式有了，可以直接用递归解决，就是数值过大的话，运行速率会很慢</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">2</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> climbStairs(n - <span class=\"number\">2</span>) + climbStairs(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>下面用到了动态规划，大大解决了递归所带来的效率低下的问题：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 台阶数小于2的 都只需要1种方法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">2</span>) &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果大于2 定义一个dp 将每次的方法记录下来 </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp = [<span class=\"number\">1</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 根据公式每次的值都是前面俩次台阶的方法和</span></span><br><span class=\"line\">        dp[i] = dp[i - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 输出最后一位就可以了</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"✨网站资源|VPN","cover":"/img/pic/ziyuan01.jpg","top_img":"/img/pic/bg5.jpg","comments":1,"date":"2021-10-02T01:00:00.000Z","updated":"2021-10-02T01:00:00.000Z","sticky":1,"_content":"\n#### 资源网站:\n\n1. https://wallhaven.cc/\n\n   这是一个图片资源网站,图片的格式在里面也是应有尽有,4k..\n\n   \n\n2. https://cloudconvert.com/png-to-ico\n\n   这是一个将图片转换成ico格式,比如你在换电脑里面的文件图标,你可能就会需要这个网站,来将你吧需要的图片转换成你想要的ico图标格式的![image-20210925095437689](/img/pic/ico01.png)\n\n   这就是网站打开的样子,你可以直接把你的图片直接拖进去,也可以点击上传,总之不要太好用,并且速度很快....\n\n3. http://pngimg.com/\n\n   这是一个png格式的素材网站,如果在做设计方面或者需要用到素材的,这里有很多场景的素材,例如:蛇的素材\n\n   要说我为什么找🐍的素材,完全是因为他是第一个.拉拉..\n\n   ![image-20210925095437689](/img/pic/png01.png)\t如果你需要直接点击dowmload下载就可以了...\n\n4. https://unsplash.com/\n\n   这是一个图片网站，和上面的https://wallhaven.cc/不同,他主要是整合了创意图片和一些生活类的图片,更贴近生活,如果你要为了拍照而找灵感,这个网站是不不错的选择\n\n   ![c01](/img/pic/c01.png)\n\n5. https://www.3gbizhi.com/\n\n   一个手机壁纸网站,可以进来看看,总有你喜欢的图片在里面\n\n   ![image-20210925102136991](/img/pic/phone01.png)\n\n6. https://www.iloveimg.com/zh-cn\n\n   一个编辑图片的网站,你想要的编辑操作它里面都有,如果你平时有在用ps的话,可以忽略这个网站\n\n   关键这个网站一直是免费的,白嫖的总是最好的\n\n   ![image-20210925101519064](/img/pic/caozuo01.png)\n\n7. https://www.aconvert.com/cn/\n\n   这是一个在线转换文档,图像,视频.音频...是一个很便捷的网站,可以在线编译,最主要的是,他是个免费的...\n\n   图片就不贴这了,因为一你打开你就知道该怎么做..\n\n8. https://www.alltoall.net/\n\n   也是个转换资源的网站,他主要是将一些 PDF转word 或者压缩图片等等一类的..\n\n#### color\n\n1. https://webgradients.com/\n\n   一个渐变色的网站,里面很多种色彩,开箱即用,在平时写网页的时候,这个网站可能派得上用处\n\n2. http://zhongguose.com/\n\n   这个就没什么好说的了,当之无愧的中国色网站,也是非常好用的一个,我平时要是找颜色,或者用到什么,都是在这个上面找,他真是给了我一个很好的体验,没点击一个颜色,他会以整个屏幕变换颜色反馈给我们...真的非常棒\n\n   ![image-20210925102826706](/img/pic/color01.png)\n\n   \n\n#### VPN(v2ray): \n\n- https://bilibili.steins-gate.network/user/\n\n  一个好用又便宜的vpn网站,你也可以白嫖,白嫖的后果就是进小黑屋.\n\n  接下来手把手我教你怎么用这个....\n\n  先是注册一个账号,然后点击登录进去\n\n1. 这是你登陆之后的页面:\n\n   ![image-20210925102826706](/img/pic/ray01.png)\n\n2. 然后下载软件\n\n   ![image-20211002104859885](/img/pic/ray02.png)\n\n3. 软件下载好之后 打开\n\n   ![image-20211002105230029](/img/pic/ray04.png)\n\n4. 点击订阅设置之后\n\n   在下载软件时 复制的链接 粘贴进去 \n\n   点击确定之后 ,再去点击更新订阅 (更新订阅 在订阅 按钮那里)\n\n   ![image-20211002105356716](/img/pic/ray05.png)\n\n5. 然后会出现像下面这个一样的节点,\n\n   对每个节点单击鼠标右边 设置为活动服务器 就可以用了\n\n   ![image-20211002110425750](/img/pic/ray06.png)\n\n6. 然后你的电脑右边的小图标 是不是又v2ray图标了 ,点击右键 将http代理设置为 全局模式就可以了 如果你不用了 就给他关闭就好了\n\nvpn虽好,但过渡去用,建议拿来学习用,比如用来进github官网...(●'◡'●)","source":"_posts/资源整合.md","raw":"---\ntitle: ✨网站资源|VPN\ntags: [资源]\ncover: /img/pic/ziyuan01.jpg\ntop_img: /img/pic/bg5.jpg\ncategories: 资源\ncomments: true\ndate: 2021-10-02 09:00:00\nupdated: 2021-10-02 09:00:00\nsticky: 1\n---\n\n#### 资源网站:\n\n1. https://wallhaven.cc/\n\n   这是一个图片资源网站,图片的格式在里面也是应有尽有,4k..\n\n   \n\n2. https://cloudconvert.com/png-to-ico\n\n   这是一个将图片转换成ico格式,比如你在换电脑里面的文件图标,你可能就会需要这个网站,来将你吧需要的图片转换成你想要的ico图标格式的![image-20210925095437689](/img/pic/ico01.png)\n\n   这就是网站打开的样子,你可以直接把你的图片直接拖进去,也可以点击上传,总之不要太好用,并且速度很快....\n\n3. http://pngimg.com/\n\n   这是一个png格式的素材网站,如果在做设计方面或者需要用到素材的,这里有很多场景的素材,例如:蛇的素材\n\n   要说我为什么找🐍的素材,完全是因为他是第一个.拉拉..\n\n   ![image-20210925095437689](/img/pic/png01.png)\t如果你需要直接点击dowmload下载就可以了...\n\n4. https://unsplash.com/\n\n   这是一个图片网站，和上面的https://wallhaven.cc/不同,他主要是整合了创意图片和一些生活类的图片,更贴近生活,如果你要为了拍照而找灵感,这个网站是不不错的选择\n\n   ![c01](/img/pic/c01.png)\n\n5. https://www.3gbizhi.com/\n\n   一个手机壁纸网站,可以进来看看,总有你喜欢的图片在里面\n\n   ![image-20210925102136991](/img/pic/phone01.png)\n\n6. https://www.iloveimg.com/zh-cn\n\n   一个编辑图片的网站,你想要的编辑操作它里面都有,如果你平时有在用ps的话,可以忽略这个网站\n\n   关键这个网站一直是免费的,白嫖的总是最好的\n\n   ![image-20210925101519064](/img/pic/caozuo01.png)\n\n7. https://www.aconvert.com/cn/\n\n   这是一个在线转换文档,图像,视频.音频...是一个很便捷的网站,可以在线编译,最主要的是,他是个免费的...\n\n   图片就不贴这了,因为一你打开你就知道该怎么做..\n\n8. https://www.alltoall.net/\n\n   也是个转换资源的网站,他主要是将一些 PDF转word 或者压缩图片等等一类的..\n\n#### color\n\n1. https://webgradients.com/\n\n   一个渐变色的网站,里面很多种色彩,开箱即用,在平时写网页的时候,这个网站可能派得上用处\n\n2. http://zhongguose.com/\n\n   这个就没什么好说的了,当之无愧的中国色网站,也是非常好用的一个,我平时要是找颜色,或者用到什么,都是在这个上面找,他真是给了我一个很好的体验,没点击一个颜色,他会以整个屏幕变换颜色反馈给我们...真的非常棒\n\n   ![image-20210925102826706](/img/pic/color01.png)\n\n   \n\n#### VPN(v2ray): \n\n- https://bilibili.steins-gate.network/user/\n\n  一个好用又便宜的vpn网站,你也可以白嫖,白嫖的后果就是进小黑屋.\n\n  接下来手把手我教你怎么用这个....\n\n  先是注册一个账号,然后点击登录进去\n\n1. 这是你登陆之后的页面:\n\n   ![image-20210925102826706](/img/pic/ray01.png)\n\n2. 然后下载软件\n\n   ![image-20211002104859885](/img/pic/ray02.png)\n\n3. 软件下载好之后 打开\n\n   ![image-20211002105230029](/img/pic/ray04.png)\n\n4. 点击订阅设置之后\n\n   在下载软件时 复制的链接 粘贴进去 \n\n   点击确定之后 ,再去点击更新订阅 (更新订阅 在订阅 按钮那里)\n\n   ![image-20211002105356716](/img/pic/ray05.png)\n\n5. 然后会出现像下面这个一样的节点,\n\n   对每个节点单击鼠标右边 设置为活动服务器 就可以用了\n\n   ![image-20211002110425750](/img/pic/ray06.png)\n\n6. 然后你的电脑右边的小图标 是不是又v2ray图标了 ,点击右键 将http代理设置为 全局模式就可以了 如果你不用了 就给他关闭就好了\n\nvpn虽好,但过渡去用,建议拿来学习用,比如用来进github官网...(●'◡'●)","slug":"资源整合","published":1,"layout":"post","photos":[],"link":"","_id":"ckuayruuy000d6gfc4it5cikn","content":"<h4 id=\"资源网站\"><a href=\"#资源网站\" class=\"headerlink\" title=\"资源网站:\"></a>资源网站:</h4><ol>\n<li><p><a href=\"https://wallhaven.cc/\">https://wallhaven.cc/</a></p>\n<p>这是一个图片资源网站,图片的格式在里面也是应有尽有,4k..</p>\n</li>\n<li><p><a href=\"https://cloudconvert.com/png-to-ico\">https://cloudconvert.com/png-to-ico</a></p>\n<p>这是一个将图片转换成ico格式,比如你在换电脑里面的文件图标,你可能就会需要这个网站,来将你吧需要的图片转换成你想要的ico图标格式的<img src=\"/img/pic/ico01.png\" alt=\"image-20210925095437689\"></p>\n<p>这就是网站打开的样子,你可以直接把你的图片直接拖进去,也可以点击上传,总之不要太好用,并且速度很快….</p>\n</li>\n<li><p><a href=\"http://pngimg.com/\">http://pngimg.com/</a></p>\n<p>这是一个png格式的素材网站,如果在做设计方面或者需要用到素材的,这里有很多场景的素材,例如:蛇的素材</p>\n<p>要说我为什么找🐍的素材,完全是因为他是第一个.拉拉..</p>\n<p><img src=\"/img/pic/png01.png\" alt=\"image-20210925095437689\">    如果你需要直接点击dowmload下载就可以了…</p>\n</li>\n<li><p><a href=\"https://unsplash.com/\">https://unsplash.com/</a></p>\n<p>这是一个图片网站，和上面的<a href=\"https://wallhaven.cc/%E4%B8%8D%E5%90%8C,%E4%BB%96%E4%B8%BB%E8%A6%81%E6%98%AF%E6%95%B4%E5%90%88%E4%BA%86%E5%88%9B%E6%84%8F%E5%9B%BE%E7%89%87%E5%92%8C%E4%B8%80%E4%BA%9B%E7%94%9F%E6%B4%BB%E7%B1%BB%E7%9A%84%E5%9B%BE%E7%89%87,%E6%9B%B4%E8%B4%B4%E8%BF%91%E7%94%9F%E6%B4%BB,%E5%A6%82%E6%9E%9C%E4%BD%A0%E8%A6%81%E4%B8%BA%E4%BA%86%E6%8B%8D%E7%85%A7%E8%80%8C%E6%89%BE%E7%81%B5%E6%84%9F,%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%98%AF%E4%B8%8D%E4%B8%8D%E9%94%99%E7%9A%84%E9%80%89%E6%8B%A9\">https://wallhaven.cc/不同,他主要是整合了创意图片和一些生活类的图片,更贴近生活,如果你要为了拍照而找灵感,这个网站是不不错的选择</a></p>\n<p><img src=\"/img/pic/c01.png\" alt=\"c01\"></p>\n</li>\n<li><p><a href=\"https://www.3gbizhi.com/\">https://www.3gbizhi.com/</a></p>\n<p>一个手机壁纸网站,可以进来看看,总有你喜欢的图片在里面</p>\n<p><img src=\"/img/pic/phone01.png\" alt=\"image-20210925102136991\"></p>\n</li>\n<li><p><a href=\"https://www.iloveimg.com/zh-cn\">https://www.iloveimg.com/zh-cn</a></p>\n<p>一个编辑图片的网站,你想要的编辑操作它里面都有,如果你平时有在用ps的话,可以忽略这个网站</p>\n<p>关键这个网站一直是免费的,白嫖的总是最好的</p>\n<p><img src=\"/img/pic/caozuo01.png\" alt=\"image-20210925101519064\"></p>\n</li>\n<li><p><a href=\"https://www.aconvert.com/cn/\">https://www.aconvert.com/cn/</a></p>\n<p>这是一个在线转换文档,图像,视频.音频…是一个很便捷的网站,可以在线编译,最主要的是,他是个免费的…</p>\n<p>图片就不贴这了,因为一你打开你就知道该怎么做..</p>\n</li>\n<li><p><a href=\"https://www.alltoall.net/\">https://www.alltoall.net/</a></p>\n<p>也是个转换资源的网站,他主要是将一些 PDF转word 或者压缩图片等等一类的..</p>\n</li>\n</ol>\n<h4 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"color\"></a>color</h4><ol>\n<li><p><a href=\"https://webgradients.com/\">https://webgradients.com/</a></p>\n<p>一个渐变色的网站,里面很多种色彩,开箱即用,在平时写网页的时候,这个网站可能派得上用处</p>\n</li>\n<li><p><a href=\"http://zhongguose.com/\">http://zhongguose.com/</a></p>\n<p>这个就没什么好说的了,当之无愧的中国色网站,也是非常好用的一个,我平时要是找颜色,或者用到什么,都是在这个上面找,他真是给了我一个很好的体验,没点击一个颜色,他会以整个屏幕变换颜色反馈给我们…真的非常棒</p>\n<p><img src=\"/img/pic/color01.png\" alt=\"image-20210925102826706\"></p>\n</li>\n</ol>\n<h4 id=\"VPN-v2ray\"><a href=\"#VPN-v2ray\" class=\"headerlink\" title=\"VPN(v2ray):\"></a>VPN(v2ray):</h4><ul>\n<li><p><a href=\"https://bilibili.steins-gate.network/user/\">https://bilibili.steins-gate.network/user/</a></p>\n<p>一个好用又便宜的vpn网站,你也可以白嫖,白嫖的后果就是进小黑屋.</p>\n<p>接下来手把手我教你怎么用这个….</p>\n<p>先是注册一个账号,然后点击登录进去</p>\n</li>\n</ul>\n<ol>\n<li><p>这是你登陆之后的页面:</p>\n<p><img src=\"/img/pic/ray01.png\" alt=\"image-20210925102826706\"></p>\n</li>\n<li><p>然后下载软件</p>\n<p><img src=\"/img/pic/ray02.png\" alt=\"image-20211002104859885\"></p>\n</li>\n<li><p>软件下载好之后 打开</p>\n<p><img src=\"/img/pic/ray04.png\" alt=\"image-20211002105230029\"></p>\n</li>\n<li><p>点击订阅设置之后</p>\n<p>在下载软件时 复制的链接 粘贴进去 </p>\n<p>点击确定之后 ,再去点击更新订阅 (更新订阅 在订阅 按钮那里)</p>\n<p><img src=\"/img/pic/ray05.png\" alt=\"image-20211002105356716\"></p>\n</li>\n<li><p>然后会出现像下面这个一样的节点,</p>\n<p>对每个节点单击鼠标右边 设置为活动服务器 就可以用了</p>\n<p><img src=\"/img/pic/ray06.png\" alt=\"image-20211002110425750\"></p>\n</li>\n<li><p>然后你的电脑右边的小图标 是不是又v2ray图标了 ,点击右键 将http代理设置为 全局模式就可以了 如果你不用了 就给他关闭就好了</p>\n</li>\n</ol>\n<p>vpn虽好,但过渡去用,建议拿来学习用,比如用来进github官网…(●’◡’●)</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"资源网站\"><a href=\"#资源网站\" class=\"headerlink\" title=\"资源网站:\"></a>资源网站:</h4><ol>\n<li><p><a href=\"https://wallhaven.cc/\">https://wallhaven.cc/</a></p>\n<p>这是一个图片资源网站,图片的格式在里面也是应有尽有,4k..</p>\n</li>\n<li><p><a href=\"https://cloudconvert.com/png-to-ico\">https://cloudconvert.com/png-to-ico</a></p>\n<p>这是一个将图片转换成ico格式,比如你在换电脑里面的文件图标,你可能就会需要这个网站,来将你吧需要的图片转换成你想要的ico图标格式的<img src=\"/img/pic/ico01.png\" alt=\"image-20210925095437689\"></p>\n<p>这就是网站打开的样子,你可以直接把你的图片直接拖进去,也可以点击上传,总之不要太好用,并且速度很快….</p>\n</li>\n<li><p><a href=\"http://pngimg.com/\">http://pngimg.com/</a></p>\n<p>这是一个png格式的素材网站,如果在做设计方面或者需要用到素材的,这里有很多场景的素材,例如:蛇的素材</p>\n<p>要说我为什么找🐍的素材,完全是因为他是第一个.拉拉..</p>\n<p><img src=\"/img/pic/png01.png\" alt=\"image-20210925095437689\">    如果你需要直接点击dowmload下载就可以了…</p>\n</li>\n<li><p><a href=\"https://unsplash.com/\">https://unsplash.com/</a></p>\n<p>这是一个图片网站，和上面的<a href=\"https://wallhaven.cc/%E4%B8%8D%E5%90%8C,%E4%BB%96%E4%B8%BB%E8%A6%81%E6%98%AF%E6%95%B4%E5%90%88%E4%BA%86%E5%88%9B%E6%84%8F%E5%9B%BE%E7%89%87%E5%92%8C%E4%B8%80%E4%BA%9B%E7%94%9F%E6%B4%BB%E7%B1%BB%E7%9A%84%E5%9B%BE%E7%89%87,%E6%9B%B4%E8%B4%B4%E8%BF%91%E7%94%9F%E6%B4%BB,%E5%A6%82%E6%9E%9C%E4%BD%A0%E8%A6%81%E4%B8%BA%E4%BA%86%E6%8B%8D%E7%85%A7%E8%80%8C%E6%89%BE%E7%81%B5%E6%84%9F,%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%98%AF%E4%B8%8D%E4%B8%8D%E9%94%99%E7%9A%84%E9%80%89%E6%8B%A9\">https://wallhaven.cc/不同,他主要是整合了创意图片和一些生活类的图片,更贴近生活,如果你要为了拍照而找灵感,这个网站是不不错的选择</a></p>\n<p><img src=\"/img/pic/c01.png\" alt=\"c01\"></p>\n</li>\n<li><p><a href=\"https://www.3gbizhi.com/\">https://www.3gbizhi.com/</a></p>\n<p>一个手机壁纸网站,可以进来看看,总有你喜欢的图片在里面</p>\n<p><img src=\"/img/pic/phone01.png\" alt=\"image-20210925102136991\"></p>\n</li>\n<li><p><a href=\"https://www.iloveimg.com/zh-cn\">https://www.iloveimg.com/zh-cn</a></p>\n<p>一个编辑图片的网站,你想要的编辑操作它里面都有,如果你平时有在用ps的话,可以忽略这个网站</p>\n<p>关键这个网站一直是免费的,白嫖的总是最好的</p>\n<p><img src=\"/img/pic/caozuo01.png\" alt=\"image-20210925101519064\"></p>\n</li>\n<li><p><a href=\"https://www.aconvert.com/cn/\">https://www.aconvert.com/cn/</a></p>\n<p>这是一个在线转换文档,图像,视频.音频…是一个很便捷的网站,可以在线编译,最主要的是,他是个免费的…</p>\n<p>图片就不贴这了,因为一你打开你就知道该怎么做..</p>\n</li>\n<li><p><a href=\"https://www.alltoall.net/\">https://www.alltoall.net/</a></p>\n<p>也是个转换资源的网站,他主要是将一些 PDF转word 或者压缩图片等等一类的..</p>\n</li>\n</ol>\n<h4 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"color\"></a>color</h4><ol>\n<li><p><a href=\"https://webgradients.com/\">https://webgradients.com/</a></p>\n<p>一个渐变色的网站,里面很多种色彩,开箱即用,在平时写网页的时候,这个网站可能派得上用处</p>\n</li>\n<li><p><a href=\"http://zhongguose.com/\">http://zhongguose.com/</a></p>\n<p>这个就没什么好说的了,当之无愧的中国色网站,也是非常好用的一个,我平时要是找颜色,或者用到什么,都是在这个上面找,他真是给了我一个很好的体验,没点击一个颜色,他会以整个屏幕变换颜色反馈给我们…真的非常棒</p>\n<p><img src=\"/img/pic/color01.png\" alt=\"image-20210925102826706\"></p>\n</li>\n</ol>\n<h4 id=\"VPN-v2ray\"><a href=\"#VPN-v2ray\" class=\"headerlink\" title=\"VPN(v2ray):\"></a>VPN(v2ray):</h4><ul>\n<li><p><a href=\"https://bilibili.steins-gate.network/user/\">https://bilibili.steins-gate.network/user/</a></p>\n<p>一个好用又便宜的vpn网站,你也可以白嫖,白嫖的后果就是进小黑屋.</p>\n<p>接下来手把手我教你怎么用这个….</p>\n<p>先是注册一个账号,然后点击登录进去</p>\n</li>\n</ul>\n<ol>\n<li><p>这是你登陆之后的页面:</p>\n<p><img src=\"/img/pic/ray01.png\" alt=\"image-20210925102826706\"></p>\n</li>\n<li><p>然后下载软件</p>\n<p><img src=\"/img/pic/ray02.png\" alt=\"image-20211002104859885\"></p>\n</li>\n<li><p>软件下载好之后 打开</p>\n<p><img src=\"/img/pic/ray04.png\" alt=\"image-20211002105230029\"></p>\n</li>\n<li><p>点击订阅设置之后</p>\n<p>在下载软件时 复制的链接 粘贴进去 </p>\n<p>点击确定之后 ,再去点击更新订阅 (更新订阅 在订阅 按钮那里)</p>\n<p><img src=\"/img/pic/ray05.png\" alt=\"image-20211002105356716\"></p>\n</li>\n<li><p>然后会出现像下面这个一样的节点,</p>\n<p>对每个节点单击鼠标右边 设置为活动服务器 就可以用了</p>\n<p><img src=\"/img/pic/ray06.png\" alt=\"image-20211002110425750\"></p>\n</li>\n<li><p>然后你的电脑右边的小图标 是不是又v2ray图标了 ,点击右键 将http代理设置为 全局模式就可以了 如果你不用了 就给他关闭就好了</p>\n</li>\n</ol>\n<p>vpn虽好,但过渡去用,建议拿来学习用,比如用来进github官网…(●’◡’●)</p>\n"},{"title":"✨字符串介绍及其常见的pai用法","cover":"/img/pic/zifuchuan.jpg","top_img":"/img/pic/bg5.jpg","comments":1,"date":"2021-09-22T08:00:00.000Z","updated":"2021-09-22T14:07:00.000Z","_content":"\n## 字符串\n\n计算机产生之初，内部只能识别二进制数字，无法识别英文字母和符号。为了能让计算机识别字母、数字和符号，科学家们制定了一个对照表，字母、数字、符号跟二进制数字相对应，这样当人们输入字母的时候，计算机使用对应的二进制数字处理，这样就相当于计算机能识别字母、符号和数字了。这个对照表叫做ASCII，翻译成中文叫阿斯克码。\n\n### 阿斯克码\n\n阿斯克码计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码）。所以对于英文字母和符号的支持是很全面的。\n\n阿斯克码的具体内容如下：\n\n### ASCII控制字符\n\n| 二进制    | 十进制 | 十六进制 | 缩写 | 可以显示的表示法 | 名称/意义                           |\n| --------- | ------ | -------- | ---- | ---------------- | ----------------------------------- |\n| 0000 0000 | 0      | 00       | NUL  | ␀                | 空字符（Null）                      |\n| 0000 0001 | 1      | 01       | SOH  | ␁                | 标题开始                            |\n| 0000 0010 | 2      | 02       | STX  | ␂                | 本文开始                            |\n| 0000 0011 | 3      | 03       | ETX  | ␃                | 本文结束                            |\n| 0000 0100 | 4      | 04       | EOT  | ␄                | 传输结束                            |\n| 0000 0101 | 5      | 05       | ENQ  | ␅                | 请求                                |\n| 0000 0110 | 6      | 06       | ACK  | ␆                | 确认回应                            |\n| 0000 0111 | 7      | 07       | BEL  | ␇                | 响铃                                |\n| 0000 1000 | 8      | 08       | BS   | ␈                | 退格                                |\n| 0000 1001 | 9      | 09       | HT   | ␉                | 水平定位符号                        |\n| 0000 1010 | 10     | 0A       | LF   | ␊                | 换行键                              |\n| 0000 1011 | 11     | 0B       | VT   | ␋                | 垂直定位符号                        |\n| 0000 1100 | 12     | 0C       | FF   | ␌                | 换页键                              |\n| 0000 1101 | 13     | 0D       | CR   | ␍                | 归位键                              |\n| 0000 1110 | 14     | 0E       | SO   | ␎                | 取消变换（Shift out）               |\n| 0000 1111 | 15     | 0F       | SI   | ␏                | 启用变换（Shift in）                |\n| 0001 0000 | 16     | 10       | DLE  | ␐                | 跳出数据通讯                        |\n| 0001 0001 | 17     | 11       | DC1  | ␑                | 设备控制一（XON 启用软件速度控制）  |\n| 0001 0010 | 18     | 12       | DC2  | ␒                | 设备控制二                          |\n| 0001 0011 | 19     | 13       | DC3  | ␓                | 设备控制三（XOFF 停用软件速度控制） |\n| 0001 0100 | 20     | 14       | DC4  | ␔                | 设备控制四                          |\n| 0001 0101 | 21     | 15       | NAK  | ␕                | 确认失败回应                        |\n| 0001 0110 | 22     | 16       | SYN  | ␖                | 同步用暂停                          |\n| 0001 0111 | 23     | 17       | ETB  | ␗                | 区块传输结束                        |\n| 0001 1000 | 24     | 18       | CAN  | ␘                | 取消                                |\n| 0001 1001 | 25     | 19       | EM   | ␙                | 连接介质中断                        |\n| 0001 1010 | 26     | 1A       | SUB  | ␚                | 替换                                |\n| 0001 1011 | 27     | 1B       | ESC  | ␛                | 跳出                                |\n| 0001 1100 | 28     | 1C       | FS   | ␜                | 文件分割符                          |\n| 0001 1101 | 29     | 1D       | GS   | ␝                | 组群分隔符                          |\n| 0001 1110 | 30     | 1E       | RS   | ␞                | 记录分隔符                          |\n| 0001 1111 | 31     | 1F       | US   | ␟                | 单元分隔符                          |\n| 0111 1111 | 127    | 7F       | DEL  | ␡                | 删除                                |\n\n### ASCII可显示字符\n\n| 二进制    | 十进制 | 十六进制 | 图形        |\n| --------- | ------ | -------- | ----------- |\n| 0010 0000 | 32     | 20       | （空格）(␠) |\n| 0010 0001 | 33     | 21       | !           |\n| 0010 0010 | 34     | 22       | \"           |\n| 0010 0011 | 35     | 23       | #           |\n| 0010 0100 | 36     | 24       | $           |\n| 0010 0101 | 37     | 25       | %           |\n| 0010 0110 | 38     | 26       | &           |\n| 0010 0111 | 39     | 27       | '           |\n| 0010 1000 | 40     | 28       | (           |\n| 0010 1001 | 41     | 29       | )           |\n| 0010 1010 | 42     | 2A       | *           |\n| 0010 1011 | 43     | 2B       | +           |\n| 0010 1100 | 44     | 2C       | ,           |\n| 0010 1101 | 45     | 2D       | -           |\n| 0010 1110 | 46     | 2E       | .           |\n| 0010 1111 | 47     | 2F       | /           |\n| 0011 0000 | 48     | 30       | 0           |\n| 0011 0001 | 49     | 31       | 1           |\n| 0011 0010 | 50     | 32       | 2           |\n| 0011 0011 | 51     | 33       | 3           |\n| 0011 0100 | 52     | 34       | 4           |\n| 0011 0101 | 53     | 35       | 5           |\n| 0011 0110 | 54     | 36       | 6           |\n| 0011 0111 | 55     | 37       | 7           |\n| 0011 1000 | 56     | 38       | 8           |\n| 0011 1001 | 57     | 39       | 9           |\n| 0011 1010 | 58     | 3A       | :           |\n| 0011 1011 | 59     | 3B       | ;           |\n| 0011 1100 | 60     | 3C       | <           |\n| 0011 1101 | 61     | 3D       | =           |\n| 0011 1110 | 62     | 3E       | >           |\n| 0011 1111 | 63     | 3F       | ?           |\n\n| 二进制    | 十进制 | 十六进制 | 图形 |\n| --------- | ------ | -------- | ---- |\n| 0100 0000 | 64     | 40       | @    |\n| 0100 0001 | 65     | 41       | A    |\n| 0100 0010 | 66     | 42       | B    |\n| 0100 0011 | 67     | 43       | C    |\n| 0100 0100 | 68     | 44       | D    |\n| 0100 0101 | 69     | 45       | E    |\n| 0100 0110 | 70     | 46       | F    |\n| 0100 0111 | 71     | 47       | G    |\n| 0100 1000 | 72     | 48       | H    |\n| 0100 1001 | 73     | 49       | I    |\n| 0100 1010 | 74     | 4A       | J    |\n| 0100 1011 | 75     | 4B       | K    |\n| 0100 1100 | 76     | 4C       | L    |\n| 0100 1101 | 77     | 4D       | M    |\n| 0100 1110 | 78     | 4E       | N    |\n| 0100 1111 | 79     | 4F       | O    |\n| 0101 0000 | 80     | 50       | P    |\n| 0101 0001 | 81     | 51       | Q    |\n| 0101 0010 | 82     | 52       | R    |\n| 0101 0011 | 83     | 53       | S    |\n| 0101 0100 | 84     | 54       | T    |\n| 0101 0101 | 85     | 55       | U    |\n| 0101 0110 | 86     | 56       | V    |\n| 0101 0111 | 87     | 57       | W    |\n| 0101 1000 | 88     | 58       | X    |\n| 0101 1001 | 89     | 59       | Y    |\n| 0101 1010 | 90     | 5A       | Z    |\n| 0101 1011 | 91     | 5B       | [    |\n| 0101 1100 | 92     | 5C       | \\    |\n| 0101 1101 | 93     | 5D       | ]    |\n| 0101 1110 | 94     | 5E       | ^    |\n| 0101 1111 | 95     | 5F       | _    |\n\n| 二进制    | 十进制 | 十六进制 | 图形 |\n| --------- | ------ | -------- | ---- |\n| 0110 0000 | 96     | 60       | `    |\n| 0110 0001 | 97     | 61       | a    |\n| 0110 0010 | 98     | 62       | b    |\n| 0110 0011 | 99     | 63       | c    |\n| 0110 0100 | 100    | 64       | d    |\n| 0110 0101 | 101    | 65       | e    |\n| 0110 0110 | 102    | 66       | f    |\n| 0110 0111 | 103    | 67       | g    |\n| 0110 1000 | 104    | 68       | h    |\n| 0110 1001 | 105    | 69       | i    |\n| 0110 1010 | 106    | 6A       | j    |\n| 0110 1011 | 107    | 6B       | k    |\n| 0110 1100 | 108    | 6C       | l    |\n| 0110 1101 | 109    | 6D       | m    |\n| 0110 1110 | 110    | 6E       | n    |\n| 0110 1111 | 111    | 6F       | o    |\n| 0111 0000 | 112    | 70       | p    |\n| 0111 0001 | 113    | 71       | q    |\n| 0111 0010 | 114    | 72       | r    |\n| 0111 0011 | 115    | 73       | s    |\n| 0111 0100 | 116    | 74       | t    |\n| 0111 0101 | 117    | 75       | u    |\n| 0111 0110 | 118    | 76       | v    |\n| 0111 0111 | 119    | 77       | w    |\n| 0111 1000 | 120    | 78       | x    |\n| 0111 1001 | 121    | 79       | y    |\n| 0111 1010 | 122    | 7A       | z    |\n| 0111 1011 | 123    | 7B       | {    |\n| 0111 1100 | 124    | 7C       | \\|   |\n| 0111 1101 | 125    | 7D       | }    |\n| 0111 1110 | 126    | 7E       | ~    |\n\n为什么要学习阿斯克码？\n\n因为两个字符串也是可以比较大小的，比较的规则是逐字符进行比较，字符的大小由字符对应的阿斯克码决定。\n\n### 字符串的比较\n\n我们曾经碰到过一个问题，接收到文本框的两个值，一个是\"3\"，另一个是\"10\"，这两个值进行大小比较的时候，结果是：`\"3\">\"10\" === true`，出现这个结果的原因是，两个字符串进行比较的时候，是逐字符进行比较，也就是字符\"3\"先和字符\"1\"进行比较，如果第一个字符相等再进行第二个字符的比较。\n\n从阿斯克码表中，可以找到字符\"3\"和字符\"1\"相对应的值，很明显，字符\"3\"是要大于字符\"1\"的。\n\n通过阿斯克码表，我们可以得出一些字符串比较的规律：\n\n1. 字母比数字大\n2. 小写字母比大写字母大\n3. 字母越靠后越大\n\n\n\n<font color=\"blue\">思考：如何比较两个中文汉字字符的大小？</font>\n\n阿斯克码总共128个，包含符号、大小写英文字母、数字。阿斯克码是由美国人创建的，所以对于英文的支持非常好。后来随着计算机的普及，各个国家在使用计算机的时候，没办法使用本国文字，这样用起来非常困难。所以众多国家的科学家一起制定了一个更大的对照表，包含各个国家的文字符号，所以称之为万国码，也叫作unicode。\n\n其实unicode就是更大的阿斯克码。\n\n### 字符串的基本操作\n\n<font color=\"red\">字符串也可以通过下标获取字符</font>\n\n例：\n\n```js\nvar str = '你好吗';\n// 输出下标为1的字符\nconsole.log(str[1]); // 好\n```\n\n每个字符都有对应的下标，所以，字符串也可以进行遍历。\n\n<font color=\"red\">字符串是只读数据类型，不能添加新字符，不能修改字符串中的字符，不能删除某个字符</font>\n\n例：\n\n```js\nvar str = '你好吗';\n// 修改下标为1的字符\nstr[1] = \"帅\"\nconsole.log(str); // 你好吗\n```\n\n### 字符串常见API\n\n#### length属性\n\n求字符串中字符的个数 - 字符串的长度\n\n语法：\n\n```shell\n字符串.length\n```\n\n例：\n\n```js\nvar str = 'asdfvczx';\n// 输出字符串的长度\nconsole.log(str.length);\n```\n\n#### charAt方法\n\n根据指定的下标获取对应的字符\n\n语法：\n\n```shell\n字符串.charAt(下标)\n```\n\n例：\n\n```js\nvar str = 'abcdef';\n// 获取下标为3的字符\nvar res = str.charAt(3);\nconsole.log(res); // d\n```\n\n使用说明：如果下标存在就返回对应的字符，如果下标不存在就返回空字符串\n\n#### charCodeAt方法\n\n根据指定下标获取对应的字符的阿斯克码\n\n语法：\n\n```shell\n字符串.charCodeAt(下标);\n```\n\n例：\n\n```js\nvar str = 'abcdef';\n// 获取下标为3的字符的阿斯克码\nvar res = str.charCodeAt(0);\nconsole.log(res); // 97\n```\n\n#### String.fromCharCode方法\n\n根据指定的阿斯克码得到对应的字符\n\n语法：\n\n```shell\nString.fromCharCode(阿斯克码)\n```\n\n例：\n\n```js\n// 获取98对应的字符\nvar res = String.fromCharCode(98);\nconsole.log(res); // b\n```\n\n#### indexOf方法\n\n查找字符或子字符串在大字符串中第一次出现的位置\n\n语法：\n\n```shell\n大字符串.indexOf(字符/子字符串[,开始查找的下标])\n```\n\n例：\n\n```js\nvar str = 'i love you';\n// 找到o字符在str中第一次出现的位置\nvar res = str.indexOf('o');\nconsole.log(res); // 3\n```\n\n使用说明：\n\n1. 如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1\n2. 第二个参数可选项。表示从哪个下标开始查找\n\n#### lastIndexOf方法\n\n查找字符或子字符串在大字符串中最后一次出现的位置\n\n语法：\n\n```shell\n大字符串.lastIndexOf(字符/子字符串[,开始查找的下标])\n```\n\n例：\n\n```js\nvar str = 'i love you';\n// 找到o字符在str中最后一次出现的位置\nvar res = str.lastIndexOf('o');\nconsole.log(res); // 8\n```\n\n使用说明：\n\n1. 如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1\n2. 第二个参数可选项。表示从哪个下标开始查找\n\n#### substr方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.substr(开始下标[,截取长度])\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取2个字符\nvar res = str.substr(2,2);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略掉第二个参数，默认截取到字符串末尾。\n2. 开始下标可以使用负数表示，从右往左的下标依次是-1，-2，。。。\n3. 截取字符的时候都是从左向右截取的\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下表2开始截取\nvar res = str.substr(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标-5开始截取2个字符\nvar res = str.substr(-5,2);\nconsole.log(res); // 头发\n\n// 从下标-1开始截取2个字符\nvar res = str.substr(-1,2);\nconsole.log(res);// 吗\n```\n\n使用说明：截取到最后也不满足长度的时候，就返回能截取到的所有字符\n\n#### substring方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.substring(开始下标[，结束下标])\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取到下标4\nvar res = str.substr(2,4);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略掉第二个参数的话，默认截取到字符串末尾。\n2. 截取的结果包含开始下标对应的字符，不包含结束下标对应的字符\n3. 如果开始下标和结束下标相等，则返回空字符串；如果开始下标大于结束下标，则先交换两个参数，然后再截取；如果开始下标或结束下标为负数，则先将负数替换成0，然后再截取\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取\nvar res = str.substring(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标2截取到下标-2\nvar res = str.substring(2,-2);\nconsole.log(res); // 你的\n/*\n过程分析：\n首先开始下标大于结束下标，所以先交换两个参数，相当于： str.substring(-2,2);\n开始下标为负数，所以替换成0，相当于： str.substring(0,2);\n所以结果为：你的\n*/\n```\n\n#### slice方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.slice(开始下标[，结束下标]);\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2截取到下标4\nvar res = str.slice(2,4);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略第二个参数默认截取到字符串的末尾\n2. 返回的结果包含开始下标对应的字符，不包含结束下标对应的字符\n3. 截取的时候，下标可以使用负数表示\n4. 开始下标对应的字符一定要在结束下标对应的字符左边，否则返回空字符串。因为截取的顺序是从左向右的\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取\nvar res = str.slice(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标-5开始截取到下标4\nvar res = str.slice(-5,4);\nconsole.log(res); // 头发\n\n// 从下标-1截取到下标-3\nvar res = str.slice(-1,-3);\nconsole.log(res); // 空\n```\n\n#### split方法\n\n使用指定的分隔符将字符串分割成多部分组成数组\n\n语法：\n\n```shell\n字符串.split([分隔符，[最后数组中要保留的个数]])\n```\n\n例：\n\n```js\nvar str = 'open_door_now';\n// 以下划线为分隔符，分割字符串为数组\nvar arr = str.split(\"_\");\nconsole.log(arr); // [\"open\", \"door\", \"now\"]\n```\n\n使用说明：\n\n1. 分隔符是可选项。如果省略了分隔符，则将整个字符串当做数组的元素，如果是空字符串，则会在每个字符中间进行分割\n2. 要保留的个数是可选项。如果省略了个数，则返回全部的个数，如果加上个数，则是设置了数组中元素的个数。\n\n例：\n\n```js\nvar str = 'open_door_now';\n// 省略分隔符将字符串分割为数组\nvar arr = str.split();\nconsole.log(arr); // [\"open_door_now\"]\n\n// 以空字符串进行分割字符串\nvar arr = str.split(\"\");\nconsole.log(arr); // [\"o\", \"p\", \"e\", \"n\", \"_\", \"d\", \"o\", \"o\", \"r\", \"_\", \"n\", \"o\", \"w\"]\n\n// 以空字符串分割字符串，并在数组中保留4个元素\nvar arr = str.split(\"\",4);\nconsole.log(arr); // [\"o\", \"p\", \"e\", \"n\"]\n```\n\n#### replace方法\n\n使用新的字符或子字符串替换原来在字符串中的一部分\n\n语法：\n\n```shell\n字符串.replace(将要被替换的部分,要替换进来的新内容);\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 使用\"眉毛\"将\"头发\"替换掉\nvar res = str.replace(\"头发\",\"眉毛\");\nconsole.log(res); // 你的眉毛还好吗\n```\n\n使用说明：如果第一个参数是空字符串，则会将新内容拼接到原字符串前面\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 使用\"眉毛\"将\"\"替换掉\nvar res = str.replace(\"\",\"眉毛\");\nconsole.log(res); // 眉毛你的头发还好吗\n```\n\n#### trim方法\n\n去除字符串左右两边的空白\n\n语法：\n\n```shell\n字符串.trim();\n```\n\n例：\n\n```js\nvar str = '    ab c  ';\n// 取出str左右两边的空白\nvar res = str.trim();\nconsole.log(res); // 'ab c'\n```\n\n使用说明：\n\n1. 去除的是左右两边的空白，不会去除字符串中间的空白\n2. 只去除左边的空白使用：`trimLeft`方法；只去除右边的空白使用：`trimRight`方法\n\n#### 大小写转换方法\n\n将字符串中所有小写字母转为大写字母，使用：`toUpperCase`方法\n\n将字符串中所有小写字母转为大写字母，使用：`toLowerCase`方法\n\n语法：\n\n```shell\n字符串.toUpperCase(); # 转为大写\n字符串.toLowerCase(); # 转为小写\n```\n\n### 字符串案例\n\n对象数组模糊查找 ：\n\n```js\nvar data=[\n    {id:1001,icon:\"img/1.png\",name:\"计算机\",num:1,price:10},\n    {id:1002,icon:\"img/2.png\",name:\"手机\",num:1,price:20},\n    {id:1003,icon:\"img/3.png\",name:\"电脑\",num:1,price:30},\n    {id:1004,icon:\"img/4.png\",name:\"显示器\",num:1,price:40},\n    {id:1005,icon:\"img/5.png\",name:\"飞行器\",num:1,price:50},\n    {id:1006,icon:\"img/6.png\",name:\"计时器\",num:1,price:60},\n    {id:1007,icon:\"img/7.png\",name:\"笔记本\",num:1,price:70},\n    {id:1008,icon:\"img/8.png\",name:\"草稿本\",num:1,price:80},\n    {id:1009,icon:\"img/9.png\",name:\"公示牌\",num:1,price:90},\n    {id:1010,icon:\"img/10.png\",name:\"手机线\",num:1,price:100}\n];\nfunction searchStr(search) {\n    return data.filter(function (t) {\n        return t.name.indexOf(search)>-1;\n    });\n}\n```\n\n找到字符串中 '' 某个字出现过几次 第几位\n\n```js\nwhile(str.indexOf(s,i) != -1){\n    alert(str.indexOf(s,i))\n    i = str.indexOf(s,i)+s.length\n}\n```\n\n","source":"_posts/字符串.md","raw":"---\ntitle: ✨字符串介绍及其常见的pai用法\ntags: [javascript]\ncover: /img/pic/zifuchuan.jpg\ntop_img: /img/pic/bg5.jpg\ncategories: javascript\ncomments: true\ndate: 2021-9-22 16:00:00\nupdated: 2021-9-22 22:07:00\n---\n\n## 字符串\n\n计算机产生之初，内部只能识别二进制数字，无法识别英文字母和符号。为了能让计算机识别字母、数字和符号，科学家们制定了一个对照表，字母、数字、符号跟二进制数字相对应，这样当人们输入字母的时候，计算机使用对应的二进制数字处理，这样就相当于计算机能识别字母、符号和数字了。这个对照表叫做ASCII，翻译成中文叫阿斯克码。\n\n### 阿斯克码\n\n阿斯克码计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码）。所以对于英文字母和符号的支持是很全面的。\n\n阿斯克码的具体内容如下：\n\n### ASCII控制字符\n\n| 二进制    | 十进制 | 十六进制 | 缩写 | 可以显示的表示法 | 名称/意义                           |\n| --------- | ------ | -------- | ---- | ---------------- | ----------------------------------- |\n| 0000 0000 | 0      | 00       | NUL  | ␀                | 空字符（Null）                      |\n| 0000 0001 | 1      | 01       | SOH  | ␁                | 标题开始                            |\n| 0000 0010 | 2      | 02       | STX  | ␂                | 本文开始                            |\n| 0000 0011 | 3      | 03       | ETX  | ␃                | 本文结束                            |\n| 0000 0100 | 4      | 04       | EOT  | ␄                | 传输结束                            |\n| 0000 0101 | 5      | 05       | ENQ  | ␅                | 请求                                |\n| 0000 0110 | 6      | 06       | ACK  | ␆                | 确认回应                            |\n| 0000 0111 | 7      | 07       | BEL  | ␇                | 响铃                                |\n| 0000 1000 | 8      | 08       | BS   | ␈                | 退格                                |\n| 0000 1001 | 9      | 09       | HT   | ␉                | 水平定位符号                        |\n| 0000 1010 | 10     | 0A       | LF   | ␊                | 换行键                              |\n| 0000 1011 | 11     | 0B       | VT   | ␋                | 垂直定位符号                        |\n| 0000 1100 | 12     | 0C       | FF   | ␌                | 换页键                              |\n| 0000 1101 | 13     | 0D       | CR   | ␍                | 归位键                              |\n| 0000 1110 | 14     | 0E       | SO   | ␎                | 取消变换（Shift out）               |\n| 0000 1111 | 15     | 0F       | SI   | ␏                | 启用变换（Shift in）                |\n| 0001 0000 | 16     | 10       | DLE  | ␐                | 跳出数据通讯                        |\n| 0001 0001 | 17     | 11       | DC1  | ␑                | 设备控制一（XON 启用软件速度控制）  |\n| 0001 0010 | 18     | 12       | DC2  | ␒                | 设备控制二                          |\n| 0001 0011 | 19     | 13       | DC3  | ␓                | 设备控制三（XOFF 停用软件速度控制） |\n| 0001 0100 | 20     | 14       | DC4  | ␔                | 设备控制四                          |\n| 0001 0101 | 21     | 15       | NAK  | ␕                | 确认失败回应                        |\n| 0001 0110 | 22     | 16       | SYN  | ␖                | 同步用暂停                          |\n| 0001 0111 | 23     | 17       | ETB  | ␗                | 区块传输结束                        |\n| 0001 1000 | 24     | 18       | CAN  | ␘                | 取消                                |\n| 0001 1001 | 25     | 19       | EM   | ␙                | 连接介质中断                        |\n| 0001 1010 | 26     | 1A       | SUB  | ␚                | 替换                                |\n| 0001 1011 | 27     | 1B       | ESC  | ␛                | 跳出                                |\n| 0001 1100 | 28     | 1C       | FS   | ␜                | 文件分割符                          |\n| 0001 1101 | 29     | 1D       | GS   | ␝                | 组群分隔符                          |\n| 0001 1110 | 30     | 1E       | RS   | ␞                | 记录分隔符                          |\n| 0001 1111 | 31     | 1F       | US   | ␟                | 单元分隔符                          |\n| 0111 1111 | 127    | 7F       | DEL  | ␡                | 删除                                |\n\n### ASCII可显示字符\n\n| 二进制    | 十进制 | 十六进制 | 图形        |\n| --------- | ------ | -------- | ----------- |\n| 0010 0000 | 32     | 20       | （空格）(␠) |\n| 0010 0001 | 33     | 21       | !           |\n| 0010 0010 | 34     | 22       | \"           |\n| 0010 0011 | 35     | 23       | #           |\n| 0010 0100 | 36     | 24       | $           |\n| 0010 0101 | 37     | 25       | %           |\n| 0010 0110 | 38     | 26       | &           |\n| 0010 0111 | 39     | 27       | '           |\n| 0010 1000 | 40     | 28       | (           |\n| 0010 1001 | 41     | 29       | )           |\n| 0010 1010 | 42     | 2A       | *           |\n| 0010 1011 | 43     | 2B       | +           |\n| 0010 1100 | 44     | 2C       | ,           |\n| 0010 1101 | 45     | 2D       | -           |\n| 0010 1110 | 46     | 2E       | .           |\n| 0010 1111 | 47     | 2F       | /           |\n| 0011 0000 | 48     | 30       | 0           |\n| 0011 0001 | 49     | 31       | 1           |\n| 0011 0010 | 50     | 32       | 2           |\n| 0011 0011 | 51     | 33       | 3           |\n| 0011 0100 | 52     | 34       | 4           |\n| 0011 0101 | 53     | 35       | 5           |\n| 0011 0110 | 54     | 36       | 6           |\n| 0011 0111 | 55     | 37       | 7           |\n| 0011 1000 | 56     | 38       | 8           |\n| 0011 1001 | 57     | 39       | 9           |\n| 0011 1010 | 58     | 3A       | :           |\n| 0011 1011 | 59     | 3B       | ;           |\n| 0011 1100 | 60     | 3C       | <           |\n| 0011 1101 | 61     | 3D       | =           |\n| 0011 1110 | 62     | 3E       | >           |\n| 0011 1111 | 63     | 3F       | ?           |\n\n| 二进制    | 十进制 | 十六进制 | 图形 |\n| --------- | ------ | -------- | ---- |\n| 0100 0000 | 64     | 40       | @    |\n| 0100 0001 | 65     | 41       | A    |\n| 0100 0010 | 66     | 42       | B    |\n| 0100 0011 | 67     | 43       | C    |\n| 0100 0100 | 68     | 44       | D    |\n| 0100 0101 | 69     | 45       | E    |\n| 0100 0110 | 70     | 46       | F    |\n| 0100 0111 | 71     | 47       | G    |\n| 0100 1000 | 72     | 48       | H    |\n| 0100 1001 | 73     | 49       | I    |\n| 0100 1010 | 74     | 4A       | J    |\n| 0100 1011 | 75     | 4B       | K    |\n| 0100 1100 | 76     | 4C       | L    |\n| 0100 1101 | 77     | 4D       | M    |\n| 0100 1110 | 78     | 4E       | N    |\n| 0100 1111 | 79     | 4F       | O    |\n| 0101 0000 | 80     | 50       | P    |\n| 0101 0001 | 81     | 51       | Q    |\n| 0101 0010 | 82     | 52       | R    |\n| 0101 0011 | 83     | 53       | S    |\n| 0101 0100 | 84     | 54       | T    |\n| 0101 0101 | 85     | 55       | U    |\n| 0101 0110 | 86     | 56       | V    |\n| 0101 0111 | 87     | 57       | W    |\n| 0101 1000 | 88     | 58       | X    |\n| 0101 1001 | 89     | 59       | Y    |\n| 0101 1010 | 90     | 5A       | Z    |\n| 0101 1011 | 91     | 5B       | [    |\n| 0101 1100 | 92     | 5C       | \\    |\n| 0101 1101 | 93     | 5D       | ]    |\n| 0101 1110 | 94     | 5E       | ^    |\n| 0101 1111 | 95     | 5F       | _    |\n\n| 二进制    | 十进制 | 十六进制 | 图形 |\n| --------- | ------ | -------- | ---- |\n| 0110 0000 | 96     | 60       | `    |\n| 0110 0001 | 97     | 61       | a    |\n| 0110 0010 | 98     | 62       | b    |\n| 0110 0011 | 99     | 63       | c    |\n| 0110 0100 | 100    | 64       | d    |\n| 0110 0101 | 101    | 65       | e    |\n| 0110 0110 | 102    | 66       | f    |\n| 0110 0111 | 103    | 67       | g    |\n| 0110 1000 | 104    | 68       | h    |\n| 0110 1001 | 105    | 69       | i    |\n| 0110 1010 | 106    | 6A       | j    |\n| 0110 1011 | 107    | 6B       | k    |\n| 0110 1100 | 108    | 6C       | l    |\n| 0110 1101 | 109    | 6D       | m    |\n| 0110 1110 | 110    | 6E       | n    |\n| 0110 1111 | 111    | 6F       | o    |\n| 0111 0000 | 112    | 70       | p    |\n| 0111 0001 | 113    | 71       | q    |\n| 0111 0010 | 114    | 72       | r    |\n| 0111 0011 | 115    | 73       | s    |\n| 0111 0100 | 116    | 74       | t    |\n| 0111 0101 | 117    | 75       | u    |\n| 0111 0110 | 118    | 76       | v    |\n| 0111 0111 | 119    | 77       | w    |\n| 0111 1000 | 120    | 78       | x    |\n| 0111 1001 | 121    | 79       | y    |\n| 0111 1010 | 122    | 7A       | z    |\n| 0111 1011 | 123    | 7B       | {    |\n| 0111 1100 | 124    | 7C       | \\|   |\n| 0111 1101 | 125    | 7D       | }    |\n| 0111 1110 | 126    | 7E       | ~    |\n\n为什么要学习阿斯克码？\n\n因为两个字符串也是可以比较大小的，比较的规则是逐字符进行比较，字符的大小由字符对应的阿斯克码决定。\n\n### 字符串的比较\n\n我们曾经碰到过一个问题，接收到文本框的两个值，一个是\"3\"，另一个是\"10\"，这两个值进行大小比较的时候，结果是：`\"3\">\"10\" === true`，出现这个结果的原因是，两个字符串进行比较的时候，是逐字符进行比较，也就是字符\"3\"先和字符\"1\"进行比较，如果第一个字符相等再进行第二个字符的比较。\n\n从阿斯克码表中，可以找到字符\"3\"和字符\"1\"相对应的值，很明显，字符\"3\"是要大于字符\"1\"的。\n\n通过阿斯克码表，我们可以得出一些字符串比较的规律：\n\n1. 字母比数字大\n2. 小写字母比大写字母大\n3. 字母越靠后越大\n\n\n\n<font color=\"blue\">思考：如何比较两个中文汉字字符的大小？</font>\n\n阿斯克码总共128个，包含符号、大小写英文字母、数字。阿斯克码是由美国人创建的，所以对于英文的支持非常好。后来随着计算机的普及，各个国家在使用计算机的时候，没办法使用本国文字，这样用起来非常困难。所以众多国家的科学家一起制定了一个更大的对照表，包含各个国家的文字符号，所以称之为万国码，也叫作unicode。\n\n其实unicode就是更大的阿斯克码。\n\n### 字符串的基本操作\n\n<font color=\"red\">字符串也可以通过下标获取字符</font>\n\n例：\n\n```js\nvar str = '你好吗';\n// 输出下标为1的字符\nconsole.log(str[1]); // 好\n```\n\n每个字符都有对应的下标，所以，字符串也可以进行遍历。\n\n<font color=\"red\">字符串是只读数据类型，不能添加新字符，不能修改字符串中的字符，不能删除某个字符</font>\n\n例：\n\n```js\nvar str = '你好吗';\n// 修改下标为1的字符\nstr[1] = \"帅\"\nconsole.log(str); // 你好吗\n```\n\n### 字符串常见API\n\n#### length属性\n\n求字符串中字符的个数 - 字符串的长度\n\n语法：\n\n```shell\n字符串.length\n```\n\n例：\n\n```js\nvar str = 'asdfvczx';\n// 输出字符串的长度\nconsole.log(str.length);\n```\n\n#### charAt方法\n\n根据指定的下标获取对应的字符\n\n语法：\n\n```shell\n字符串.charAt(下标)\n```\n\n例：\n\n```js\nvar str = 'abcdef';\n// 获取下标为3的字符\nvar res = str.charAt(3);\nconsole.log(res); // d\n```\n\n使用说明：如果下标存在就返回对应的字符，如果下标不存在就返回空字符串\n\n#### charCodeAt方法\n\n根据指定下标获取对应的字符的阿斯克码\n\n语法：\n\n```shell\n字符串.charCodeAt(下标);\n```\n\n例：\n\n```js\nvar str = 'abcdef';\n// 获取下标为3的字符的阿斯克码\nvar res = str.charCodeAt(0);\nconsole.log(res); // 97\n```\n\n#### String.fromCharCode方法\n\n根据指定的阿斯克码得到对应的字符\n\n语法：\n\n```shell\nString.fromCharCode(阿斯克码)\n```\n\n例：\n\n```js\n// 获取98对应的字符\nvar res = String.fromCharCode(98);\nconsole.log(res); // b\n```\n\n#### indexOf方法\n\n查找字符或子字符串在大字符串中第一次出现的位置\n\n语法：\n\n```shell\n大字符串.indexOf(字符/子字符串[,开始查找的下标])\n```\n\n例：\n\n```js\nvar str = 'i love you';\n// 找到o字符在str中第一次出现的位置\nvar res = str.indexOf('o');\nconsole.log(res); // 3\n```\n\n使用说明：\n\n1. 如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1\n2. 第二个参数可选项。表示从哪个下标开始查找\n\n#### lastIndexOf方法\n\n查找字符或子字符串在大字符串中最后一次出现的位置\n\n语法：\n\n```shell\n大字符串.lastIndexOf(字符/子字符串[,开始查找的下标])\n```\n\n例：\n\n```js\nvar str = 'i love you';\n// 找到o字符在str中最后一次出现的位置\nvar res = str.lastIndexOf('o');\nconsole.log(res); // 8\n```\n\n使用说明：\n\n1. 如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1\n2. 第二个参数可选项。表示从哪个下标开始查找\n\n#### substr方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.substr(开始下标[,截取长度])\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取2个字符\nvar res = str.substr(2,2);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略掉第二个参数，默认截取到字符串末尾。\n2. 开始下标可以使用负数表示，从右往左的下标依次是-1，-2，。。。\n3. 截取字符的时候都是从左向右截取的\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下表2开始截取\nvar res = str.substr(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标-5开始截取2个字符\nvar res = str.substr(-5,2);\nconsole.log(res); // 头发\n\n// 从下标-1开始截取2个字符\nvar res = str.substr(-1,2);\nconsole.log(res);// 吗\n```\n\n使用说明：截取到最后也不满足长度的时候，就返回能截取到的所有字符\n\n#### substring方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.substring(开始下标[，结束下标])\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取到下标4\nvar res = str.substr(2,4);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略掉第二个参数的话，默认截取到字符串末尾。\n2. 截取的结果包含开始下标对应的字符，不包含结束下标对应的字符\n3. 如果开始下标和结束下标相等，则返回空字符串；如果开始下标大于结束下标，则先交换两个参数，然后再截取；如果开始下标或结束下标为负数，则先将负数替换成0，然后再截取\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取\nvar res = str.substring(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标2截取到下标-2\nvar res = str.substring(2,-2);\nconsole.log(res); // 你的\n/*\n过程分析：\n首先开始下标大于结束下标，所以先交换两个参数，相当于： str.substring(-2,2);\n开始下标为负数，所以替换成0，相当于： str.substring(0,2);\n所以结果为：你的\n*/\n```\n\n#### slice方法\n\n截取字符串\n\n语法：\n\n```shell\n字符串.slice(开始下标[，结束下标]);\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2截取到下标4\nvar res = str.slice(2,4);\nconsole.log(res); // 头发\n```\n\n使用说明：\n\n1. 第二个参数是可选项。如果省略第二个参数默认截取到字符串的末尾\n2. 返回的结果包含开始下标对应的字符，不包含结束下标对应的字符\n3. 截取的时候，下标可以使用负数表示\n4. 开始下标对应的字符一定要在结束下标对应的字符左边，否则返回空字符串。因为截取的顺序是从左向右的\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 从下标2开始截取\nvar res = str.slice(2);\nconsole.log(res); // 头发还好吗\n\n// 从下标-5开始截取到下标4\nvar res = str.slice(-5,4);\nconsole.log(res); // 头发\n\n// 从下标-1截取到下标-3\nvar res = str.slice(-1,-3);\nconsole.log(res); // 空\n```\n\n#### split方法\n\n使用指定的分隔符将字符串分割成多部分组成数组\n\n语法：\n\n```shell\n字符串.split([分隔符，[最后数组中要保留的个数]])\n```\n\n例：\n\n```js\nvar str = 'open_door_now';\n// 以下划线为分隔符，分割字符串为数组\nvar arr = str.split(\"_\");\nconsole.log(arr); // [\"open\", \"door\", \"now\"]\n```\n\n使用说明：\n\n1. 分隔符是可选项。如果省略了分隔符，则将整个字符串当做数组的元素，如果是空字符串，则会在每个字符中间进行分割\n2. 要保留的个数是可选项。如果省略了个数，则返回全部的个数，如果加上个数，则是设置了数组中元素的个数。\n\n例：\n\n```js\nvar str = 'open_door_now';\n// 省略分隔符将字符串分割为数组\nvar arr = str.split();\nconsole.log(arr); // [\"open_door_now\"]\n\n// 以空字符串进行分割字符串\nvar arr = str.split(\"\");\nconsole.log(arr); // [\"o\", \"p\", \"e\", \"n\", \"_\", \"d\", \"o\", \"o\", \"r\", \"_\", \"n\", \"o\", \"w\"]\n\n// 以空字符串分割字符串，并在数组中保留4个元素\nvar arr = str.split(\"\",4);\nconsole.log(arr); // [\"o\", \"p\", \"e\", \"n\"]\n```\n\n#### replace方法\n\n使用新的字符或子字符串替换原来在字符串中的一部分\n\n语法：\n\n```shell\n字符串.replace(将要被替换的部分,要替换进来的新内容);\n```\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 使用\"眉毛\"将\"头发\"替换掉\nvar res = str.replace(\"头发\",\"眉毛\");\nconsole.log(res); // 你的眉毛还好吗\n```\n\n使用说明：如果第一个参数是空字符串，则会将新内容拼接到原字符串前面\n\n例：\n\n```js\nvar str = '你的头发还好吗';\n// 使用\"眉毛\"将\"\"替换掉\nvar res = str.replace(\"\",\"眉毛\");\nconsole.log(res); // 眉毛你的头发还好吗\n```\n\n#### trim方法\n\n去除字符串左右两边的空白\n\n语法：\n\n```shell\n字符串.trim();\n```\n\n例：\n\n```js\nvar str = '    ab c  ';\n// 取出str左右两边的空白\nvar res = str.trim();\nconsole.log(res); // 'ab c'\n```\n\n使用说明：\n\n1. 去除的是左右两边的空白，不会去除字符串中间的空白\n2. 只去除左边的空白使用：`trimLeft`方法；只去除右边的空白使用：`trimRight`方法\n\n#### 大小写转换方法\n\n将字符串中所有小写字母转为大写字母，使用：`toUpperCase`方法\n\n将字符串中所有小写字母转为大写字母，使用：`toLowerCase`方法\n\n语法：\n\n```shell\n字符串.toUpperCase(); # 转为大写\n字符串.toLowerCase(); # 转为小写\n```\n\n### 字符串案例\n\n对象数组模糊查找 ：\n\n```js\nvar data=[\n    {id:1001,icon:\"img/1.png\",name:\"计算机\",num:1,price:10},\n    {id:1002,icon:\"img/2.png\",name:\"手机\",num:1,price:20},\n    {id:1003,icon:\"img/3.png\",name:\"电脑\",num:1,price:30},\n    {id:1004,icon:\"img/4.png\",name:\"显示器\",num:1,price:40},\n    {id:1005,icon:\"img/5.png\",name:\"飞行器\",num:1,price:50},\n    {id:1006,icon:\"img/6.png\",name:\"计时器\",num:1,price:60},\n    {id:1007,icon:\"img/7.png\",name:\"笔记本\",num:1,price:70},\n    {id:1008,icon:\"img/8.png\",name:\"草稿本\",num:1,price:80},\n    {id:1009,icon:\"img/9.png\",name:\"公示牌\",num:1,price:90},\n    {id:1010,icon:\"img/10.png\",name:\"手机线\",num:1,price:100}\n];\nfunction searchStr(search) {\n    return data.filter(function (t) {\n        return t.name.indexOf(search)>-1;\n    });\n}\n```\n\n找到字符串中 '' 某个字出现过几次 第几位\n\n```js\nwhile(str.indexOf(s,i) != -1){\n    alert(str.indexOf(s,i))\n    i = str.indexOf(s,i)+s.length\n}\n```\n\n","slug":"字符串","published":1,"layout":"post","photos":[],"link":"","_id":"ckuayruuz000e6gfc06vgelwi","content":"<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><p>计算机产生之初，内部只能识别二进制数字，无法识别英文字母和符号。为了能让计算机识别字母、数字和符号，科学家们制定了一个对照表，字母、数字、符号跟二进制数字相对应，这样当人们输入字母的时候，计算机使用对应的二进制数字处理，这样就相当于计算机能识别字母、符号和数字了。这个对照表叫做ASCII，翻译成中文叫阿斯克码。</p>\n<h3 id=\"阿斯克码\"><a href=\"#阿斯克码\" class=\"headerlink\" title=\"阿斯克码\"></a>阿斯克码</h3><p>阿斯克码计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码）。所以对于英文字母和符号的支持是很全面的。</p>\n<p>阿斯克码的具体内容如下：</p>\n<h3 id=\"ASCII控制字符\"><a href=\"#ASCII控制字符\" class=\"headerlink\" title=\"ASCII控制字符\"></a>ASCII控制字符</h3><table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>缩写</th>\n<th>可以显示的表示法</th>\n<th>名称/意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0000 0000</td>\n<td>0</td>\n<td>00</td>\n<td>NUL</td>\n<td>␀</td>\n<td>空字符（Null）</td>\n</tr>\n<tr>\n<td>0000 0001</td>\n<td>1</td>\n<td>01</td>\n<td>SOH</td>\n<td>␁</td>\n<td>标题开始</td>\n</tr>\n<tr>\n<td>0000 0010</td>\n<td>2</td>\n<td>02</td>\n<td>STX</td>\n<td>␂</td>\n<td>本文开始</td>\n</tr>\n<tr>\n<td>0000 0011</td>\n<td>3</td>\n<td>03</td>\n<td>ETX</td>\n<td>␃</td>\n<td>本文结束</td>\n</tr>\n<tr>\n<td>0000 0100</td>\n<td>4</td>\n<td>04</td>\n<td>EOT</td>\n<td>␄</td>\n<td>传输结束</td>\n</tr>\n<tr>\n<td>0000 0101</td>\n<td>5</td>\n<td>05</td>\n<td>ENQ</td>\n<td>␅</td>\n<td>请求</td>\n</tr>\n<tr>\n<td>0000 0110</td>\n<td>6</td>\n<td>06</td>\n<td>ACK</td>\n<td>␆</td>\n<td>确认回应</td>\n</tr>\n<tr>\n<td>0000 0111</td>\n<td>7</td>\n<td>07</td>\n<td>BEL</td>\n<td>␇</td>\n<td>响铃</td>\n</tr>\n<tr>\n<td>0000 1000</td>\n<td>8</td>\n<td>08</td>\n<td>BS</td>\n<td>␈</td>\n<td>退格</td>\n</tr>\n<tr>\n<td>0000 1001</td>\n<td>9</td>\n<td>09</td>\n<td>HT</td>\n<td>␉</td>\n<td>水平定位符号</td>\n</tr>\n<tr>\n<td>0000 1010</td>\n<td>10</td>\n<td>0A</td>\n<td>LF</td>\n<td>␊</td>\n<td>换行键</td>\n</tr>\n<tr>\n<td>0000 1011</td>\n<td>11</td>\n<td>0B</td>\n<td>VT</td>\n<td>␋</td>\n<td>垂直定位符号</td>\n</tr>\n<tr>\n<td>0000 1100</td>\n<td>12</td>\n<td>0C</td>\n<td>FF</td>\n<td>␌</td>\n<td>换页键</td>\n</tr>\n<tr>\n<td>0000 1101</td>\n<td>13</td>\n<td>0D</td>\n<td>CR</td>\n<td>␍</td>\n<td>归位键</td>\n</tr>\n<tr>\n<td>0000 1110</td>\n<td>14</td>\n<td>0E</td>\n<td>SO</td>\n<td>␎</td>\n<td>取消变换（Shift out）</td>\n</tr>\n<tr>\n<td>0000 1111</td>\n<td>15</td>\n<td>0F</td>\n<td>SI</td>\n<td>␏</td>\n<td>启用变换（Shift in）</td>\n</tr>\n<tr>\n<td>0001 0000</td>\n<td>16</td>\n<td>10</td>\n<td>DLE</td>\n<td>␐</td>\n<td>跳出数据通讯</td>\n</tr>\n<tr>\n<td>0001 0001</td>\n<td>17</td>\n<td>11</td>\n<td>DC1</td>\n<td>␑</td>\n<td>设备控制一（XON 启用软件速度控制）</td>\n</tr>\n<tr>\n<td>0001 0010</td>\n<td>18</td>\n<td>12</td>\n<td>DC2</td>\n<td>␒</td>\n<td>设备控制二</td>\n</tr>\n<tr>\n<td>0001 0011</td>\n<td>19</td>\n<td>13</td>\n<td>DC3</td>\n<td>␓</td>\n<td>设备控制三（XOFF 停用软件速度控制）</td>\n</tr>\n<tr>\n<td>0001 0100</td>\n<td>20</td>\n<td>14</td>\n<td>DC4</td>\n<td>␔</td>\n<td>设备控制四</td>\n</tr>\n<tr>\n<td>0001 0101</td>\n<td>21</td>\n<td>15</td>\n<td>NAK</td>\n<td>␕</td>\n<td>确认失败回应</td>\n</tr>\n<tr>\n<td>0001 0110</td>\n<td>22</td>\n<td>16</td>\n<td>SYN</td>\n<td>␖</td>\n<td>同步用暂停</td>\n</tr>\n<tr>\n<td>0001 0111</td>\n<td>23</td>\n<td>17</td>\n<td>ETB</td>\n<td>␗</td>\n<td>区块传输结束</td>\n</tr>\n<tr>\n<td>0001 1000</td>\n<td>24</td>\n<td>18</td>\n<td>CAN</td>\n<td>␘</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>0001 1001</td>\n<td>25</td>\n<td>19</td>\n<td>EM</td>\n<td>␙</td>\n<td>连接介质中断</td>\n</tr>\n<tr>\n<td>0001 1010</td>\n<td>26</td>\n<td>1A</td>\n<td>SUB</td>\n<td>␚</td>\n<td>替换</td>\n</tr>\n<tr>\n<td>0001 1011</td>\n<td>27</td>\n<td>1B</td>\n<td>ESC</td>\n<td>␛</td>\n<td>跳出</td>\n</tr>\n<tr>\n<td>0001 1100</td>\n<td>28</td>\n<td>1C</td>\n<td>FS</td>\n<td>␜</td>\n<td>文件分割符</td>\n</tr>\n<tr>\n<td>0001 1101</td>\n<td>29</td>\n<td>1D</td>\n<td>GS</td>\n<td>␝</td>\n<td>组群分隔符</td>\n</tr>\n<tr>\n<td>0001 1110</td>\n<td>30</td>\n<td>1E</td>\n<td>RS</td>\n<td>␞</td>\n<td>记录分隔符</td>\n</tr>\n<tr>\n<td>0001 1111</td>\n<td>31</td>\n<td>1F</td>\n<td>US</td>\n<td>␟</td>\n<td>单元分隔符</td>\n</tr>\n<tr>\n<td>0111 1111</td>\n<td>127</td>\n<td>7F</td>\n<td>DEL</td>\n<td>␡</td>\n<td>删除</td>\n</tr>\n</tbody></table>\n<h3 id=\"ASCII可显示字符\"><a href=\"#ASCII可显示字符\" class=\"headerlink\" title=\"ASCII可显示字符\"></a>ASCII可显示字符</h3><table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0010 0000</td>\n<td>32</td>\n<td>20</td>\n<td>（空格）(␠)</td>\n</tr>\n<tr>\n<td>0010 0001</td>\n<td>33</td>\n<td>21</td>\n<td>!</td>\n</tr>\n<tr>\n<td>0010 0010</td>\n<td>34</td>\n<td>22</td>\n<td>“</td>\n</tr>\n<tr>\n<td>0010 0011</td>\n<td>35</td>\n<td>23</td>\n<td>#</td>\n</tr>\n<tr>\n<td>0010 0100</td>\n<td>36</td>\n<td>24</td>\n<td>$</td>\n</tr>\n<tr>\n<td>0010 0101</td>\n<td>37</td>\n<td>25</td>\n<td>%</td>\n</tr>\n<tr>\n<td>0010 0110</td>\n<td>38</td>\n<td>26</td>\n<td>&amp;</td>\n</tr>\n<tr>\n<td>0010 0111</td>\n<td>39</td>\n<td>27</td>\n<td>‘</td>\n</tr>\n<tr>\n<td>0010 1000</td>\n<td>40</td>\n<td>28</td>\n<td>(</td>\n</tr>\n<tr>\n<td>0010 1001</td>\n<td>41</td>\n<td>29</td>\n<td>)</td>\n</tr>\n<tr>\n<td>0010 1010</td>\n<td>42</td>\n<td>2A</td>\n<td>*</td>\n</tr>\n<tr>\n<td>0010 1011</td>\n<td>43</td>\n<td>2B</td>\n<td>+</td>\n</tr>\n<tr>\n<td>0010 1100</td>\n<td>44</td>\n<td>2C</td>\n<td>,</td>\n</tr>\n<tr>\n<td>0010 1101</td>\n<td>45</td>\n<td>2D</td>\n<td>-</td>\n</tr>\n<tr>\n<td>0010 1110</td>\n<td>46</td>\n<td>2E</td>\n<td>.</td>\n</tr>\n<tr>\n<td>0010 1111</td>\n<td>47</td>\n<td>2F</td>\n<td>/</td>\n</tr>\n<tr>\n<td>0011 0000</td>\n<td>48</td>\n<td>30</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0011 0001</td>\n<td>49</td>\n<td>31</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0011 0010</td>\n<td>50</td>\n<td>32</td>\n<td>2</td>\n</tr>\n<tr>\n<td>0011 0011</td>\n<td>51</td>\n<td>33</td>\n<td>3</td>\n</tr>\n<tr>\n<td>0011 0100</td>\n<td>52</td>\n<td>34</td>\n<td>4</td>\n</tr>\n<tr>\n<td>0011 0101</td>\n<td>53</td>\n<td>35</td>\n<td>5</td>\n</tr>\n<tr>\n<td>0011 0110</td>\n<td>54</td>\n<td>36</td>\n<td>6</td>\n</tr>\n<tr>\n<td>0011 0111</td>\n<td>55</td>\n<td>37</td>\n<td>7</td>\n</tr>\n<tr>\n<td>0011 1000</td>\n<td>56</td>\n<td>38</td>\n<td>8</td>\n</tr>\n<tr>\n<td>0011 1001</td>\n<td>57</td>\n<td>39</td>\n<td>9</td>\n</tr>\n<tr>\n<td>0011 1010</td>\n<td>58</td>\n<td>3A</td>\n<td>:</td>\n</tr>\n<tr>\n<td>0011 1011</td>\n<td>59</td>\n<td>3B</td>\n<td>;</td>\n</tr>\n<tr>\n<td>0011 1100</td>\n<td>60</td>\n<td>3C</td>\n<td>&lt;</td>\n</tr>\n<tr>\n<td>0011 1101</td>\n<td>61</td>\n<td>3D</td>\n<td>=</td>\n</tr>\n<tr>\n<td>0011 1110</td>\n<td>62</td>\n<td>3E</td>\n<td>&gt;</td>\n</tr>\n<tr>\n<td>0011 1111</td>\n<td>63</td>\n<td>3F</td>\n<td>?</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0100 0000</td>\n<td>64</td>\n<td>40</td>\n<td>@</td>\n</tr>\n<tr>\n<td>0100 0001</td>\n<td>65</td>\n<td>41</td>\n<td>A</td>\n</tr>\n<tr>\n<td>0100 0010</td>\n<td>66</td>\n<td>42</td>\n<td>B</td>\n</tr>\n<tr>\n<td>0100 0011</td>\n<td>67</td>\n<td>43</td>\n<td>C</td>\n</tr>\n<tr>\n<td>0100 0100</td>\n<td>68</td>\n<td>44</td>\n<td>D</td>\n</tr>\n<tr>\n<td>0100 0101</td>\n<td>69</td>\n<td>45</td>\n<td>E</td>\n</tr>\n<tr>\n<td>0100 0110</td>\n<td>70</td>\n<td>46</td>\n<td>F</td>\n</tr>\n<tr>\n<td>0100 0111</td>\n<td>71</td>\n<td>47</td>\n<td>G</td>\n</tr>\n<tr>\n<td>0100 1000</td>\n<td>72</td>\n<td>48</td>\n<td>H</td>\n</tr>\n<tr>\n<td>0100 1001</td>\n<td>73</td>\n<td>49</td>\n<td>I</td>\n</tr>\n<tr>\n<td>0100 1010</td>\n<td>74</td>\n<td>4A</td>\n<td>J</td>\n</tr>\n<tr>\n<td>0100 1011</td>\n<td>75</td>\n<td>4B</td>\n<td>K</td>\n</tr>\n<tr>\n<td>0100 1100</td>\n<td>76</td>\n<td>4C</td>\n<td>L</td>\n</tr>\n<tr>\n<td>0100 1101</td>\n<td>77</td>\n<td>4D</td>\n<td>M</td>\n</tr>\n<tr>\n<td>0100 1110</td>\n<td>78</td>\n<td>4E</td>\n<td>N</td>\n</tr>\n<tr>\n<td>0100 1111</td>\n<td>79</td>\n<td>4F</td>\n<td>O</td>\n</tr>\n<tr>\n<td>0101 0000</td>\n<td>80</td>\n<td>50</td>\n<td>P</td>\n</tr>\n<tr>\n<td>0101 0001</td>\n<td>81</td>\n<td>51</td>\n<td>Q</td>\n</tr>\n<tr>\n<td>0101 0010</td>\n<td>82</td>\n<td>52</td>\n<td>R</td>\n</tr>\n<tr>\n<td>0101 0011</td>\n<td>83</td>\n<td>53</td>\n<td>S</td>\n</tr>\n<tr>\n<td>0101 0100</td>\n<td>84</td>\n<td>54</td>\n<td>T</td>\n</tr>\n<tr>\n<td>0101 0101</td>\n<td>85</td>\n<td>55</td>\n<td>U</td>\n</tr>\n<tr>\n<td>0101 0110</td>\n<td>86</td>\n<td>56</td>\n<td>V</td>\n</tr>\n<tr>\n<td>0101 0111</td>\n<td>87</td>\n<td>57</td>\n<td>W</td>\n</tr>\n<tr>\n<td>0101 1000</td>\n<td>88</td>\n<td>58</td>\n<td>X</td>\n</tr>\n<tr>\n<td>0101 1001</td>\n<td>89</td>\n<td>59</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>0101 1010</td>\n<td>90</td>\n<td>5A</td>\n<td>Z</td>\n</tr>\n<tr>\n<td>0101 1011</td>\n<td>91</td>\n<td>5B</td>\n<td>[</td>\n</tr>\n<tr>\n<td>0101 1100</td>\n<td>92</td>\n<td>5C</td>\n<td>\\</td>\n</tr>\n<tr>\n<td>0101 1101</td>\n<td>93</td>\n<td>5D</td>\n<td>]</td>\n</tr>\n<tr>\n<td>0101 1110</td>\n<td>94</td>\n<td>5E</td>\n<td>^</td>\n</tr>\n<tr>\n<td>0101 1111</td>\n<td>95</td>\n<td>5F</td>\n<td>_</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0110 0000</td>\n<td>96</td>\n<td>60</td>\n<td>`</td>\n</tr>\n<tr>\n<td>0110 0001</td>\n<td>97</td>\n<td>61</td>\n<td>a</td>\n</tr>\n<tr>\n<td>0110 0010</td>\n<td>98</td>\n<td>62</td>\n<td>b</td>\n</tr>\n<tr>\n<td>0110 0011</td>\n<td>99</td>\n<td>63</td>\n<td>c</td>\n</tr>\n<tr>\n<td>0110 0100</td>\n<td>100</td>\n<td>64</td>\n<td>d</td>\n</tr>\n<tr>\n<td>0110 0101</td>\n<td>101</td>\n<td>65</td>\n<td>e</td>\n</tr>\n<tr>\n<td>0110 0110</td>\n<td>102</td>\n<td>66</td>\n<td>f</td>\n</tr>\n<tr>\n<td>0110 0111</td>\n<td>103</td>\n<td>67</td>\n<td>g</td>\n</tr>\n<tr>\n<td>0110 1000</td>\n<td>104</td>\n<td>68</td>\n<td>h</td>\n</tr>\n<tr>\n<td>0110 1001</td>\n<td>105</td>\n<td>69</td>\n<td>i</td>\n</tr>\n<tr>\n<td>0110 1010</td>\n<td>106</td>\n<td>6A</td>\n<td>j</td>\n</tr>\n<tr>\n<td>0110 1011</td>\n<td>107</td>\n<td>6B</td>\n<td>k</td>\n</tr>\n<tr>\n<td>0110 1100</td>\n<td>108</td>\n<td>6C</td>\n<td>l</td>\n</tr>\n<tr>\n<td>0110 1101</td>\n<td>109</td>\n<td>6D</td>\n<td>m</td>\n</tr>\n<tr>\n<td>0110 1110</td>\n<td>110</td>\n<td>6E</td>\n<td>n</td>\n</tr>\n<tr>\n<td>0110 1111</td>\n<td>111</td>\n<td>6F</td>\n<td>o</td>\n</tr>\n<tr>\n<td>0111 0000</td>\n<td>112</td>\n<td>70</td>\n<td>p</td>\n</tr>\n<tr>\n<td>0111 0001</td>\n<td>113</td>\n<td>71</td>\n<td>q</td>\n</tr>\n<tr>\n<td>0111 0010</td>\n<td>114</td>\n<td>72</td>\n<td>r</td>\n</tr>\n<tr>\n<td>0111 0011</td>\n<td>115</td>\n<td>73</td>\n<td>s</td>\n</tr>\n<tr>\n<td>0111 0100</td>\n<td>116</td>\n<td>74</td>\n<td>t</td>\n</tr>\n<tr>\n<td>0111 0101</td>\n<td>117</td>\n<td>75</td>\n<td>u</td>\n</tr>\n<tr>\n<td>0111 0110</td>\n<td>118</td>\n<td>76</td>\n<td>v</td>\n</tr>\n<tr>\n<td>0111 0111</td>\n<td>119</td>\n<td>77</td>\n<td>w</td>\n</tr>\n<tr>\n<td>0111 1000</td>\n<td>120</td>\n<td>78</td>\n<td>x</td>\n</tr>\n<tr>\n<td>0111 1001</td>\n<td>121</td>\n<td>79</td>\n<td>y</td>\n</tr>\n<tr>\n<td>0111 1010</td>\n<td>122</td>\n<td>7A</td>\n<td>z</td>\n</tr>\n<tr>\n<td>0111 1011</td>\n<td>123</td>\n<td>7B</td>\n<td>{</td>\n</tr>\n<tr>\n<td>0111 1100</td>\n<td>124</td>\n<td>7C</td>\n<td>|</td>\n</tr>\n<tr>\n<td>0111 1101</td>\n<td>125</td>\n<td>7D</td>\n<td>}</td>\n</tr>\n<tr>\n<td>0111 1110</td>\n<td>126</td>\n<td>7E</td>\n<td>~</td>\n</tr>\n</tbody></table>\n<p>为什么要学习阿斯克码？</p>\n<p>因为两个字符串也是可以比较大小的，比较的规则是逐字符进行比较，字符的大小由字符对应的阿斯克码决定。</p>\n<h3 id=\"字符串的比较\"><a href=\"#字符串的比较\" class=\"headerlink\" title=\"字符串的比较\"></a>字符串的比较</h3><p>我们曾经碰到过一个问题，接收到文本框的两个值，一个是”3”，另一个是”10”，这两个值进行大小比较的时候，结果是：<code>&quot;3&quot;&gt;&quot;10&quot; === true</code>，出现这个结果的原因是，两个字符串进行比较的时候，是逐字符进行比较，也就是字符”3”先和字符”1”进行比较，如果第一个字符相等再进行第二个字符的比较。</p>\n<p>从阿斯克码表中，可以找到字符”3”和字符”1”相对应的值，很明显，字符”3”是要大于字符”1”的。</p>\n<p>通过阿斯克码表，我们可以得出一些字符串比较的规律：</p>\n<ol>\n<li>字母比数字大</li>\n<li>小写字母比大写字母大</li>\n<li>字母越靠后越大</li>\n</ol>\n<p><font color=\"blue\">思考：如何比较两个中文汉字字符的大小？</font></p>\n<p>阿斯克码总共128个，包含符号、大小写英文字母、数字。阿斯克码是由美国人创建的，所以对于英文的支持非常好。后来随着计算机的普及，各个国家在使用计算机的时候，没办法使用本国文字，这样用起来非常困难。所以众多国家的科学家一起制定了一个更大的对照表，包含各个国家的文字符号，所以称之为万国码，也叫作unicode。</p>\n<p>其实unicode就是更大的阿斯克码。</p>\n<h3 id=\"字符串的基本操作\"><a href=\"#字符串的基本操作\" class=\"headerlink\" title=\"字符串的基本操作\"></a>字符串的基本操作</h3><p><font color=\"red\">字符串也可以通过下标获取字符</font></p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 输出下标为1的字符</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str[<span class=\"number\">1</span>]); <span class=\"comment\">// 好</span></span><br></pre></td></tr></table></figure>\n\n<p>每个字符都有对应的下标，所以，字符串也可以进行遍历。</p>\n<p><font color=\"red\">字符串是只读数据类型，不能添加新字符，不能修改字符串中的字符，不能删除某个字符</font></p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 修改下标为1的字符</span></span><br><span class=\"line\">str[<span class=\"number\">1</span>] = <span class=\"string\">&quot;帅&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// 你好吗</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串常见API\"><a href=\"#字符串常见API\" class=\"headerlink\" title=\"字符串常见API\"></a>字符串常见API</h3><h4 id=\"length属性\"><a href=\"#length属性\" class=\"headerlink\" title=\"length属性\"></a>length属性</h4><p>求字符串中字符的个数 - 字符串的长度</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.length</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;asdfvczx&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 输出字符串的长度</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.length);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"charAt方法\"><a href=\"#charAt方法\" class=\"headerlink\" title=\"charAt方法\"></a>charAt方法</h4><p>根据指定的下标获取对应的字符</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charAt(下标)</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdef&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 获取下标为3的字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// d</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：如果下标存在就返回对应的字符，如果下标不存在就返回空字符串</p>\n<h4 id=\"charCodeAt方法\"><a href=\"#charCodeAt方法\" class=\"headerlink\" title=\"charCodeAt方法\"></a>charCodeAt方法</h4><p>根据指定下标获取对应的字符的阿斯克码</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charCodeAt(下标);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdef&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 获取下标为3的字符的阿斯克码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.charCodeAt(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 97</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"String-fromCharCode方法\"><a href=\"#String-fromCharCode方法\" class=\"headerlink\" title=\"String.fromCharCode方法\"></a>String.fromCharCode方法</h4><p>根据指定的阿斯克码得到对应的字符</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String.fromCharCode(阿斯克码)</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取98对应的字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">98</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// b</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"indexOf方法\"><a href=\"#indexOf方法\" class=\"headerlink\" title=\"indexOf方法\"></a>indexOf方法</h4><p>查找字符或子字符串在大字符串中第一次出现的位置</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大字符串.indexOf(字符/子字符串[,开始查找的下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;i love you&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 找到o字符在str中第一次出现的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.indexOf(<span class=\"string\">&#x27;o&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1</li>\n<li>第二个参数可选项。表示从哪个下标开始查找</li>\n</ol>\n<h4 id=\"lastIndexOf方法\"><a href=\"#lastIndexOf方法\" class=\"headerlink\" title=\"lastIndexOf方法\"></a>lastIndexOf方法</h4><p>查找字符或子字符串在大字符串中最后一次出现的位置</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大字符串.lastIndexOf(字符/子字符串[,开始查找的下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;i love you&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 找到o字符在str中最后一次出现的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.lastIndexOf(<span class=\"string\">&#x27;o&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 8</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1</li>\n<li>第二个参数可选项。表示从哪个下标开始查找</li>\n</ol>\n<h4 id=\"substr方法\"><a href=\"#substr方法\" class=\"headerlink\" title=\"substr方法\"></a>substr方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.substr(开始下标[,截取长度])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略掉第二个参数，默认截取到字符串末尾。</li>\n<li>开始下标可以使用负数表示，从右往左的下标依次是-1，-2，。。。</li>\n<li>截取字符的时候都是从左向右截取的</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下表2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-5开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(-<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-1开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(-<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">// 吗</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：截取到最后也不满足长度的时候，就返回能截取到的所有字符</p>\n<h4 id=\"substring方法\"><a href=\"#substring方法\" class=\"headerlink\" title=\"substring方法\"></a>substring方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.substring(开始下标[，结束下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略掉第二个参数的话，默认截取到字符串末尾。</li>\n<li>截取的结果包含开始下标对应的字符，不包含结束下标对应的字符</li>\n<li>如果开始下标和结束下标相等，则返回空字符串；如果开始下标大于结束下标，则先交换两个参数，然后再截取；如果开始下标或结束下标为负数，则先将负数替换成0，然后再截取</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substring(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标2截取到下标-2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substring(<span class=\"number\">2</span>,-<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 你的</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">过程分析：</span></span><br><span class=\"line\"><span class=\"comment\">首先开始下标大于结束下标，所以先交换两个参数，相当于： str.substring(-2,2);</span></span><br><span class=\"line\"><span class=\"comment\">开始下标为负数，所以替换成0，相当于： str.substring(0,2);</span></span><br><span class=\"line\"><span class=\"comment\">所以结果为：你的</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slice方法\"><a href=\"#slice方法\" class=\"headerlink\" title=\"slice方法\"></a>slice方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.slice(开始下标[，结束下标]);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(<span class=\"number\">2</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略第二个参数默认截取到字符串的末尾</li>\n<li>返回的结果包含开始下标对应的字符，不包含结束下标对应的字符</li>\n<li>截取的时候，下标可以使用负数表示</li>\n<li>开始下标对应的字符一定要在结束下标对应的字符左边，否则返回空字符串。因为截取的顺序是从左向右的</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-5开始截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(-<span class=\"number\">5</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-1截取到下标-3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(-<span class=\"number\">1</span>,-<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 空</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"split方法\"><a href=\"#split方法\" class=\"headerlink\" title=\"split方法\"></a>split方法</h4><p>使用指定的分隔符将字符串分割成多部分组成数组</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.split([分隔符，[最后数组中要保留的个数]])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;open_door_now&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 以下划线为分隔符，分割字符串为数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;open&quot;, &quot;door&quot;, &quot;now&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>分隔符是可选项。如果省略了分隔符，则将整个字符串当做数组的元素，如果是空字符串，则会在每个字符中间进行分割</li>\n<li>要保留的个数是可选项。如果省略了个数，则返回全部的个数，如果加上个数，则是设置了数组中元素的个数。</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;open_door_now&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 省略分隔符将字符串分割为数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;open_door_now&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以空字符串进行分割字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;o&quot;, &quot;p&quot;, &quot;e&quot;, &quot;n&quot;, &quot;_&quot;, &quot;d&quot;, &quot;o&quot;, &quot;o&quot;, &quot;r&quot;, &quot;_&quot;, &quot;n&quot;, &quot;o&quot;, &quot;w&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以空字符串分割字符串，并在数组中保留4个元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;o&quot;, &quot;p&quot;, &quot;e&quot;, &quot;n&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"replace方法\"><a href=\"#replace方法\" class=\"headerlink\" title=\"replace方法\"></a>replace方法</h4><p>使用新的字符或子字符串替换原来在字符串中的一部分</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.replace(将要被替换的部分,要替换进来的新内容);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用&quot;眉毛&quot;将&quot;头发&quot;替换掉</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.replace(<span class=\"string\">&quot;头发&quot;</span>,<span class=\"string\">&quot;眉毛&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 你的眉毛还好吗</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：如果第一个参数是空字符串，则会将新内容拼接到原字符串前面</p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用&quot;眉毛&quot;将&quot;&quot;替换掉</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.replace(<span class=\"string\">&quot;&quot;</span>,<span class=\"string\">&quot;眉毛&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 眉毛你的头发还好吗</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"trim方法\"><a href=\"#trim方法\" class=\"headerlink\" title=\"trim方法\"></a>trim方法</h4><p>去除字符串左右两边的空白</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.trim();</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;    ab c  &#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 取出str左右两边的空白</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.trim();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// &#x27;ab c&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>去除的是左右两边的空白，不会去除字符串中间的空白</li>\n<li>只去除左边的空白使用：<code>trimLeft</code>方法；只去除右边的空白使用：<code>trimRight</code>方法</li>\n</ol>\n<h4 id=\"大小写转换方法\"><a href=\"#大小写转换方法\" class=\"headerlink\" title=\"大小写转换方法\"></a>大小写转换方法</h4><p>将字符串中所有小写字母转为大写字母，使用：<code>toUpperCase</code>方法</p>\n<p>将字符串中所有小写字母转为大写字母，使用：<code>toLowerCase</code>方法</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.toUpperCase(); # 转为大写</span><br><span class=\"line\">字符串.toLowerCase(); # 转为小写</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串案例\"><a href=\"#字符串案例\" class=\"headerlink\" title=\"字符串案例\"></a>字符串案例</h3><p>对象数组模糊查找 ：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1001</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/1.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;计算机&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1002</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/2.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;手机&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">20</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1003</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/3.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;电脑&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">30</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1004</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/4.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;显示器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">40</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1005</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/5.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;飞行器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">50</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1006</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/6.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;计时器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">60</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1007</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/7.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;笔记本&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">70</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1008</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/8.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;草稿本&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">80</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1009</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/9.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;公示牌&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1010</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/10.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;手机线&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">100</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">searchStr</span>(<span class=\"params\">search</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">t</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> t.name.indexOf(search)&gt;-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>找到字符串中 ‘’ 某个字出现过几次 第几位</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(str.indexOf(s,i) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    alert(str.indexOf(s,i))</span><br><span class=\"line\">    i = str.indexOf(s,i)+s.length</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><p>计算机产生之初，内部只能识别二进制数字，无法识别英文字母和符号。为了能让计算机识别字母、数字和符号，科学家们制定了一个对照表，字母、数字、符号跟二进制数字相对应，这样当人们输入字母的时候，计算机使用对应的二进制数字处理，这样就相当于计算机能识别字母、符号和数字了。这个对照表叫做ASCII，翻译成中文叫阿斯克码。</p>\n<h3 id=\"阿斯克码\"><a href=\"#阿斯克码\" class=\"headerlink\" title=\"阿斯克码\"></a>阿斯克码</h3><p>阿斯克码计算机中用得最广泛的字符集及其编码，是由美国国家标准局(ANSI)制定的ASCII码（American Standard Code for Information Interchange，美国标准信息交换码）。所以对于英文字母和符号的支持是很全面的。</p>\n<p>阿斯克码的具体内容如下：</p>\n<h3 id=\"ASCII控制字符\"><a href=\"#ASCII控制字符\" class=\"headerlink\" title=\"ASCII控制字符\"></a>ASCII控制字符</h3><table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>缩写</th>\n<th>可以显示的表示法</th>\n<th>名称/意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0000 0000</td>\n<td>0</td>\n<td>00</td>\n<td>NUL</td>\n<td>␀</td>\n<td>空字符（Null）</td>\n</tr>\n<tr>\n<td>0000 0001</td>\n<td>1</td>\n<td>01</td>\n<td>SOH</td>\n<td>␁</td>\n<td>标题开始</td>\n</tr>\n<tr>\n<td>0000 0010</td>\n<td>2</td>\n<td>02</td>\n<td>STX</td>\n<td>␂</td>\n<td>本文开始</td>\n</tr>\n<tr>\n<td>0000 0011</td>\n<td>3</td>\n<td>03</td>\n<td>ETX</td>\n<td>␃</td>\n<td>本文结束</td>\n</tr>\n<tr>\n<td>0000 0100</td>\n<td>4</td>\n<td>04</td>\n<td>EOT</td>\n<td>␄</td>\n<td>传输结束</td>\n</tr>\n<tr>\n<td>0000 0101</td>\n<td>5</td>\n<td>05</td>\n<td>ENQ</td>\n<td>␅</td>\n<td>请求</td>\n</tr>\n<tr>\n<td>0000 0110</td>\n<td>6</td>\n<td>06</td>\n<td>ACK</td>\n<td>␆</td>\n<td>确认回应</td>\n</tr>\n<tr>\n<td>0000 0111</td>\n<td>7</td>\n<td>07</td>\n<td>BEL</td>\n<td>␇</td>\n<td>响铃</td>\n</tr>\n<tr>\n<td>0000 1000</td>\n<td>8</td>\n<td>08</td>\n<td>BS</td>\n<td>␈</td>\n<td>退格</td>\n</tr>\n<tr>\n<td>0000 1001</td>\n<td>9</td>\n<td>09</td>\n<td>HT</td>\n<td>␉</td>\n<td>水平定位符号</td>\n</tr>\n<tr>\n<td>0000 1010</td>\n<td>10</td>\n<td>0A</td>\n<td>LF</td>\n<td>␊</td>\n<td>换行键</td>\n</tr>\n<tr>\n<td>0000 1011</td>\n<td>11</td>\n<td>0B</td>\n<td>VT</td>\n<td>␋</td>\n<td>垂直定位符号</td>\n</tr>\n<tr>\n<td>0000 1100</td>\n<td>12</td>\n<td>0C</td>\n<td>FF</td>\n<td>␌</td>\n<td>换页键</td>\n</tr>\n<tr>\n<td>0000 1101</td>\n<td>13</td>\n<td>0D</td>\n<td>CR</td>\n<td>␍</td>\n<td>归位键</td>\n</tr>\n<tr>\n<td>0000 1110</td>\n<td>14</td>\n<td>0E</td>\n<td>SO</td>\n<td>␎</td>\n<td>取消变换（Shift out）</td>\n</tr>\n<tr>\n<td>0000 1111</td>\n<td>15</td>\n<td>0F</td>\n<td>SI</td>\n<td>␏</td>\n<td>启用变换（Shift in）</td>\n</tr>\n<tr>\n<td>0001 0000</td>\n<td>16</td>\n<td>10</td>\n<td>DLE</td>\n<td>␐</td>\n<td>跳出数据通讯</td>\n</tr>\n<tr>\n<td>0001 0001</td>\n<td>17</td>\n<td>11</td>\n<td>DC1</td>\n<td>␑</td>\n<td>设备控制一（XON 启用软件速度控制）</td>\n</tr>\n<tr>\n<td>0001 0010</td>\n<td>18</td>\n<td>12</td>\n<td>DC2</td>\n<td>␒</td>\n<td>设备控制二</td>\n</tr>\n<tr>\n<td>0001 0011</td>\n<td>19</td>\n<td>13</td>\n<td>DC3</td>\n<td>␓</td>\n<td>设备控制三（XOFF 停用软件速度控制）</td>\n</tr>\n<tr>\n<td>0001 0100</td>\n<td>20</td>\n<td>14</td>\n<td>DC4</td>\n<td>␔</td>\n<td>设备控制四</td>\n</tr>\n<tr>\n<td>0001 0101</td>\n<td>21</td>\n<td>15</td>\n<td>NAK</td>\n<td>␕</td>\n<td>确认失败回应</td>\n</tr>\n<tr>\n<td>0001 0110</td>\n<td>22</td>\n<td>16</td>\n<td>SYN</td>\n<td>␖</td>\n<td>同步用暂停</td>\n</tr>\n<tr>\n<td>0001 0111</td>\n<td>23</td>\n<td>17</td>\n<td>ETB</td>\n<td>␗</td>\n<td>区块传输结束</td>\n</tr>\n<tr>\n<td>0001 1000</td>\n<td>24</td>\n<td>18</td>\n<td>CAN</td>\n<td>␘</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>0001 1001</td>\n<td>25</td>\n<td>19</td>\n<td>EM</td>\n<td>␙</td>\n<td>连接介质中断</td>\n</tr>\n<tr>\n<td>0001 1010</td>\n<td>26</td>\n<td>1A</td>\n<td>SUB</td>\n<td>␚</td>\n<td>替换</td>\n</tr>\n<tr>\n<td>0001 1011</td>\n<td>27</td>\n<td>1B</td>\n<td>ESC</td>\n<td>␛</td>\n<td>跳出</td>\n</tr>\n<tr>\n<td>0001 1100</td>\n<td>28</td>\n<td>1C</td>\n<td>FS</td>\n<td>␜</td>\n<td>文件分割符</td>\n</tr>\n<tr>\n<td>0001 1101</td>\n<td>29</td>\n<td>1D</td>\n<td>GS</td>\n<td>␝</td>\n<td>组群分隔符</td>\n</tr>\n<tr>\n<td>0001 1110</td>\n<td>30</td>\n<td>1E</td>\n<td>RS</td>\n<td>␞</td>\n<td>记录分隔符</td>\n</tr>\n<tr>\n<td>0001 1111</td>\n<td>31</td>\n<td>1F</td>\n<td>US</td>\n<td>␟</td>\n<td>单元分隔符</td>\n</tr>\n<tr>\n<td>0111 1111</td>\n<td>127</td>\n<td>7F</td>\n<td>DEL</td>\n<td>␡</td>\n<td>删除</td>\n</tr>\n</tbody></table>\n<h3 id=\"ASCII可显示字符\"><a href=\"#ASCII可显示字符\" class=\"headerlink\" title=\"ASCII可显示字符\"></a>ASCII可显示字符</h3><table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0010 0000</td>\n<td>32</td>\n<td>20</td>\n<td>（空格）(␠)</td>\n</tr>\n<tr>\n<td>0010 0001</td>\n<td>33</td>\n<td>21</td>\n<td>!</td>\n</tr>\n<tr>\n<td>0010 0010</td>\n<td>34</td>\n<td>22</td>\n<td>“</td>\n</tr>\n<tr>\n<td>0010 0011</td>\n<td>35</td>\n<td>23</td>\n<td>#</td>\n</tr>\n<tr>\n<td>0010 0100</td>\n<td>36</td>\n<td>24</td>\n<td>$</td>\n</tr>\n<tr>\n<td>0010 0101</td>\n<td>37</td>\n<td>25</td>\n<td>%</td>\n</tr>\n<tr>\n<td>0010 0110</td>\n<td>38</td>\n<td>26</td>\n<td>&amp;</td>\n</tr>\n<tr>\n<td>0010 0111</td>\n<td>39</td>\n<td>27</td>\n<td>‘</td>\n</tr>\n<tr>\n<td>0010 1000</td>\n<td>40</td>\n<td>28</td>\n<td>(</td>\n</tr>\n<tr>\n<td>0010 1001</td>\n<td>41</td>\n<td>29</td>\n<td>)</td>\n</tr>\n<tr>\n<td>0010 1010</td>\n<td>42</td>\n<td>2A</td>\n<td>*</td>\n</tr>\n<tr>\n<td>0010 1011</td>\n<td>43</td>\n<td>2B</td>\n<td>+</td>\n</tr>\n<tr>\n<td>0010 1100</td>\n<td>44</td>\n<td>2C</td>\n<td>,</td>\n</tr>\n<tr>\n<td>0010 1101</td>\n<td>45</td>\n<td>2D</td>\n<td>-</td>\n</tr>\n<tr>\n<td>0010 1110</td>\n<td>46</td>\n<td>2E</td>\n<td>.</td>\n</tr>\n<tr>\n<td>0010 1111</td>\n<td>47</td>\n<td>2F</td>\n<td>/</td>\n</tr>\n<tr>\n<td>0011 0000</td>\n<td>48</td>\n<td>30</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0011 0001</td>\n<td>49</td>\n<td>31</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0011 0010</td>\n<td>50</td>\n<td>32</td>\n<td>2</td>\n</tr>\n<tr>\n<td>0011 0011</td>\n<td>51</td>\n<td>33</td>\n<td>3</td>\n</tr>\n<tr>\n<td>0011 0100</td>\n<td>52</td>\n<td>34</td>\n<td>4</td>\n</tr>\n<tr>\n<td>0011 0101</td>\n<td>53</td>\n<td>35</td>\n<td>5</td>\n</tr>\n<tr>\n<td>0011 0110</td>\n<td>54</td>\n<td>36</td>\n<td>6</td>\n</tr>\n<tr>\n<td>0011 0111</td>\n<td>55</td>\n<td>37</td>\n<td>7</td>\n</tr>\n<tr>\n<td>0011 1000</td>\n<td>56</td>\n<td>38</td>\n<td>8</td>\n</tr>\n<tr>\n<td>0011 1001</td>\n<td>57</td>\n<td>39</td>\n<td>9</td>\n</tr>\n<tr>\n<td>0011 1010</td>\n<td>58</td>\n<td>3A</td>\n<td>:</td>\n</tr>\n<tr>\n<td>0011 1011</td>\n<td>59</td>\n<td>3B</td>\n<td>;</td>\n</tr>\n<tr>\n<td>0011 1100</td>\n<td>60</td>\n<td>3C</td>\n<td>&lt;</td>\n</tr>\n<tr>\n<td>0011 1101</td>\n<td>61</td>\n<td>3D</td>\n<td>=</td>\n</tr>\n<tr>\n<td>0011 1110</td>\n<td>62</td>\n<td>3E</td>\n<td>&gt;</td>\n</tr>\n<tr>\n<td>0011 1111</td>\n<td>63</td>\n<td>3F</td>\n<td>?</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0100 0000</td>\n<td>64</td>\n<td>40</td>\n<td>@</td>\n</tr>\n<tr>\n<td>0100 0001</td>\n<td>65</td>\n<td>41</td>\n<td>A</td>\n</tr>\n<tr>\n<td>0100 0010</td>\n<td>66</td>\n<td>42</td>\n<td>B</td>\n</tr>\n<tr>\n<td>0100 0011</td>\n<td>67</td>\n<td>43</td>\n<td>C</td>\n</tr>\n<tr>\n<td>0100 0100</td>\n<td>68</td>\n<td>44</td>\n<td>D</td>\n</tr>\n<tr>\n<td>0100 0101</td>\n<td>69</td>\n<td>45</td>\n<td>E</td>\n</tr>\n<tr>\n<td>0100 0110</td>\n<td>70</td>\n<td>46</td>\n<td>F</td>\n</tr>\n<tr>\n<td>0100 0111</td>\n<td>71</td>\n<td>47</td>\n<td>G</td>\n</tr>\n<tr>\n<td>0100 1000</td>\n<td>72</td>\n<td>48</td>\n<td>H</td>\n</tr>\n<tr>\n<td>0100 1001</td>\n<td>73</td>\n<td>49</td>\n<td>I</td>\n</tr>\n<tr>\n<td>0100 1010</td>\n<td>74</td>\n<td>4A</td>\n<td>J</td>\n</tr>\n<tr>\n<td>0100 1011</td>\n<td>75</td>\n<td>4B</td>\n<td>K</td>\n</tr>\n<tr>\n<td>0100 1100</td>\n<td>76</td>\n<td>4C</td>\n<td>L</td>\n</tr>\n<tr>\n<td>0100 1101</td>\n<td>77</td>\n<td>4D</td>\n<td>M</td>\n</tr>\n<tr>\n<td>0100 1110</td>\n<td>78</td>\n<td>4E</td>\n<td>N</td>\n</tr>\n<tr>\n<td>0100 1111</td>\n<td>79</td>\n<td>4F</td>\n<td>O</td>\n</tr>\n<tr>\n<td>0101 0000</td>\n<td>80</td>\n<td>50</td>\n<td>P</td>\n</tr>\n<tr>\n<td>0101 0001</td>\n<td>81</td>\n<td>51</td>\n<td>Q</td>\n</tr>\n<tr>\n<td>0101 0010</td>\n<td>82</td>\n<td>52</td>\n<td>R</td>\n</tr>\n<tr>\n<td>0101 0011</td>\n<td>83</td>\n<td>53</td>\n<td>S</td>\n</tr>\n<tr>\n<td>0101 0100</td>\n<td>84</td>\n<td>54</td>\n<td>T</td>\n</tr>\n<tr>\n<td>0101 0101</td>\n<td>85</td>\n<td>55</td>\n<td>U</td>\n</tr>\n<tr>\n<td>0101 0110</td>\n<td>86</td>\n<td>56</td>\n<td>V</td>\n</tr>\n<tr>\n<td>0101 0111</td>\n<td>87</td>\n<td>57</td>\n<td>W</td>\n</tr>\n<tr>\n<td>0101 1000</td>\n<td>88</td>\n<td>58</td>\n<td>X</td>\n</tr>\n<tr>\n<td>0101 1001</td>\n<td>89</td>\n<td>59</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>0101 1010</td>\n<td>90</td>\n<td>5A</td>\n<td>Z</td>\n</tr>\n<tr>\n<td>0101 1011</td>\n<td>91</td>\n<td>5B</td>\n<td>[</td>\n</tr>\n<tr>\n<td>0101 1100</td>\n<td>92</td>\n<td>5C</td>\n<td>\\</td>\n</tr>\n<tr>\n<td>0101 1101</td>\n<td>93</td>\n<td>5D</td>\n<td>]</td>\n</tr>\n<tr>\n<td>0101 1110</td>\n<td>94</td>\n<td>5E</td>\n<td>^</td>\n</tr>\n<tr>\n<td>0101 1111</td>\n<td>95</td>\n<td>5F</td>\n<td>_</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>二进制</th>\n<th>十进制</th>\n<th>十六进制</th>\n<th>图形</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0110 0000</td>\n<td>96</td>\n<td>60</td>\n<td>`</td>\n</tr>\n<tr>\n<td>0110 0001</td>\n<td>97</td>\n<td>61</td>\n<td>a</td>\n</tr>\n<tr>\n<td>0110 0010</td>\n<td>98</td>\n<td>62</td>\n<td>b</td>\n</tr>\n<tr>\n<td>0110 0011</td>\n<td>99</td>\n<td>63</td>\n<td>c</td>\n</tr>\n<tr>\n<td>0110 0100</td>\n<td>100</td>\n<td>64</td>\n<td>d</td>\n</tr>\n<tr>\n<td>0110 0101</td>\n<td>101</td>\n<td>65</td>\n<td>e</td>\n</tr>\n<tr>\n<td>0110 0110</td>\n<td>102</td>\n<td>66</td>\n<td>f</td>\n</tr>\n<tr>\n<td>0110 0111</td>\n<td>103</td>\n<td>67</td>\n<td>g</td>\n</tr>\n<tr>\n<td>0110 1000</td>\n<td>104</td>\n<td>68</td>\n<td>h</td>\n</tr>\n<tr>\n<td>0110 1001</td>\n<td>105</td>\n<td>69</td>\n<td>i</td>\n</tr>\n<tr>\n<td>0110 1010</td>\n<td>106</td>\n<td>6A</td>\n<td>j</td>\n</tr>\n<tr>\n<td>0110 1011</td>\n<td>107</td>\n<td>6B</td>\n<td>k</td>\n</tr>\n<tr>\n<td>0110 1100</td>\n<td>108</td>\n<td>6C</td>\n<td>l</td>\n</tr>\n<tr>\n<td>0110 1101</td>\n<td>109</td>\n<td>6D</td>\n<td>m</td>\n</tr>\n<tr>\n<td>0110 1110</td>\n<td>110</td>\n<td>6E</td>\n<td>n</td>\n</tr>\n<tr>\n<td>0110 1111</td>\n<td>111</td>\n<td>6F</td>\n<td>o</td>\n</tr>\n<tr>\n<td>0111 0000</td>\n<td>112</td>\n<td>70</td>\n<td>p</td>\n</tr>\n<tr>\n<td>0111 0001</td>\n<td>113</td>\n<td>71</td>\n<td>q</td>\n</tr>\n<tr>\n<td>0111 0010</td>\n<td>114</td>\n<td>72</td>\n<td>r</td>\n</tr>\n<tr>\n<td>0111 0011</td>\n<td>115</td>\n<td>73</td>\n<td>s</td>\n</tr>\n<tr>\n<td>0111 0100</td>\n<td>116</td>\n<td>74</td>\n<td>t</td>\n</tr>\n<tr>\n<td>0111 0101</td>\n<td>117</td>\n<td>75</td>\n<td>u</td>\n</tr>\n<tr>\n<td>0111 0110</td>\n<td>118</td>\n<td>76</td>\n<td>v</td>\n</tr>\n<tr>\n<td>0111 0111</td>\n<td>119</td>\n<td>77</td>\n<td>w</td>\n</tr>\n<tr>\n<td>0111 1000</td>\n<td>120</td>\n<td>78</td>\n<td>x</td>\n</tr>\n<tr>\n<td>0111 1001</td>\n<td>121</td>\n<td>79</td>\n<td>y</td>\n</tr>\n<tr>\n<td>0111 1010</td>\n<td>122</td>\n<td>7A</td>\n<td>z</td>\n</tr>\n<tr>\n<td>0111 1011</td>\n<td>123</td>\n<td>7B</td>\n<td>{</td>\n</tr>\n<tr>\n<td>0111 1100</td>\n<td>124</td>\n<td>7C</td>\n<td>|</td>\n</tr>\n<tr>\n<td>0111 1101</td>\n<td>125</td>\n<td>7D</td>\n<td>}</td>\n</tr>\n<tr>\n<td>0111 1110</td>\n<td>126</td>\n<td>7E</td>\n<td>~</td>\n</tr>\n</tbody></table>\n<p>为什么要学习阿斯克码？</p>\n<p>因为两个字符串也是可以比较大小的，比较的规则是逐字符进行比较，字符的大小由字符对应的阿斯克码决定。</p>\n<h3 id=\"字符串的比较\"><a href=\"#字符串的比较\" class=\"headerlink\" title=\"字符串的比较\"></a>字符串的比较</h3><p>我们曾经碰到过一个问题，接收到文本框的两个值，一个是”3”，另一个是”10”，这两个值进行大小比较的时候，结果是：<code>&quot;3&quot;&gt;&quot;10&quot; === true</code>，出现这个结果的原因是，两个字符串进行比较的时候，是逐字符进行比较，也就是字符”3”先和字符”1”进行比较，如果第一个字符相等再进行第二个字符的比较。</p>\n<p>从阿斯克码表中，可以找到字符”3”和字符”1”相对应的值，很明显，字符”3”是要大于字符”1”的。</p>\n<p>通过阿斯克码表，我们可以得出一些字符串比较的规律：</p>\n<ol>\n<li>字母比数字大</li>\n<li>小写字母比大写字母大</li>\n<li>字母越靠后越大</li>\n</ol>\n<p><font color=\"blue\">思考：如何比较两个中文汉字字符的大小？</font></p>\n<p>阿斯克码总共128个，包含符号、大小写英文字母、数字。阿斯克码是由美国人创建的，所以对于英文的支持非常好。后来随着计算机的普及，各个国家在使用计算机的时候，没办法使用本国文字，这样用起来非常困难。所以众多国家的科学家一起制定了一个更大的对照表，包含各个国家的文字符号，所以称之为万国码，也叫作unicode。</p>\n<p>其实unicode就是更大的阿斯克码。</p>\n<h3 id=\"字符串的基本操作\"><a href=\"#字符串的基本操作\" class=\"headerlink\" title=\"字符串的基本操作\"></a>字符串的基本操作</h3><p><font color=\"red\">字符串也可以通过下标获取字符</font></p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 输出下标为1的字符</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str[<span class=\"number\">1</span>]); <span class=\"comment\">// 好</span></span><br></pre></td></tr></table></figure>\n\n<p>每个字符都有对应的下标，所以，字符串也可以进行遍历。</p>\n<p><font color=\"red\">字符串是只读数据类型，不能添加新字符，不能修改字符串中的字符，不能删除某个字符</font></p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 修改下标为1的字符</span></span><br><span class=\"line\">str[<span class=\"number\">1</span>] = <span class=\"string\">&quot;帅&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// 你好吗</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串常见API\"><a href=\"#字符串常见API\" class=\"headerlink\" title=\"字符串常见API\"></a>字符串常见API</h3><h4 id=\"length属性\"><a href=\"#length属性\" class=\"headerlink\" title=\"length属性\"></a>length属性</h4><p>求字符串中字符的个数 - 字符串的长度</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.length</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;asdfvczx&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 输出字符串的长度</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.length);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"charAt方法\"><a href=\"#charAt方法\" class=\"headerlink\" title=\"charAt方法\"></a>charAt方法</h4><p>根据指定的下标获取对应的字符</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charAt(下标)</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdef&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 获取下标为3的字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// d</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：如果下标存在就返回对应的字符，如果下标不存在就返回空字符串</p>\n<h4 id=\"charCodeAt方法\"><a href=\"#charCodeAt方法\" class=\"headerlink\" title=\"charCodeAt方法\"></a>charCodeAt方法</h4><p>根据指定下标获取对应的字符的阿斯克码</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charCodeAt(下标);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;abcdef&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 获取下标为3的字符的阿斯克码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.charCodeAt(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 97</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"String-fromCharCode方法\"><a href=\"#String-fromCharCode方法\" class=\"headerlink\" title=\"String.fromCharCode方法\"></a>String.fromCharCode方法</h4><p>根据指定的阿斯克码得到对应的字符</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String.fromCharCode(阿斯克码)</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取98对应的字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = <span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">98</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// b</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"indexOf方法\"><a href=\"#indexOf方法\" class=\"headerlink\" title=\"indexOf方法\"></a>indexOf方法</h4><p>查找字符或子字符串在大字符串中第一次出现的位置</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大字符串.indexOf(字符/子字符串[,开始查找的下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;i love you&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 找到o字符在str中第一次出现的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.indexOf(<span class=\"string\">&#x27;o&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1</li>\n<li>第二个参数可选项。表示从哪个下标开始查找</li>\n</ol>\n<h4 id=\"lastIndexOf方法\"><a href=\"#lastIndexOf方法\" class=\"headerlink\" title=\"lastIndexOf方法\"></a>lastIndexOf方法</h4><p>查找字符或子字符串在大字符串中最后一次出现的位置</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">大字符串.lastIndexOf(字符/子字符串[,开始查找的下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;i love you&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 找到o字符在str中最后一次出现的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.lastIndexOf(<span class=\"string\">&#x27;o&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 8</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>如果找到这个字符在字符串中的位置，就返回这个字符对应的下标，如果找不到，就返回-1</li>\n<li>第二个参数可选项。表示从哪个下标开始查找</li>\n</ol>\n<h4 id=\"substr方法\"><a href=\"#substr方法\" class=\"headerlink\" title=\"substr方法\"></a>substr方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.substr(开始下标[,截取长度])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略掉第二个参数，默认截取到字符串末尾。</li>\n<li>开始下标可以使用负数表示，从右往左的下标依次是-1，-2，。。。</li>\n<li>截取字符的时候都是从左向右截取的</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下表2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-5开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(-<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-1开始截取2个字符</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(-<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">// 吗</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：截取到最后也不满足长度的时候，就返回能截取到的所有字符</p>\n<h4 id=\"substring方法\"><a href=\"#substring方法\" class=\"headerlink\" title=\"substring方法\"></a>substring方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.substring(开始下标[，结束下标])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substr(<span class=\"number\">2</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略掉第二个参数的话，默认截取到字符串末尾。</li>\n<li>截取的结果包含开始下标对应的字符，不包含结束下标对应的字符</li>\n<li>如果开始下标和结束下标相等，则返回空字符串；如果开始下标大于结束下标，则先交换两个参数，然后再截取；如果开始下标或结束下标为负数，则先将负数替换成0，然后再截取</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substring(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标2截取到下标-2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.substring(<span class=\"number\">2</span>,-<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 你的</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">过程分析：</span></span><br><span class=\"line\"><span class=\"comment\">首先开始下标大于结束下标，所以先交换两个参数，相当于： str.substring(-2,2);</span></span><br><span class=\"line\"><span class=\"comment\">开始下标为负数，所以替换成0，相当于： str.substring(0,2);</span></span><br><span class=\"line\"><span class=\"comment\">所以结果为：你的</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slice方法\"><a href=\"#slice方法\" class=\"headerlink\" title=\"slice方法\"></a>slice方法</h4><p>截取字符串</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.slice(开始下标[，结束下标]);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(<span class=\"number\">2</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>第二个参数是可选项。如果省略第二个参数默认截取到字符串的末尾</li>\n<li>返回的结果包含开始下标对应的字符，不包含结束下标对应的字符</li>\n<li>截取的时候，下标可以使用负数表示</li>\n<li>开始下标对应的字符一定要在结束下标对应的字符左边，否则返回空字符串。因为截取的顺序是从左向右的</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 从下标2开始截取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发还好吗</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-5开始截取到下标4</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(-<span class=\"number\">5</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 头发</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从下标-1截取到下标-3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.slice(-<span class=\"number\">1</span>,-<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 空</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"split方法\"><a href=\"#split方法\" class=\"headerlink\" title=\"split方法\"></a>split方法</h4><p>使用指定的分隔符将字符串分割成多部分组成数组</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.split([分隔符，[最后数组中要保留的个数]])</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;open_door_now&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 以下划线为分隔符，分割字符串为数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;open&quot;, &quot;door&quot;, &quot;now&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>分隔符是可选项。如果省略了分隔符，则将整个字符串当做数组的元素，如果是空字符串，则会在每个字符中间进行分割</li>\n<li>要保留的个数是可选项。如果省略了个数，则返回全部的个数，如果加上个数，则是设置了数组中元素的个数。</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;open_door_now&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 省略分隔符将字符串分割为数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;open_door_now&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以空字符串进行分割字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;o&quot;, &quot;p&quot;, &quot;e&quot;, &quot;n&quot;, &quot;_&quot;, &quot;d&quot;, &quot;o&quot;, &quot;o&quot;, &quot;r&quot;, &quot;_&quot;, &quot;n&quot;, &quot;o&quot;, &quot;w&quot;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以空字符串分割字符串，并在数组中保留4个元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">// [&quot;o&quot;, &quot;p&quot;, &quot;e&quot;, &quot;n&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"replace方法\"><a href=\"#replace方法\" class=\"headerlink\" title=\"replace方法\"></a>replace方法</h4><p>使用新的字符或子字符串替换原来在字符串中的一部分</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.replace(将要被替换的部分,要替换进来的新内容);</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用&quot;眉毛&quot;将&quot;头发&quot;替换掉</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.replace(<span class=\"string\">&quot;头发&quot;</span>,<span class=\"string\">&quot;眉毛&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 你的眉毛还好吗</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：如果第一个参数是空字符串，则会将新内容拼接到原字符串前面</p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;你的头发还好吗&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 使用&quot;眉毛&quot;将&quot;&quot;替换掉</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.replace(<span class=\"string\">&quot;&quot;</span>,<span class=\"string\">&quot;眉毛&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 眉毛你的头发还好吗</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"trim方法\"><a href=\"#trim方法\" class=\"headerlink\" title=\"trim方法\"></a>trim方法</h4><p>去除字符串左右两边的空白</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.trim();</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;    ab c  &#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 取出str左右两边的空白</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = str.trim();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// &#x27;ab c&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用说明：</p>\n<ol>\n<li>去除的是左右两边的空白，不会去除字符串中间的空白</li>\n<li>只去除左边的空白使用：<code>trimLeft</code>方法；只去除右边的空白使用：<code>trimRight</code>方法</li>\n</ol>\n<h4 id=\"大小写转换方法\"><a href=\"#大小写转换方法\" class=\"headerlink\" title=\"大小写转换方法\"></a>大小写转换方法</h4><p>将字符串中所有小写字母转为大写字母，使用：<code>toUpperCase</code>方法</p>\n<p>将字符串中所有小写字母转为大写字母，使用：<code>toLowerCase</code>方法</p>\n<p>语法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.toUpperCase(); # 转为大写</span><br><span class=\"line\">字符串.toLowerCase(); # 转为小写</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串案例\"><a href=\"#字符串案例\" class=\"headerlink\" title=\"字符串案例\"></a>字符串案例</h3><p>对象数组模糊查找 ：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1001</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/1.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;计算机&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1002</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/2.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;手机&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">20</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1003</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/3.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;电脑&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">30</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1004</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/4.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;显示器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">40</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1005</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/5.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;飞行器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">50</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1006</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/6.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;计时器&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">60</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1007</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/7.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;笔记本&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">70</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1008</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/8.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;草稿本&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">80</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1009</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/9.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;公示牌&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>:<span class=\"number\">1010</span>,<span class=\"attr\">icon</span>:<span class=\"string\">&quot;img/10.png&quot;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&quot;手机线&quot;</span>,<span class=\"attr\">num</span>:<span class=\"number\">1</span>,<span class=\"attr\">price</span>:<span class=\"number\">100</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">searchStr</span>(<span class=\"params\">search</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">t</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> t.name.indexOf(search)&gt;-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>找到字符串中 ‘’ 某个字出现过几次 第几位</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(str.indexOf(s,i) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    alert(str.indexOf(s,i))</span><br><span class=\"line\">    i = str.indexOf(s,i)+s.length</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckuayruup00086gfc7wjh68oy","category_id":"ckuayruuu000a6gfcdbgo3v5e","_id":"ckuayruv1000i6gfc9pl30ihy"},{"post_id":"ckuayruuz000e6gfc06vgelwi","category_id":"ckuayruuu000a6gfcdbgo3v5e","_id":"ckuayruv4000l6gfcfke0budh"},{"post_id":"ckuayruus00096gfc8gly7bfv","category_id":"ckuayruv0000f6gfcaej35jys","_id":"ckuayruv5000p6gfc5ozt33cf"},{"post_id":"ckuayruux000c6gfc1jpcfnjh","category_id":"ckuayruuu000a6gfcdbgo3v5e","_id":"ckuayruv7000r6gfc64nh6en1"},{"post_id":"ckuayruuy000d6gfc4it5cikn","category_id":"ckuayruv5000o6gfc90iu4bu6","_id":"ckuayruv8000w6gfcf5h102x5"}],"PostTag":[{"post_id":"ckuayruuz000e6gfc06vgelwi","tag_id":"ckuayruuw000b6gfcay6rdx11","_id":"ckuayruv1000h6gfcbuvtgqk9"},{"post_id":"ckuayruup00086gfc7wjh68oy","tag_id":"ckuayruuw000b6gfcay6rdx11","_id":"ckuayruv4000m6gfc3syh4j0c"},{"post_id":"ckuayruup00086gfc7wjh68oy","tag_id":"ckuayruv0000g6gfcdh3pgvvs","_id":"ckuayruv5000n6gfc9w5g63xa"},{"post_id":"ckuayruus00096gfc8gly7bfv","tag_id":"ckuayruv0000g6gfcdh3pgvvs","_id":"ckuayruv7000t6gfc4evc2alh"},{"post_id":"ckuayruus00096gfc8gly7bfv","tag_id":"ckuayruuw000b6gfcay6rdx11","_id":"ckuayruv8000u6gfc69jy7duy"},{"post_id":"ckuayruux000c6gfc1jpcfnjh","tag_id":"ckuayruuw000b6gfcay6rdx11","_id":"ckuayruv9000y6gfc36p48aed"},{"post_id":"ckuayruux000c6gfc1jpcfnjh","tag_id":"ckuayruv0000g6gfcdh3pgvvs","_id":"ckuayruv9000z6gfcdfjvaebn"},{"post_id":"ckuayruuy000d6gfc4it5cikn","tag_id":"ckuayruv8000x6gfca7p4d9uq","_id":"ckuayruv900106gfc0otqf7mc"}],"Tag":[{"name":"javascript","_id":"ckuayruuw000b6gfcay6rdx11"},{"name":"算法","_id":"ckuayruv0000g6gfcdh3pgvvs"},{"name":"资源","_id":"ckuayruv8000x6gfca7p4d9uq"}]}}